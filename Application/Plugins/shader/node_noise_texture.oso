OpenShadingLanguage 1.00
# Compiled by oslc 1.13.7.0
# options: -q -O2 -IF:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders -IF:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders -o F:/Repositories/blender_repo/build_windows_Cycles_x64_vc16_Release/intern/cycles/kernel/osl/shaders/node_noise_texture.oso
shader node_noise_texture
param	int	use_mapping	0		%read{1,1} %write{2147483647,-1}
param	matrix	mapping	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		%read{2,2} %write{2147483647,-1}
param	string	dimensions	"3D"		%read{9,3921} %write{2147483647,-1}
param	string	type	"fBM"		%read{32,6293} %write{2147483647,-1}
param	int	use_normalize	1		%read{124,6006} %write{2147483647,-1}
param	point	Vector	0 0 0		%read{0,0} %write{2147483647,-1}
param	float	W	0		%read{8,8} %write{2147483647,-1}
param	float	Scale	5		%read{7,8} %write{2147483647,-1}
param	float	Detail	2		%read{4,4} %write{2147483647,-1}
param	float	Roughness	0.5		%read{6,6} %write{2147483647,-1}
param	float	Offset	0		%read{171,6470} %write{2147483647,-1}
param	float	Gain	1		%read{176,6234} %write{2147483647,-1}
param	float	Lacunarity	2		%read{56,6414} %write{2147483647,-1}
param	float	Distortion	0		%read{13,4185} %write{2147483647,-1}
oparam	float	Fac	0		%read{2147483647,-1} %write{906,6481}
oparam	color	Color	0 0 0		%read{2147483647,-1} %write{905,6480}
local	float	___460_precision_correction	%read{27,893} %write{25,891}
local	float	___460_p	%read{28,894} %write{27,893}
local	float	___461_precision_correction.x	%read{948,2510} %write{939,2501} %mystruct{___461_precision_correction} %mystructfield{0}
local	float	___461_precision_correction.y	%read{949,2511} %write{940,2502} %mystruct{___461_precision_correction} %mystructfield{1}
local	float	___461_p.x	%read{950,2512} %write{948,2510} %mystruct{___461_p} %mystructfield{0}
local	float	___461_p.y	%read{950,2512} %write{949,2511} %mystruct{___461_p} %mystructfield{1}
local	point	___462_precision_correction	%read{2562,3907} %write{2560,3905}
local	point	___462_p	%read{2563,3908} %write{2562,3907}
local	float	___463_precision_correction.x	%read{3990,6464} %write{3975,6449} %mystruct{___463_precision_correction} %mystructfield{0}
local	float	___463_precision_correction.y	%read{3991,6465} %write{3976,6450} %mystruct{___463_precision_correction} %mystructfield{1}
local	float	___463_precision_correction.z	%read{3992,6466} %write{3977,6451} %mystruct{___463_precision_correction} %mystructfield{2}
local	float	___463_precision_correction.w	%read{3993,6467} %write{3978,6452} %mystruct{___463_precision_correction} %mystructfield{3}
local	float	___463_p.x	%read{3994,6468} %write{3990,6464} %mystruct{___463_p} %mystructfield{0}
local	float	___463_p.y	%read{3994,6468} %write{3991,6465} %mystruct{___463_p} %mystructfield{1}
local	float	___463_p.z	%read{3994,6468} %write{3992,6466} %mystruct{___463_p} %mystructfield{2}
local	float	___463_p.w	%read{3995,6469} %write{3993,6467} %mystruct{___463_p} %mystructfield{3}
local	float	___464_p	%read{88,698} %write{81,667}
local	float	___464_fscale	%read{88,698} %write{82,693}
local	float	___464_amp	%read{88,715} %write{83,693}
local	float	___464_maxamp	%read{88,723} %write{84,693}
local	float	___464_sum	%read{88,725} %write{85,693}
local	int	___465_i	%read{88,693} %write{87,693}
local	float	___466_t	%read{88,693} %write{88,693}
local	float	___464_rmd	%read{110,719} %write{109,695}
local	float	___467_t	%read{122,708} %write{121,707}
local	float	___467_sum2	%read{128,719} %write{123,709}
local	float	___469_p.x	%read{1087,2164} %write{1079,2107} %mystruct{___469_p} %mystructfield{0}
local	float	___469_p.y	%read{1087,2165} %write{1080,2108} %mystruct{___469_p} %mystructfield{1}
local	float	___469_fscale	%read{1087,2162} %write{1081,2155}
local	float	___469_amp	%read{1087,2198} %write{1082,2155}
local	float	___469_maxamp	%read{1087,2206} %write{1083,2155}
local	float	___469_sum	%read{1087,2208} %write{1084,2155}
local	int	___470_i	%read{1087,2155} %write{1086,2155}
local	float	___471_t	%read{1087,2155} %write{1087,2155}
local	float	___469_rmd	%read{1130,2202} %write{1129,2157}
local	float	___472_t	%read{1163,2191} %write{1162,2190}
local	float	___472_sum2	%read{1169,2202} %write{1164,2192}
local	point	___474_p	%read{2716,3616} %write{2709,3573}
local	float	___474_fscale	%read{2716,3616} %write{2710,3611}
local	float	___474_amp	%read{2716,3645} %write{2711,3611}
local	float	___474_maxamp	%read{2716,3653} %write{2712,3611}
local	float	___474_sum	%read{2716,3655} %write{2713,3611}
local	int	___475_i	%read{2716,3611} %write{2715,3611}
local	float	___476_t	%read{2716,3611} %write{2716,3611}
local	float	___474_rmd	%read{2750,3649} %write{2749,3613}
local	float	___477_t	%read{2774,3638} %write{2773,3637}
local	float	___477_sum2	%read{2780,3649} %write{2775,3639}
local	float	___479_p.x	%read{4333,5945} %write{4323,5861} %mystruct{___479_p} %mystructfield{0}
local	float	___479_p.y	%read{4333,5946} %write{4324,5862} %mystruct{___479_p} %mystructfield{1}
local	float	___479_p.z	%read{4333,5947} %write{4325,5863} %mystruct{___479_p} %mystructfield{2}
local	float	___479_p.w	%read{4333,5948} %write{4326,5864} %mystruct{___479_p} %mystructfield{3}
local	float	___479_fscale	%read{4333,5943} %write{4327,5934}
local	float	___479_amp	%read{4333,6000} %write{4328,5934}
local	float	___479_maxamp	%read{4333,6008} %write{4329,5934}
local	float	___479_sum	%read{4333,6010} %write{4330,5934}
local	int	___480_i	%read{4333,5934} %write{4332,5934}
local	float	___481_t	%read{4333,5934} %write{4333,5934}
local	float	___479_rmd	%read{4399,6004} %write{4398,5936}
local	float	___482_t	%read{4455,5993} %write{4454,5992}
local	float	___482_sum2	%read{4461,6004} %write{4456,5994}
local	float	___484_p	%read{40,656} %write{35,644}
local	float	___484_value	%read{40,662} %write{36,661}
local	float	___484_pwr	%read{40,649} %write{37,644}
local	int	___485_i	%read{40,644} %write{39,644}
local	float	___484_rmd	%read{61,649} %write{60,646}
local	float	___488_p.x	%read{1001,2093} %write{995,2068} %mystruct{___488_p} %mystructfield{0}
local	float	___488_p.y	%read{1001,2094} %write{996,2068} %mystruct{___488_p} %mystructfield{1}
local	float	___488_value	%read{1001,2102} %write{997,2101}
local	float	___488_pwr	%read{1001,2073} %write{998,2068}
local	int	___489_i	%read{1001,2068} %write{1000,2068}
local	float	___488_rmd	%read{1043,2073} %write{1042,2070}
local	point	___492_p	%read{2644,3562} %write{2639,3538}
local	float	___492_value	%read{2644,3568} %write{2640,3567}
local	float	___492_pwr	%read{2644,3543} %write{2641,3538}
local	int	___493_i	%read{2644,3538} %write{2643,3538}
local	float	___492_rmd	%read{2677,3543} %write{2676,3540}
local	float	___496_p.x	%read{4203,5842} %write{4195,5803} %mystruct{___496_p} %mystructfield{0}
local	float	___496_p.y	%read{4203,5843} %write{4196,5803} %mystruct{___496_p} %mystructfield{1}
local	float	___496_p.z	%read{4203,5844} %write{4197,5803} %mystruct{___496_p} %mystructfield{2}
local	float	___496_p.w	%read{4203,5845} %write{4198,5803} %mystruct{___496_p} %mystructfield{3}
local	float	___496_value	%read{4203,5856} %write{4199,5855}
local	float	___496_pwr	%read{4203,5808} %write{4200,5803}
local	int	___497_i	%read{4203,5803} %write{4202,5803}
local	float	___496_rmd	%read{4268,5808} %write{4267,5805}
local	float	___500_p	%read{264,892} %write{261,881}
local	float	___500_pwr	%read{276,896} %write{262,881}
local	float	___500_value	%read{276,900} %write{272,899}
local	int	___501_i	%read{276,881} %write{275,881}
local	float	___502_increment	%read{276,881} %write{276,881}
local	float	___500_rmd	%read{298,898} %write{297,883}
local	float	___503_increment	%read{312,898} %write{311,897}
local	float	___504_p.x	%read{1382,2507} %write{1378,2483} %mystruct{___504_p} %mystructfield{0}
local	float	___504_p.y	%read{1386,2508} %write{1379,2483} %mystruct{___504_p} %mystructfield{1}
local	float	___504_pwr	%read{1415,2514} %write{1380,2483}
local	float	___504_value	%read{1415,2518} %write{1406,2517}
local	int	___505_i	%read{1415,2483} %write{1414,2483}
local	float	___506_increment	%read{1415,2483} %write{1415,2483}
local	float	___504_rmd	%read{1458,2516} %write{1457,2485}
local	float	___507_increment	%read{1488,2516} %write{1487,2515}
local	point	___508_p	%read{2964,3906} %write{2961,3883}
local	float	___508_pwr	%read{2988,3910} %write{2962,3883}
local	float	___508_value	%read{2988,3914} %write{2984,3913}
local	int	___509_i	%read{2988,3883} %write{2987,3883}
local	float	___510_increment	%read{2988,3883} %write{2988,3883}
local	float	___508_rmd	%read{3022,3912} %write{3021,3885}
local	float	___511_increment	%read{3048,3912} %write{3047,3911}
local	float	___512_p.x	%read{4764,6459} %write{4758,6421} %mystruct{___512_p} %mystructfield{0}
local	float	___512_p.y	%read{4768,6460} %write{4759,6421} %mystruct{___512_p} %mystructfield{1}
local	float	___512_p.z	%read{4772,6461} %write{4760,6421} %mystruct{___512_p} %mystructfield{2}
local	float	___512_p.w	%read{4776,6462} %write{4761,6421} %mystruct{___512_p} %mystructfield{3}
local	float	___512_pwr	%read{4820,6471} %write{4762,6421}
local	float	___512_value	%read{4820,6475} %write{4807,6474}
local	int	___513_i	%read{4820,6421} %write{4819,6421}
local	float	___514_increment	%read{4820,6421} %write{4820,6421}
local	float	___512_rmd	%read{4886,6473} %write{4885,6423}
local	float	___515_increment	%read{4935,6473} %write{4934,6472}
local	float	___516_p	%read{151,785} %write{145,766}
local	float	___516_pwr	%read{151,789} %write{146,766}
local	float	___516_value	%read{151,793} %write{147,792}
local	float	___516_weight	%read{151,790} %write{148,778}
local	int	___517_i	%read{151,766} %write{150,766}
local	float	___518_signal	%read{151,766} %write{151,766}
local	float	___516_rmd	%read{183,790} %write{182,768}
local	float	___520_signal	%read{205,791} %write{203,789}
local	float	___522_p.x	%read{1193,2303} %write{1186,2271} %mystruct{___522_p} %mystructfield{0}
local	float	___522_p.y	%read{1193,2304} %write{1187,2271} %mystruct{___522_p} %mystructfield{1}
local	float	___522_pwr	%read{1193,2310} %write{1188,2271}
local	float	___522_value	%read{1193,2314} %write{1189,2313}
local	float	___522_weight	%read{1193,2311} %write{1190,2283}
local	int	___523_i	%read{1193,2271} %write{1192,2271}
local	float	___524_signal	%read{1193,2271} %write{1193,2271}
local	float	___522_rmd	%read{1246,2311} %write{1245,2273}
local	float	___526_signal	%read{1284,2312} %write{1282,2310}
local	point	___528_p	%read{2803,3739} %write{2797,3708}
local	float	___528_pwr	%read{2803,3743} %write{2798,3708}
local	float	___528_value	%read{2803,3747} %write{2799,3746}
local	float	___528_weight	%read{2803,3744} %write{2800,3720}
local	int	___529_i	%read{2803,3708} %write{2802,3708}
local	float	___530_signal	%read{2803,3708} %write{2803,3708}
local	float	___528_rmd	%read{2847,3744} %write{2846,3710}
local	float	___532_signal	%read{2881,3745} %write{2879,3743}
local	float	___534_p.x	%read{4487,6144} %write{4478,6098} %mystruct{___534_p} %mystructfield{0}
local	float	___534_p.y	%read{4487,6145} %write{4479,6098} %mystruct{___534_p} %mystructfield{1}
local	float	___534_p.z	%read{4487,6146} %write{4480,6098} %mystruct{___534_p} %mystructfield{2}
local	float	___534_p.w	%read{4487,6147} %write{4481,6098} %mystruct{___534_p} %mystructfield{3}
local	float	___534_pwr	%read{4487,6156} %write{4482,6098}
local	float	___534_value	%read{4487,6160} %write{4483,6159}
local	float	___534_weight	%read{4487,6157} %write{4484,6110}
local	int	___535_i	%read{4487,6098} %write{4486,6098}
local	float	___536_signal	%read{4487,6098} %write{4487,6098}
local	float	___534_rmd	%read{4563,6157} %write{4562,6100}
local	float	___538_signal	%read{4620,6158} %write{4618,6156}
local	float	___540_p	%read{215,841} %write{212,841}
local	float	___540_pwr	%read{230,841} %write{213,841}
local	float	___540_signal	%read{225,841} %write{224,841}
local	float	___540_value	%read{230,842} %write{226,841}
local	float	___540_weight	%read{230,841} %write{227,841}
local	int	___541_i	%read{230,841} %write{229,841}
local	float	___543_p.x	%read{1295,2400} %write{1291,2400} %mystruct{___543_p} %mystructfield{0}
local	float	___543_p.y	%read{1299,2400} %write{1292,2400} %mystruct{___543_p} %mystructfield{1}
local	float	___543_pwr	%read{1326,2400} %write{1293,2400}
local	float	___543_signal	%read{1321,2400} %write{1320,2400}
local	float	___543_value	%read{1326,2401} %write{1322,2400}
local	float	___543_weight	%read{1326,2400} %write{1323,2400}
local	int	___544_i	%read{1326,2400} %write{1325,2400}
local	point	___546_p	%read{2891,3819} %write{2888,3819}
local	float	___546_pwr	%read{2918,3819} %write{2889,3819}
local	float	___546_signal	%read{2913,3819} %write{2912,3819}
local	float	___546_value	%read{2918,3820} %write{2914,3819}
local	float	___546_weight	%read{2918,3819} %write{2915,3819}
local	int	___547_i	%read{2918,3819} %write{2917,3819}
local	float	___549_p.x	%read{4633,6290} %write{4627,6290} %mystruct{___549_p} %mystructfield{0}
local	float	___549_p.y	%read{4637,6290} %write{4628,6290} %mystruct{___549_p} %mystructfield{1}
local	float	___549_p.z	%read{4641,6290} %write{4629,6290} %mystruct{___549_p} %mystructfield{2}
local	float	___549_p.w	%read{4645,6290} %write{4630,6290} %mystruct{___549_p} %mystructfield{3}
local	float	___549_pwr	%read{4683,6290} %write{4631,6290}
local	float	___549_signal	%read{4678,6290} %write{4677,6290}
local	float	___549_value	%read{4683,6291} %write{4679,6290}
local	float	___549_weight	%read{4683,6290} %write{4680,6290}
local	int	___550_i	%read{4683,6290} %write{4682,6290}
local	float	___602_p	%read{19,616} %write{12,30}
local	float	___602_value	%read{905,906} %write{76,317}
local	float	___604_p.x	%read{924,2017} %write{912,989} %mystruct{___604_p} %mystructfield{0}
local	float	___604_p.y	%read{925,2018} %write{913,990} %mystruct{___604_p} %mystructfield{1}
local	float	___604_value	%read{2523,2524} %write{1074,1493}
local	point	___606_p	%read{2542,3498} %write{2528,2634}
local	float	___606_value	%read{3919,3920} %write{2704,3053}
local	float	___608_p.x	%read{3948,5725} %write{3928,4187} %mystruct{___608_p} %mystructfield{0}
local	float	___608_p.y	%read{3949,5726} %write{3929,4188} %mystruct{___608_p} %mystructfield{1}
local	float	___608_p.z	%read{3950,5727} %write{3930,4189} %mystruct{___608_p} %mystructfield{2}
local	float	___608_p.w	%read{3951,5728} %write{3931,4190} %mystruct{___608_p} %mystructfield{3}
local	float	___608_value	%read{6480,6481} %write{4318,4940}
local	point	p	%read{2,3925} %write{0,7}
local	float	detail	%read{40,6423} %write{5,5}
local	float	roughness	%read{40,6421} %write{6,6}
local	float	w	%read{12,3926} %write{8,8}
const	float	$const1	0		%read{5,6478} %write{2147483647,-1}
const	float	$const2	15		%read{4,4} %write{2147483647,-1}
const	string	$const3	"clamp"		%read{3,6235} %write{2147483647,-1}
temp	float	$tmp1	%read{5,5} %write{4,4}
const	string	$const4	"1D"		%read{9,9} %write{2147483647,-1}
temp	int	$tmp2	%read{10,10} %write{9,9}
const	string	$const5	"noise_texture"		%read{11,3927} %write{2147483647,-1}
temp	int	$tmp3	%read{14,14} %write{13,13}
temp	float	$tmp4	%read{29,29} %write{28,28}
temp	float	$tmp5	%read{19,19} %write{18,18}
const	string	$const6	"random_float_offset"		%read{15,612} %write{2147483647,-1}
const	float	$const7	100		%read{17,5723} %write{2147483647,-1}
temp	float	$tmp6	%read{17,17} %write{16,16}
const	string	$const8	"hash"		%read{16,5721} %write{2147483647,-1}
temp	float	$tmp7	%read{18,18} %write{17,17}
temp	float	$tmp8	%read{21,26} %write{19,19}
const	string	$const9	"safe_snoise"		%read{20,6426} %write{2147483647,-1}
const	float	$const10	0.5		%read{25,6447} %write{2147483647,-1}
temp	float	$tmp9	%read{25,25} %write{24,24}
temp	float	$tmp10	%read{22,22} %write{21,21}
const	float	$const11	1000000		%read{22,6440} %write{2147483647,-1}
temp	int	$tmp11	%read{23,23} %write{22,22}
temp	float	$tmp12	%read{24,24} %write{23,23}
temp	float	$tmp13	%read{27,27} %write{26,26}
const	float	$const12	100000		%read{26,6457} %write{2147483647,-1}
const	string	$const13	"snoise"		%read{28,6469} %write{2147483647,-1}
temp	float	$tmp14	%read{30,30} %write{29,29}
const	string	$const14	"noise_select"		%read{31,5729} %write{2147483647,-1}
const	string	$const15	"multifractal"		%read{32,5730} %write{2147483647,-1}
temp	int	$tmp15	%read{33,33} %write{32,32}
const	string	$const16	"noise_multi_fractal"		%read{34,5732} %write{2147483647,-1}
const	float	$const17	1		%read{36,6236} %write{2147483647,-1}
const	int	$const18	0		%read{39,6360} %write{2147483647,-1}
temp	int	$tmp16	%read{40,58} %write{40,58}
temp	int	$tmp17	%read{40,58} %write{40,58}
temp	int	$tmp18	%read{38,58} %write{39,58}
temp	float	$tmp19	%read{40,58} %write{40,58}
temp	float	$tmp20	%read{40,58} %write{40,58}
temp	float	$tmp21	%read{40,58} %write{40,58}
temp	int	$tmp22	%read{40,58} %write{40,58}
temp	float	$tmp23	%read{40,58} %write{40,58}
temp	float	$tmp24	%read{40,58} %write{40,58}
temp	float	$tmp25	%read{40,58} %write{40,58}
temp	float	$tmp26	%read{40,58} %write{40,58}
const	int	$const19	1		%read{58,6421} %write{2147483647,-1}
temp	int	$tmp27	%read{2147483647,-1} %write{40,58}
temp	float	$tmp28	%read{60,60} %write{59,59}
temp	int	$tmp29	%read{62,62} %write{61,61}
temp	float	$tmp30	%read{73,73} %write{63,63}
temp	float	$tmp31	%read{73,73} %write{72,72}
temp	float	$tmp32	%read{69,69} %write{68,68}
temp	float	$tmp33	%read{66,66} %write{65,65}
temp	int	$tmp34	%read{67,67} %write{66,66}
temp	float	$tmp35	%read{68,68} %write{67,67}
temp	float	$tmp36	%read{71,71} %write{70,70}
temp	float	$tmp37	%read{74,74} %write{73,73}
temp	float	$tmp38	%read{75,75} %write{74,74}
const	string	$const20	"fBM"		%read{78,5858} %write{2147483647,-1}
temp	int	$tmp39	%read{79,79} %write{78,78}
const	string	$const21	"noise_fbm"		%read{80,5860} %write{2147483647,-1}
temp	int	$tmp40	%read{88,107} %write{88,107}
temp	int	$tmp41	%read{88,107} %write{88,107}
temp	int	$tmp42	%read{86,107} %write{87,107}
temp	float	$tmp43	%read{88,107} %write{88,107}
temp	float	$tmp44	%read{88,107} %write{88,107}
temp	float	$tmp45	%read{88,107} %write{88,107}
temp	int	$tmp46	%read{88,107} %write{88,107}
temp	float	$tmp47	%read{88,107} %write{88,107}
temp	float	$tmp48	%read{88,107} %write{88,107}
temp	float	$tmp49	%read{88,107} %write{88,107}
temp	int	$tmp50	%read{2147483647,-1} %write{88,107}
temp	float	$tmp51	%read{109,109} %write{108,108}
temp	int	$tmp52	%read{111,111} %write{110,110}
temp	float	$tmp53	%read{114,119} %write{112,112}
temp	float	$tmp54	%read{118,118} %write{117,117}
temp	float	$tmp55	%read{115,115} %write{114,114}
temp	int	$tmp56	%read{116,116} %write{115,115}
temp	float	$tmp57	%read{117,117} %write{116,116}
temp	float	$tmp58	%read{120,120} %write{119,119}
temp	float	$tmp59	%read{123,123} %write{122,122}
temp	float	$tmp60	%read{126,126} %write{125,125}
temp	float	$tmp61	%read{127,127} %write{126,126}
temp	float	$tmp62	%read{132,132} %write{127,127}
temp	float	$tmp63	%read{130,130} %write{128,128}
temp	float	$tmp64	%read{130,130} %write{129,129}
temp	float	$tmp65	%read{131,131} %write{130,130}
temp	float	$tmp66	%read{132,132} %write{131,131}
temp	float	$tmp67	%read{137,137} %write{136,136}
temp	float	$tmp68	%read{138,138} %write{137,137}
const	string	$const22	"hybrid_multifractal"		%read{142,6013} %write{2147483647,-1}
temp	int	$tmp69	%read{143,143} %write{142,142}
const	string	$const23	"noise_hybrid_multi_fractal"		%read{144,6015} %write{2147483647,-1}
const	float	$const24	0.00100000005		%read{151,6104} %write{2147483647,-1}
temp	int	$tmp70	%read{151,180} %write{151,180}
temp	int	$tmp71	%read{151,180} %write{151,180}
temp	int	$tmp72	%read{151,180} %write{151,180}
temp	int	$tmp73	%read{151,180} %write{151,180}
temp	int	$tmp74	%read{151,180} %write{151,180}
temp	int	$tmp75	%read{149,180} %write{150,180}
temp	int	$tmp76	%read{151,180} %write{151,180}
temp	float	$tmp77	%read{151,180} %write{151,180}
temp	float	$tmp78	%read{151,180} %write{151,180}
temp	float	$tmp79	%read{151,180} %write{151,180}
temp	int	$tmp80	%read{151,180} %write{151,180}
temp	float	$tmp81	%read{151,180} %write{151,180}
temp	float	$tmp82	%read{151,180} %write{151,180}
temp	float	$tmp83	%read{151,180} %write{151,180}
temp	float	$tmp84	%read{151,180} %write{151,180}
temp	float	$tmp85	%read{151,180} %write{151,180}
temp	int	$tmp86	%read{2147483647,-1} %write{151,180}
temp	float	$tmp87	%read{182,182} %write{181,181}
temp	int	$tmp88	%read{184,184} %write{183,183}
temp	int	$tmp89	%read{185,189} %write{184,188}
temp	int	$tmp90	%read{187,187} %write{186,186}
temp	int	$tmp91	%read{188,188} %write{187,187}
temp	int	$tmp92	%read{191,191} %write{190,190}
temp	float	$tmp93	%read{202,202} %write{201,201}
temp	float	$tmp94	%read{198,198} %write{197,197}
temp	float	$tmp95	%read{195,195} %write{194,194}
temp	int	$tmp96	%read{196,196} %write{195,195}
temp	float	$tmp97	%read{197,197} %write{196,196}
temp	float	$tmp98	%read{200,200} %write{199,199}
temp	float	$tmp99	%read{203,203} %write{202,202}
temp	float	$tmp100	%read{205,205} %write{204,204}
temp	float	$tmp101	%read{206,206} %write{205,205}
const	string	$const25	"ridged_multifractal"		%read{209,6162} %write{2147483647,-1}
temp	int	$tmp102	%read{210,210} %write{209,209}
const	string	$const26	"noise_ridged_multi_fractal"		%read{211,6164} %write{2147483647,-1}
temp	float	$tmp103	%read{224,224} %write{223,223}
temp	float	$tmp104	%read{223,223} %write{222,222}
temp	float	$tmp105	%read{219,219} %write{218,218}
temp	float	$tmp106	%read{216,216} %write{215,215}
temp	int	$tmp107	%read{217,217} %write{216,216}
temp	float	$tmp108	%read{218,218} %write{217,217}
temp	float	$tmp109	%read{221,221} %write{220,220}
temp	int	$tmp110	%read{230,255} %write{230,255}
temp	int	$tmp111	%read{230,255} %write{230,255}
temp	int	$tmp112	%read{228,255} %write{229,255}
temp	float	$tmp113	%read{230,255} %write{230,255}
temp	float	$tmp114	%read{230,255} %write{230,255}
temp	float	$tmp115	%read{230,255} %write{230,255}
temp	float	$tmp116	%read{230,255} %write{230,255}
temp	float	$tmp117	%read{230,255} %write{230,255}
temp	float	$tmp118	%read{230,255} %write{230,255}
temp	int	$tmp119	%read{230,255} %write{230,255}
temp	float	$tmp120	%read{230,255} %write{230,255}
temp	float	$tmp121	%read{230,255} %write{230,255}
temp	float	$tmp122	%read{230,255} %write{230,255}
temp	int	$tmp123	%read{2147483647,-1} %write{230,255}
const	string	$const27	"hetero_terrain"		%read{258,6293} %write{2147483647,-1}
temp	int	$tmp124	%read{259,259} %write{258,258}
const	string	$const28	"noise_hetero_terrain"		%read{260,6295} %write{2147483647,-1}
temp	float	$tmp125	%read{272,272} %write{271,271}
temp	float	$tmp126	%read{268,268} %write{267,267}
temp	float	$tmp127	%read{265,265} %write{264,264}
temp	int	$tmp128	%read{266,266} %write{265,265}
temp	float	$tmp129	%read{267,267} %write{266,266}
temp	float	$tmp130	%read{270,270} %write{269,269}
temp	int	$tmp131	%read{276,295} %write{276,295}
temp	int	$tmp132	%read{276,295} %write{276,295}
temp	int	$tmp133	%read{274,295} %write{275,295}
temp	float	$tmp134	%read{276,295} %write{276,295}
temp	float	$tmp135	%read{276,295} %write{276,295}
temp	float	$tmp136	%read{276,295} %write{276,295}
temp	int	$tmp137	%read{276,295} %write{276,295}
temp	float	$tmp138	%read{276,295} %write{276,295}
temp	float	$tmp139	%read{276,295} %write{276,295}
temp	float	$tmp140	%read{276,295} %write{276,295}
temp	float	$tmp141	%read{276,295} %write{276,295}
temp	int	$tmp142	%read{2147483647,-1} %write{276,295}
temp	float	$tmp143	%read{297,297} %write{296,296}
temp	int	$tmp144	%read{299,299} %write{298,298}
temp	float	$tmp145	%read{309,309} %write{308,308}
temp	float	$tmp146	%read{305,305} %write{304,304}
temp	float	$tmp147	%read{302,302} %write{301,301}
temp	int	$tmp148	%read{303,303} %write{302,302}
temp	float	$tmp149	%read{304,304} %write{303,303}
temp	float	$tmp150	%read{307,307} %write{306,306}
temp	float	$tmp151	%read{310,310} %write{309,309}
temp	float	$tmp152	%read{311,311} %write{310,310}
temp	float	$tmp153	%read{313,313} %write{312,312}
const	string	$const29	"Unknown Type!"		%read{316,6477} %write{2147483647,-1}
temp	float	$tmp154	%read{905,905} %write{369,610}
temp	float	$tmp155	%read{323,323} %write{322,322}
temp	float	$tmp156	%read{321,321} %write{320,320}
temp	float	$tmp157	%read{322,322} %write{321,321}
temp	float	$tmp158	%read{328,554} %write{323,323}
temp	int	$tmp159	%read{326,326} %write{325,325}
temp	int	$tmp160	%read{333,351} %write{333,351}
temp	int	$tmp161	%read{333,351} %write{333,351}
temp	int	$tmp162	%read{331,351} %write{332,351}
temp	float	$tmp163	%read{333,351} %write{333,351}
temp	float	$tmp164	%read{333,351} %write{333,351}
temp	float	$tmp165	%read{333,351} %write{333,351}
temp	int	$tmp166	%read{333,351} %write{333,351}
temp	float	$tmp167	%read{333,351} %write{333,351}
temp	float	$tmp168	%read{333,351} %write{333,351}
temp	float	$tmp169	%read{333,351} %write{333,351}
temp	float	$tmp170	%read{333,351} %write{333,351}
temp	int	$tmp171	%read{2147483647,-1} %write{333,351}
temp	float	$tmp172	%read{353,353} %write{352,352}
temp	int	$tmp173	%read{355,355} %write{354,354}
temp	float	$tmp174	%read{366,366} %write{356,356}
temp	float	$tmp175	%read{366,366} %write{365,365}
temp	float	$tmp176	%read{362,362} %write{361,361}
temp	float	$tmp177	%read{359,359} %write{358,358}
temp	int	$tmp178	%read{360,360} %write{359,359}
temp	float	$tmp179	%read{361,361} %write{360,360}
temp	float	$tmp180	%read{364,364} %write{363,363}
temp	float	$tmp181	%read{367,367} %write{366,366}
temp	float	$tmp182	%read{368,368} %write{367,367}
temp	int	$tmp183	%read{372,372} %write{371,371}
temp	int	$tmp184	%read{381,400} %write{381,400}
temp	int	$tmp185	%read{381,400} %write{381,400}
temp	int	$tmp186	%read{379,400} %write{380,400}
temp	float	$tmp187	%read{381,400} %write{381,400}
temp	float	$tmp188	%read{381,400} %write{381,400}
temp	float	$tmp189	%read{381,400} %write{381,400}
temp	int	$tmp190	%read{381,400} %write{381,400}
temp	float	$tmp191	%read{381,400} %write{381,400}
temp	float	$tmp192	%read{381,400} %write{381,400}
temp	float	$tmp193	%read{381,400} %write{381,400}
temp	int	$tmp194	%read{2147483647,-1} %write{381,400}
temp	float	$tmp195	%read{402,402} %write{401,401}
temp	int	$tmp196	%read{404,404} %write{403,403}
temp	float	$tmp197	%read{407,412} %write{405,405}
temp	float	$tmp198	%read{411,411} %write{410,410}
temp	float	$tmp199	%read{408,408} %write{407,407}
temp	int	$tmp200	%read{409,409} %write{408,408}
temp	float	$tmp201	%read{410,410} %write{409,409}
temp	float	$tmp202	%read{413,413} %write{412,412}
temp	float	$tmp203	%read{416,416} %write{415,415}
temp	float	$tmp204	%read{419,419} %write{418,418}
temp	float	$tmp205	%read{420,420} %write{419,419}
temp	float	$tmp206	%read{425,425} %write{420,420}
temp	float	$tmp207	%read{423,423} %write{421,421}
temp	float	$tmp208	%read{423,423} %write{422,422}
temp	float	$tmp209	%read{424,424} %write{423,423}
temp	float	$tmp210	%read{425,425} %write{424,424}
temp	float	$tmp211	%read{430,430} %write{429,429}
temp	float	$tmp212	%read{431,431} %write{430,430}
temp	int	$tmp213	%read{436,436} %write{435,435}
temp	int	$tmp214	%read{444,473} %write{444,473}
temp	int	$tmp215	%read{444,473} %write{444,473}
temp	int	$tmp216	%read{444,473} %write{444,473}
temp	int	$tmp217	%read{444,473} %write{444,473}
temp	int	$tmp218	%read{444,473} %write{444,473}
temp	int	$tmp219	%read{442,473} %write{443,473}
temp	int	$tmp220	%read{444,473} %write{444,473}
temp	float	$tmp221	%read{444,473} %write{444,473}
temp	float	$tmp222	%read{444,473} %write{444,473}
temp	float	$tmp223	%read{444,473} %write{444,473}
temp	int	$tmp224	%read{444,473} %write{444,473}
temp	float	$tmp225	%read{444,473} %write{444,473}
temp	float	$tmp226	%read{444,473} %write{444,473}
temp	float	$tmp227	%read{444,473} %write{444,473}
temp	float	$tmp228	%read{444,473} %write{444,473}
temp	float	$tmp229	%read{444,473} %write{444,473}
temp	int	$tmp230	%read{2147483647,-1} %write{444,473}
temp	float	$tmp231	%read{475,475} %write{474,474}
temp	int	$tmp232	%read{477,477} %write{476,476}
temp	int	$tmp233	%read{478,482} %write{477,481}
temp	int	$tmp234	%read{480,480} %write{479,479}
temp	int	$tmp235	%read{481,481} %write{480,480}
temp	int	$tmp236	%read{484,484} %write{483,483}
temp	float	$tmp237	%read{495,495} %write{494,494}
temp	float	$tmp238	%read{491,491} %write{490,490}
temp	float	$tmp239	%read{488,488} %write{487,487}
temp	int	$tmp240	%read{489,489} %write{488,488}
temp	float	$tmp241	%read{490,490} %write{489,489}
temp	float	$tmp242	%read{493,493} %write{492,492}
temp	float	$tmp243	%read{496,496} %write{495,495}
temp	float	$tmp244	%read{498,498} %write{497,497}
temp	float	$tmp245	%read{499,499} %write{498,498}
temp	int	$tmp246	%read{503,503} %write{502,502}
temp	float	$tmp247	%read{517,517} %write{516,516}
temp	float	$tmp248	%read{516,516} %write{515,515}
temp	float	$tmp249	%read{512,512} %write{511,511}
temp	float	$tmp250	%read{509,509} %write{508,508}
temp	int	$tmp251	%read{510,510} %write{509,509}
temp	float	$tmp252	%read{511,511} %write{510,510}
temp	float	$tmp253	%read{514,514} %write{513,513}
temp	int	$tmp254	%read{523,548} %write{523,548}
temp	int	$tmp255	%read{523,548} %write{523,548}
temp	int	$tmp256	%read{521,548} %write{522,548}
temp	float	$tmp257	%read{523,548} %write{523,548}
temp	float	$tmp258	%read{523,548} %write{523,548}
temp	float	$tmp259	%read{523,548} %write{523,548}
temp	float	$tmp260	%read{523,548} %write{523,548}
temp	float	$tmp261	%read{523,548} %write{523,548}
temp	float	$tmp262	%read{523,548} %write{523,548}
temp	int	$tmp263	%read{523,548} %write{523,548}
temp	float	$tmp264	%read{523,548} %write{523,548}
temp	float	$tmp265	%read{523,548} %write{523,548}
temp	float	$tmp266	%read{523,548} %write{523,548}
temp	int	$tmp267	%read{2147483647,-1} %write{523,548}
temp	int	$tmp268	%read{552,552} %write{551,551}
temp	float	$tmp269	%read{565,565} %write{564,564}
temp	float	$tmp270	%read{561,561} %write{560,560}
temp	float	$tmp271	%read{558,558} %write{557,557}
temp	int	$tmp272	%read{559,559} %write{558,558}
temp	float	$tmp273	%read{560,560} %write{559,559}
temp	float	$tmp274	%read{563,563} %write{562,562}
temp	int	$tmp275	%read{569,588} %write{569,588}
temp	int	$tmp276	%read{569,588} %write{569,588}
temp	int	$tmp277	%read{567,588} %write{568,588}
temp	float	$tmp278	%read{569,588} %write{569,588}
temp	float	$tmp279	%read{569,588} %write{569,588}
temp	float	$tmp280	%read{569,588} %write{569,588}
temp	int	$tmp281	%read{569,588} %write{569,588}
temp	float	$tmp282	%read{569,588} %write{569,588}
temp	float	$tmp283	%read{569,588} %write{569,588}
temp	float	$tmp284	%read{569,588} %write{569,588}
temp	float	$tmp285	%read{569,588} %write{569,588}
temp	int	$tmp286	%read{2147483647,-1} %write{569,588}
temp	float	$tmp287	%read{590,590} %write{589,589}
temp	int	$tmp288	%read{592,592} %write{591,591}
temp	float	$tmp289	%read{602,602} %write{601,601}
temp	float	$tmp290	%read{598,598} %write{597,597}
temp	float	$tmp291	%read{595,595} %write{594,594}
temp	int	$tmp292	%read{596,596} %write{595,595}
temp	float	$tmp293	%read{597,597} %write{596,596}
temp	float	$tmp294	%read{600,600} %write{599,599}
temp	float	$tmp295	%read{603,603} %write{602,602}
temp	float	$tmp296	%read{604,604} %write{603,603}
temp	float	$tmp297	%read{606,606} %write{605,605}
temp	float	$tmp298	%read{905,905} %write{662,903}
temp	float	$tmp299	%read{616,616} %write{615,615}
const	float	$const30	2		%read{613,5718} %write{2147483647,-1}
temp	float	$tmp300	%read{614,614} %write{613,613}
temp	float	$tmp301	%read{615,615} %write{614,614}
temp	float	$tmp302	%read{621,847} %write{616,616}
temp	int	$tmp303	%read{619,619} %write{618,618}
temp	int	$tmp304	%read{626,644} %write{626,644}
temp	int	$tmp305	%read{626,644} %write{626,644}
temp	int	$tmp306	%read{624,644} %write{625,644}
temp	float	$tmp307	%read{626,644} %write{626,644}
temp	float	$tmp308	%read{626,644} %write{626,644}
temp	float	$tmp309	%read{626,644} %write{626,644}
temp	int	$tmp310	%read{626,644} %write{626,644}
temp	float	$tmp311	%read{626,644} %write{626,644}
temp	float	$tmp312	%read{626,644} %write{626,644}
temp	float	$tmp313	%read{626,644} %write{626,644}
temp	float	$tmp314	%read{626,644} %write{626,644}
temp	int	$tmp315	%read{2147483647,-1} %write{626,644}
temp	float	$tmp316	%read{646,646} %write{645,645}
temp	int	$tmp317	%read{648,648} %write{647,647}
temp	float	$tmp318	%read{659,659} %write{649,649}
temp	float	$tmp319	%read{659,659} %write{658,658}
temp	float	$tmp320	%read{655,655} %write{654,654}
temp	float	$tmp321	%read{652,652} %write{651,651}
temp	int	$tmp322	%read{653,653} %write{652,652}
temp	float	$tmp323	%read{654,654} %write{653,653}
temp	float	$tmp324	%read{657,657} %write{656,656}
temp	float	$tmp325	%read{660,660} %write{659,659}
temp	float	$tmp326	%read{661,661} %write{660,660}
temp	int	$tmp327	%read{665,665} %write{664,664}
temp	int	$tmp328	%read{674,693} %write{674,693}
temp	int	$tmp329	%read{674,693} %write{674,693}
temp	int	$tmp330	%read{672,693} %write{673,693}
temp	float	$tmp331	%read{674,693} %write{674,693}
temp	float	$tmp332	%read{674,693} %write{674,693}
temp	float	$tmp333	%read{674,693} %write{674,693}
temp	int	$tmp334	%read{674,693} %write{674,693}
temp	float	$tmp335	%read{674,693} %write{674,693}
temp	float	$tmp336	%read{674,693} %write{674,693}
temp	float	$tmp337	%read{674,693} %write{674,693}
temp	int	$tmp338	%read{2147483647,-1} %write{674,693}
temp	float	$tmp339	%read{695,695} %write{694,694}
temp	int	$tmp340	%read{697,697} %write{696,696}
temp	float	$tmp341	%read{700,705} %write{698,698}
temp	float	$tmp342	%read{704,704} %write{703,703}
temp	float	$tmp343	%read{701,701} %write{700,700}
temp	int	$tmp344	%read{702,702} %write{701,701}
temp	float	$tmp345	%read{703,703} %write{702,702}
temp	float	$tmp346	%read{706,706} %write{705,705}
temp	float	$tmp347	%read{709,709} %write{708,708}
temp	float	$tmp348	%read{712,712} %write{711,711}
temp	float	$tmp349	%read{713,713} %write{712,712}
temp	float	$tmp350	%read{718,718} %write{713,713}
temp	float	$tmp351	%read{716,716} %write{714,714}
temp	float	$tmp352	%read{716,716} %write{715,715}
temp	float	$tmp353	%read{717,717} %write{716,716}
temp	float	$tmp354	%read{718,718} %write{717,717}
temp	float	$tmp355	%read{723,723} %write{722,722}
temp	float	$tmp356	%read{724,724} %write{723,723}
temp	int	$tmp357	%read{729,729} %write{728,728}
temp	int	$tmp358	%read{737,766} %write{737,766}
temp	int	$tmp359	%read{737,766} %write{737,766}
temp	int	$tmp360	%read{737,766} %write{737,766}
temp	int	$tmp361	%read{737,766} %write{737,766}
temp	int	$tmp362	%read{737,766} %write{737,766}
temp	int	$tmp363	%read{735,766} %write{736,766}
temp	int	$tmp364	%read{737,766} %write{737,766}
temp	float	$tmp365	%read{737,766} %write{737,766}
temp	float	$tmp366	%read{737,766} %write{737,766}
temp	float	$tmp367	%read{737,766} %write{737,766}
temp	int	$tmp368	%read{737,766} %write{737,766}
temp	float	$tmp369	%read{737,766} %write{737,766}
temp	float	$tmp370	%read{737,766} %write{737,766}
temp	float	$tmp371	%read{737,766} %write{737,766}
temp	float	$tmp372	%read{737,766} %write{737,766}
temp	float	$tmp373	%read{737,766} %write{737,766}
temp	int	$tmp374	%read{2147483647,-1} %write{737,766}
temp	float	$tmp375	%read{768,768} %write{767,767}
temp	int	$tmp376	%read{770,770} %write{769,769}
temp	int	$tmp377	%read{771,775} %write{770,774}
temp	int	$tmp378	%read{773,773} %write{772,772}
temp	int	$tmp379	%read{774,774} %write{773,773}
temp	int	$tmp380	%read{777,777} %write{776,776}
temp	float	$tmp381	%read{788,788} %write{787,787}
temp	float	$tmp382	%read{784,784} %write{783,783}
temp	float	$tmp383	%read{781,781} %write{780,780}
temp	int	$tmp384	%read{782,782} %write{781,781}
temp	float	$tmp385	%read{783,783} %write{782,782}
temp	float	$tmp386	%read{786,786} %write{785,785}
temp	float	$tmp387	%read{789,789} %write{788,788}
temp	float	$tmp388	%read{791,791} %write{790,790}
temp	float	$tmp389	%read{792,792} %write{791,791}
temp	int	$tmp390	%read{796,796} %write{795,795}
temp	float	$tmp391	%read{810,810} %write{809,809}
temp	float	$tmp392	%read{809,809} %write{808,808}
temp	float	$tmp393	%read{805,805} %write{804,804}
temp	float	$tmp394	%read{802,802} %write{801,801}
temp	int	$tmp395	%read{803,803} %write{802,802}
temp	float	$tmp396	%read{804,804} %write{803,803}
temp	float	$tmp397	%read{807,807} %write{806,806}
temp	int	$tmp398	%read{816,841} %write{816,841}
temp	int	$tmp399	%read{816,841} %write{816,841}
temp	int	$tmp400	%read{814,841} %write{815,841}
temp	float	$tmp401	%read{816,841} %write{816,841}
temp	float	$tmp402	%read{816,841} %write{816,841}
temp	float	$tmp403	%read{816,841} %write{816,841}
temp	float	$tmp404	%read{816,841} %write{816,841}
temp	float	$tmp405	%read{816,841} %write{816,841}
temp	float	$tmp406	%read{816,841} %write{816,841}
temp	int	$tmp407	%read{816,841} %write{816,841}
temp	float	$tmp408	%read{816,841} %write{816,841}
temp	float	$tmp409	%read{816,841} %write{816,841}
temp	float	$tmp410	%read{816,841} %write{816,841}
temp	int	$tmp411	%read{2147483647,-1} %write{816,841}
temp	int	$tmp412	%read{845,845} %write{844,844}
temp	float	$tmp413	%read{858,858} %write{857,857}
temp	float	$tmp414	%read{854,854} %write{853,853}
temp	float	$tmp415	%read{851,851} %write{850,850}
temp	int	$tmp416	%read{852,852} %write{851,851}
temp	float	$tmp417	%read{853,853} %write{852,852}
temp	float	$tmp418	%read{856,856} %write{855,855}
temp	int	$tmp419	%read{862,881} %write{862,881}
temp	int	$tmp420	%read{862,881} %write{862,881}
temp	int	$tmp421	%read{860,881} %write{861,881}
temp	float	$tmp422	%read{862,881} %write{862,881}
temp	float	$tmp423	%read{862,881} %write{862,881}
temp	float	$tmp424	%read{862,881} %write{862,881}
temp	int	$tmp425	%read{862,881} %write{862,881}
temp	float	$tmp426	%read{862,881} %write{862,881}
temp	float	$tmp427	%read{862,881} %write{862,881}
temp	float	$tmp428	%read{862,881} %write{862,881}
temp	float	$tmp429	%read{862,881} %write{862,881}
temp	int	$tmp430	%read{2147483647,-1} %write{862,881}
temp	float	$tmp431	%read{883,883} %write{882,882}
temp	int	$tmp432	%read{885,885} %write{884,884}
temp	float	$tmp433	%read{895,895} %write{894,894}
temp	float	$tmp434	%read{891,891} %write{890,890}
temp	float	$tmp435	%read{888,888} %write{887,887}
temp	int	$tmp436	%read{889,889} %write{888,888}
temp	float	$tmp437	%read{890,890} %write{889,889}
temp	float	$tmp438	%read{893,893} %write{892,892}
temp	float	$tmp439	%read{896,896} %write{895,895}
temp	float	$tmp440	%read{897,897} %write{896,896}
temp	float	$tmp441	%read{899,899} %write{898,898}
const	string	$const31	"2D"		%read{907,907} %write{2147483647,-1}
temp	int	$tmp442	%read{908,908} %write{907,907}
temp	float	$tmp443.x	%read{912,912} %write{909,909}
temp	float	$tmp443.y	%read{913,913} %write{910,910}
temp	int	$tmp444	%read{915,915} %write{914,914}
temp	float	$tmp445.x	%read{989,989} %write{951,951}
temp	float	$tmp445.y	%read{990,990} %write{987,987}
temp	float	$tmp446	%read{951,951} %write{950,950}
temp	float	$tmp447.x	%read{927,945} %write{924,924}
temp	float	$tmp447.y	%read{931,946} %write{925,925}
temp	float	$tmp448.x	%read{924,924} %write{919,919}
temp	float	$tmp448.y	%read{925,925} %write{922,922}
const	string	$const32	"random_vector2_offset"		%read{916,2009} %write{2147483647,-1}
temp	float	$tmp449	%read{918,918} %write{917,917}
temp	float	$tmp450	%read{919,919} %write{918,918}
temp	float	$tmp451	%read{921,921} %write{920,920}
temp	float	$tmp452	%read{922,922} %write{921,921}
const	string	$const33	"__operator__add__"		%read{923,6463} %write{2147483647,-1}
temp	float	$tmp453.x	%read{939,939} %write{930,930}
temp	float	$tmp453.y	%read{940,940} %write{934,934}
temp	float	$tmp454	%read{928,928} %write{927,927}
temp	int	$tmp455	%read{929,929} %write{928,928}
temp	float	$tmp456	%read{930,930} %write{929,929}
temp	float	$tmp457	%read{932,932} %write{931,931}
temp	int	$tmp458	%read{933,933} %write{932,932}
temp	float	$tmp459	%read{934,934} %write{933,933}
const	string	$const34	"__operator__mul__"		%read{935,6448} %write{2147483647,-1}
temp	float	$tmp460.x	%read{939,939} %write{936,936}
temp	float	$tmp460.y	%read{940,940} %write{937,937}
temp	float	$tmp461.x	%read{948,948} %write{945,945}
temp	float	$tmp461.y	%read{949,949} %write{946,946}
const	string	$const35	"fmod"		%read{941,6458} %write{2147483647,-1}
temp	float	$tmp462.x	%read{945,945} %write{942,942}
temp	float	$tmp462.y	%read{946,946} %write{943,943}
temp	float	$tmp463	%read{987,987} %write{986,986}
temp	float	$tmp464.x	%read{963,981} %write{960,960}
temp	float	$tmp464.y	%read{967,982} %write{961,961}
temp	float	$tmp465.x	%read{960,960} %write{955,955}
temp	float	$tmp465.y	%read{961,961} %write{958,958}
temp	float	$tmp466	%read{954,954} %write{953,953}
temp	float	$tmp467	%read{955,955} %write{954,954}
temp	float	$tmp468	%read{957,957} %write{956,956}
temp	float	$tmp469	%read{958,958} %write{957,957}
temp	float	$tmp470.x	%read{975,975} %write{966,966}
temp	float	$tmp470.y	%read{976,976} %write{970,970}
temp	float	$tmp471	%read{964,964} %write{963,963}
temp	int	$tmp472	%read{965,965} %write{964,964}
temp	float	$tmp473	%read{966,966} %write{965,965}
temp	float	$tmp474	%read{968,968} %write{967,967}
temp	int	$tmp475	%read{969,969} %write{968,968}
temp	float	$tmp476	%read{970,970} %write{969,969}
temp	float	$tmp477.x	%read{975,975} %write{972,972}
temp	float	$tmp477.y	%read{976,976} %write{973,973}
temp	float	$tmp478.x	%read{984,984} %write{981,981}
temp	float	$tmp478.y	%read{985,985} %write{982,982}
temp	float	$tmp479.x	%read{981,981} %write{978,978}
temp	float	$tmp479.y	%read{982,982} %write{979,979}
temp	int	$tmp480	%read{993,993} %write{992,992}
temp	int	$tmp481	%read{1001,1040} %write{1001,1040}
temp	int	$tmp482	%read{1001,1040} %write{1001,1040}
temp	int	$tmp483	%read{999,1040} %write{1000,1040}
temp	float	$tmp484	%read{1001,1040} %write{1001,1040}
temp	float	$tmp485.x	%read{1001,1040} %write{1001,1040}
temp	float	$tmp485.y	%read{1001,1040} %write{1001,1040}
temp	float	$tmp486	%read{1001,1040} %write{1001,1040}
temp	int	$tmp487	%read{1001,1040} %write{1001,1040}
temp	float	$tmp488	%read{1001,1040} %write{1001,1040}
temp	float	$tmp489	%read{1001,1040} %write{1001,1040}
temp	int	$tmp490	%read{1001,1040} %write{1001,1040}
temp	float	$tmp491	%read{1001,1040} %write{1001,1040}
temp	float	$tmp492.x	%read{1001,1040} %write{1001,1040}
temp	float	$tmp492.y	%read{1001,1040} %write{1001,1040}
temp	float	$tmp493.x	%read{1001,1040} %write{1001,1040}
temp	float	$tmp493.y	%read{1001,1040} %write{1001,1040}
temp	float	$tmp494.x	%read{1001,1040} %write{1001,1040}
temp	float	$tmp494.y	%read{1001,1040} %write{1001,1040}
temp	float	$tmp495	%read{1001,1040} %write{1001,1040}
temp	float	$tmp496	%read{1001,1040} %write{1001,1040}
temp	float	$tmp497.x	%read{1001,1040} %write{1001,1040}
temp	float	$tmp497.y	%read{1001,1040} %write{1001,1040}
temp	int	$tmp498	%read{2147483647,-1} %write{1001,1040}
temp	float	$tmp499	%read{1042,1042} %write{1041,1041}
temp	int	$tmp500	%read{1044,1044} %write{1043,1043}
temp	float	$tmp501	%read{1071,1071} %write{1045,1045}
temp	float	$tmp502	%read{1071,1071} %write{1070,1070}
temp	float	$tmp503.x	%read{1059,1059} %write{1050,1050}
temp	float	$tmp503.y	%read{1060,1060} %write{1054,1054}
temp	float	$tmp504	%read{1048,1048} %write{1047,1047}
temp	int	$tmp505	%read{1049,1049} %write{1048,1048}
temp	float	$tmp506	%read{1050,1050} %write{1049,1049}
temp	float	$tmp507	%read{1052,1052} %write{1051,1051}
temp	int	$tmp508	%read{1053,1053} %write{1052,1052}
temp	float	$tmp509	%read{1054,1054} %write{1053,1053}
temp	float	$tmp510.x	%read{1059,1059} %write{1056,1056}
temp	float	$tmp510.y	%read{1060,1060} %write{1057,1057}
temp	float	$tmp511.x	%read{1068,1068} %write{1065,1065}
temp	float	$tmp511.y	%read{1069,1069} %write{1066,1066}
temp	float	$tmp512.x	%read{1065,1065} %write{1062,1062}
temp	float	$tmp512.y	%read{1066,1066} %write{1063,1063}
temp	float	$tmp513	%read{1072,1072} %write{1071,1071}
temp	float	$tmp514	%read{1073,1073} %write{1072,1072}
temp	int	$tmp515	%read{1077,1077} %write{1076,1076}
temp	int	$tmp516	%read{1087,1127} %write{1087,1127}
temp	int	$tmp517	%read{1087,1127} %write{1087,1127}
temp	int	$tmp518	%read{1085,1127} %write{1086,1127}
temp	float	$tmp519.x	%read{1087,1127} %write{1087,1127}
temp	float	$tmp519.y	%read{1087,1127} %write{1087,1127}
temp	float	$tmp520.x	%read{1087,1127} %write{1087,1127}
temp	float	$tmp520.y	%read{1087,1127} %write{1087,1127}
temp	float	$tmp521.x	%read{1087,1127} %write{1087,1127}
temp	float	$tmp521.y	%read{1087,1127} %write{1087,1127}
temp	float	$tmp522	%read{1087,1127} %write{1087,1127}
temp	int	$tmp523	%read{1087,1127} %write{1087,1127}
temp	float	$tmp524	%read{1087,1127} %write{1087,1127}
temp	float	$tmp525	%read{1087,1127} %write{1087,1127}
temp	int	$tmp526	%read{1087,1127} %write{1087,1127}
temp	float	$tmp527	%read{1087,1127} %write{1087,1127}
temp	float	$tmp528.x	%read{1087,1127} %write{1087,1127}
temp	float	$tmp528.y	%read{1087,1127} %write{1087,1127}
temp	float	$tmp529.x	%read{1087,1127} %write{1087,1127}
temp	float	$tmp529.y	%read{1087,1127} %write{1087,1127}
temp	float	$tmp530.x	%read{1087,1127} %write{1087,1127}
temp	float	$tmp530.y	%read{1087,1127} %write{1087,1127}
temp	float	$tmp531	%read{1087,1127} %write{1087,1127}
temp	int	$tmp532	%read{2147483647,-1} %write{1087,1127}
temp	float	$tmp533	%read{1129,1129} %write{1128,1128}
temp	int	$tmp534	%read{1131,1131} %write{1130,1130}
temp	float	$tmp535.x	%read{1139,1157} %write{1136,1136}
temp	float	$tmp535.y	%read{1143,1158} %write{1137,1137}
temp	float	$tmp536.x	%read{1136,1136} %write{1133,1133}
temp	float	$tmp536.y	%read{1137,1137} %write{1134,1134}
temp	float	$tmp537.x	%read{1151,1151} %write{1142,1142}
temp	float	$tmp537.y	%read{1152,1152} %write{1146,1146}
temp	float	$tmp538	%read{1140,1140} %write{1139,1139}
temp	int	$tmp539	%read{1141,1141} %write{1140,1140}
temp	float	$tmp540	%read{1142,1142} %write{1141,1141}
temp	float	$tmp541	%read{1144,1144} %write{1143,1143}
temp	int	$tmp542	%read{1145,1145} %write{1144,1144}
temp	float	$tmp543	%read{1146,1146} %write{1145,1145}
temp	float	$tmp544.x	%read{1151,1151} %write{1148,1148}
temp	float	$tmp544.y	%read{1152,1152} %write{1149,1149}
temp	float	$tmp545.x	%read{1160,1160} %write{1157,1157}
temp	float	$tmp545.y	%read{1161,1161} %write{1158,1158}
temp	float	$tmp546.x	%read{1157,1157} %write{1154,1154}
temp	float	$tmp546.y	%read{1158,1158} %write{1155,1155}
temp	float	$tmp547	%read{1164,1164} %write{1163,1163}
temp	float	$tmp548	%read{1167,1167} %write{1166,1166}
temp	float	$tmp549	%read{1168,1168} %write{1167,1167}
temp	float	$tmp550	%read{1173,1173} %write{1168,1168}
temp	float	$tmp551	%read{1171,1171} %write{1169,1169}
temp	float	$tmp552	%read{1171,1171} %write{1170,1170}
temp	float	$tmp553	%read{1172,1172} %write{1171,1171}
temp	float	$tmp554	%read{1173,1173} %write{1172,1172}
temp	float	$tmp555	%read{1178,1178} %write{1177,1177}
temp	float	$tmp556	%read{1179,1179} %write{1178,1178}
temp	int	$tmp557	%read{1184,1184} %write{1183,1183}
temp	int	$tmp558	%read{1193,1243} %write{1193,1243}
temp	int	$tmp559	%read{1193,1243} %write{1193,1243}
temp	int	$tmp560	%read{1193,1243} %write{1193,1243}
temp	int	$tmp561	%read{1193,1243} %write{1193,1243}
temp	int	$tmp562	%read{1193,1243} %write{1193,1243}
temp	int	$tmp563	%read{1191,1243} %write{1192,1243}
temp	int	$tmp564	%read{1193,1243} %write{1193,1243}
temp	float	$tmp565	%read{1193,1243} %write{1193,1243}
temp	float	$tmp566.x	%read{1193,1243} %write{1193,1243}
temp	float	$tmp566.y	%read{1193,1243} %write{1193,1243}
temp	float	$tmp567	%read{1193,1243} %write{1193,1243}
temp	int	$tmp568	%read{1193,1243} %write{1193,1243}
temp	float	$tmp569	%read{1193,1243} %write{1193,1243}
temp	float	$tmp570	%read{1193,1243} %write{1193,1243}
temp	int	$tmp571	%read{1193,1243} %write{1193,1243}
temp	float	$tmp572	%read{1193,1243} %write{1193,1243}
temp	float	$tmp573.x	%read{1193,1243} %write{1193,1243}
temp	float	$tmp573.y	%read{1193,1243} %write{1193,1243}
temp	float	$tmp574.x	%read{1193,1243} %write{1193,1243}
temp	float	$tmp574.y	%read{1193,1243} %write{1193,1243}
temp	float	$tmp575.x	%read{1193,1243} %write{1193,1243}
temp	float	$tmp575.y	%read{1193,1243} %write{1193,1243}
temp	float	$tmp576	%read{1193,1243} %write{1193,1243}
temp	float	$tmp577	%read{1193,1243} %write{1193,1243}
temp	float	$tmp578	%read{1193,1243} %write{1193,1243}
temp	float	$tmp579.x	%read{1193,1243} %write{1193,1243}
temp	float	$tmp579.y	%read{1193,1243} %write{1193,1243}
temp	int	$tmp580	%read{2147483647,-1} %write{1193,1243}
temp	float	$tmp581	%read{1245,1245} %write{1244,1244}
temp	int	$tmp582	%read{1247,1247} %write{1246,1246}
temp	int	$tmp583	%read{1248,1252} %write{1247,1251}
temp	int	$tmp584	%read{1250,1250} %write{1249,1249}
temp	int	$tmp585	%read{1251,1251} %write{1250,1250}
temp	int	$tmp586	%read{1254,1254} %write{1253,1253}
temp	float	$tmp587	%read{1281,1281} %write{1280,1280}
temp	float	$tmp588.x	%read{1269,1269} %write{1260,1260}
temp	float	$tmp588.y	%read{1270,1270} %write{1264,1264}
temp	float	$tmp589	%read{1258,1258} %write{1257,1257}
temp	int	$tmp590	%read{1259,1259} %write{1258,1258}
temp	float	$tmp591	%read{1260,1260} %write{1259,1259}
temp	float	$tmp592	%read{1262,1262} %write{1261,1261}
temp	int	$tmp593	%read{1263,1263} %write{1262,1262}
temp	float	$tmp594	%read{1264,1264} %write{1263,1263}
temp	float	$tmp595.x	%read{1269,1269} %write{1266,1266}
temp	float	$tmp595.y	%read{1270,1270} %write{1267,1267}
temp	float	$tmp596.x	%read{1278,1278} %write{1275,1275}
temp	float	$tmp596.y	%read{1279,1279} %write{1276,1276}
temp	float	$tmp597.x	%read{1275,1275} %write{1272,1272}
temp	float	$tmp597.y	%read{1276,1276} %write{1273,1273}
temp	float	$tmp598	%read{1282,1282} %write{1281,1281}
temp	float	$tmp599	%read{1284,1284} %write{1283,1283}
temp	float	$tmp600	%read{1285,1285} %write{1284,1284}
temp	int	$tmp601	%read{1289,1289} %write{1288,1288}
temp	float	$tmp602	%read{1320,1320} %write{1319,1319}
temp	float	$tmp603	%read{1319,1319} %write{1318,1318}
temp	float	$tmp604.x	%read{1307,1307} %write{1298,1298}
temp	float	$tmp604.y	%read{1308,1308} %write{1302,1302}
temp	float	$tmp605	%read{1296,1296} %write{1295,1295}
temp	int	$tmp606	%read{1297,1297} %write{1296,1296}
temp	float	$tmp607	%read{1298,1298} %write{1297,1297}
temp	float	$tmp608	%read{1300,1300} %write{1299,1299}
temp	int	$tmp609	%read{1301,1301} %write{1300,1300}
temp	float	$tmp610	%read{1302,1302} %write{1301,1301}
temp	float	$tmp611.x	%read{1307,1307} %write{1304,1304}
temp	float	$tmp611.y	%read{1308,1308} %write{1305,1305}
temp	float	$tmp612.x	%read{1316,1316} %write{1313,1313}
temp	float	$tmp612.y	%read{1317,1317} %write{1314,1314}
temp	float	$tmp613.x	%read{1313,1313} %write{1310,1310}
temp	float	$tmp613.y	%read{1314,1314} %write{1311,1311}
temp	int	$tmp614	%read{1326,1372} %write{1326,1372}
temp	int	$tmp615	%read{1326,1372} %write{1326,1372}
temp	int	$tmp616	%read{1324,1372} %write{1325,1372}
temp	float	$tmp617.x	%read{1326,1372} %write{1326,1372}
temp	float	$tmp617.y	%read{1326,1372} %write{1326,1372}
temp	float	$tmp618	%read{1326,1372} %write{1326,1372}
temp	float	$tmp619	%read{1326,1372} %write{1326,1372}
temp	float	$tmp620	%read{1326,1372} %write{1326,1372}
temp	float	$tmp621	%read{1326,1372} %write{1326,1372}
temp	float	$tmp622.x	%read{1326,1372} %write{1326,1372}
temp	float	$tmp622.y	%read{1326,1372} %write{1326,1372}
temp	float	$tmp623	%read{1326,1372} %write{1326,1372}
temp	int	$tmp624	%read{1326,1372} %write{1326,1372}
temp	float	$tmp625	%read{1326,1372} %write{1326,1372}
temp	float	$tmp626	%read{1326,1372} %write{1326,1372}
temp	int	$tmp627	%read{1326,1372} %write{1326,1372}
temp	float	$tmp628	%read{1326,1372} %write{1326,1372}
temp	float	$tmp629.x	%read{1326,1372} %write{1326,1372}
temp	float	$tmp629.y	%read{1326,1372} %write{1326,1372}
temp	float	$tmp630.x	%read{1326,1372} %write{1326,1372}
temp	float	$tmp630.y	%read{1326,1372} %write{1326,1372}
temp	float	$tmp631.x	%read{1326,1372} %write{1326,1372}
temp	float	$tmp631.y	%read{1326,1372} %write{1326,1372}
temp	float	$tmp632	%read{1326,1372} %write{1326,1372}
temp	int	$tmp633	%read{2147483647,-1} %write{1326,1372}
temp	int	$tmp634	%read{1376,1376} %write{1375,1375}
temp	float	$tmp635	%read{1406,1406} %write{1405,1405}
temp	float	$tmp636.x	%read{1394,1394} %write{1385,1385}
temp	float	$tmp636.y	%read{1395,1395} %write{1389,1389}
temp	float	$tmp637	%read{1383,1383} %write{1382,1382}
temp	int	$tmp638	%read{1384,1384} %write{1383,1383}
temp	float	$tmp639	%read{1385,1385} %write{1384,1384}
temp	float	$tmp640	%read{1387,1387} %write{1386,1386}
temp	int	$tmp641	%read{1388,1388} %write{1387,1387}
temp	float	$tmp642	%read{1389,1389} %write{1388,1388}
temp	float	$tmp643.x	%read{1394,1394} %write{1391,1391}
temp	float	$tmp643.y	%read{1395,1395} %write{1392,1392}
temp	float	$tmp644.x	%read{1403,1403} %write{1400,1400}
temp	float	$tmp644.y	%read{1404,1404} %write{1401,1401}
temp	float	$tmp645.x	%read{1400,1400} %write{1397,1397}
temp	float	$tmp645.y	%read{1401,1401} %write{1398,1398}
temp	float	$tmp646.x	%read{1411,1411} %write{1408,1408}
temp	float	$tmp646.y	%read{1412,1412} %write{1409,1409}
temp	int	$tmp647	%read{1415,1455} %write{1415,1455}
temp	int	$tmp648	%read{1415,1455} %write{1415,1455}
temp	int	$tmp649	%read{1413,1455} %write{1414,1455}
temp	float	$tmp650	%read{1415,1455} %write{1415,1455}
temp	float	$tmp651.x	%read{1415,1455} %write{1415,1455}
temp	float	$tmp651.y	%read{1415,1455} %write{1415,1455}
temp	float	$tmp652	%read{1415,1455} %write{1415,1455}
temp	int	$tmp653	%read{1415,1455} %write{1415,1455}
temp	float	$tmp654	%read{1415,1455} %write{1415,1455}
temp	float	$tmp655	%read{1415,1455} %write{1415,1455}
temp	int	$tmp656	%read{1415,1455} %write{1415,1455}
temp	float	$tmp657	%read{1415,1455} %write{1415,1455}
temp	float	$tmp658.x	%read{1415,1455} %write{1415,1455}
temp	float	$tmp658.y	%read{1415,1455} %write{1415,1455}
temp	float	$tmp659.x	%read{1415,1455} %write{1415,1455}
temp	float	$tmp659.y	%read{1415,1455} %write{1415,1455}
temp	float	$tmp660.x	%read{1415,1455} %write{1415,1455}
temp	float	$tmp660.y	%read{1415,1455} %write{1415,1455}
temp	float	$tmp661	%read{1415,1455} %write{1415,1455}
temp	float	$tmp662	%read{1415,1455} %write{1415,1455}
temp	float	$tmp663.x	%read{1415,1455} %write{1415,1455}
temp	float	$tmp663.y	%read{1415,1455} %write{1415,1455}
temp	int	$tmp664	%read{2147483647,-1} %write{1415,1455}
temp	float	$tmp665	%read{1457,1457} %write{1456,1456}
temp	int	$tmp666	%read{1459,1459} %write{1458,1458}
temp	float	$tmp667	%read{1485,1485} %write{1484,1484}
temp	float	$tmp668.x	%read{1473,1473} %write{1464,1464}
temp	float	$tmp668.y	%read{1474,1474} %write{1468,1468}
temp	float	$tmp669	%read{1462,1462} %write{1461,1461}
temp	int	$tmp670	%read{1463,1463} %write{1462,1462}
temp	float	$tmp671	%read{1464,1464} %write{1463,1463}
temp	float	$tmp672	%read{1466,1466} %write{1465,1465}
temp	int	$tmp673	%read{1467,1467} %write{1466,1466}
temp	float	$tmp674	%read{1468,1468} %write{1467,1467}
temp	float	$tmp675.x	%read{1473,1473} %write{1470,1470}
temp	float	$tmp675.y	%read{1474,1474} %write{1471,1471}
temp	float	$tmp676.x	%read{1482,1482} %write{1479,1479}
temp	float	$tmp676.y	%read{1483,1483} %write{1480,1480}
temp	float	$tmp677.x	%read{1479,1479} %write{1476,1476}
temp	float	$tmp677.y	%read{1480,1480} %write{1477,1477}
temp	float	$tmp678	%read{1486,1486} %write{1485,1485}
temp	float	$tmp679	%read{1487,1487} %write{1486,1486}
temp	float	$tmp680	%read{1489,1489} %write{1488,1488}
temp	float	$tmp681	%read{2523,2523} %write{1588,2007}
temp	float	$tmp682.x	%read{1509,1892} %write{1503,1503}
temp	float	$tmp682.y	%read{1510,1893} %write{1504,1504}
temp	float	$tmp683.x	%read{1503,1503} %write{1498,1498}
temp	float	$tmp683.y	%read{1504,1504} %write{1501,1501}
temp	float	$tmp684	%read{1497,1497} %write{1496,1496}
temp	float	$tmp685	%read{1498,1498} %write{1497,1497}
temp	float	$tmp686	%read{1500,1500} %write{1499,1499}
temp	float	$tmp687	%read{1501,1501} %write{1500,1500}
temp	int	$tmp688	%read{1507,1507} %write{1506,1506}
temp	int	$tmp689	%read{1515,1554} %write{1515,1554}
temp	int	$tmp690	%read{1515,1554} %write{1515,1554}
temp	int	$tmp691	%read{1513,1554} %write{1514,1554}
temp	float	$tmp692	%read{1515,1554} %write{1515,1554}
temp	float	$tmp693.x	%read{1515,1554} %write{1515,1554}
temp	float	$tmp693.y	%read{1515,1554} %write{1515,1554}
temp	float	$tmp694	%read{1515,1554} %write{1515,1554}
temp	int	$tmp695	%read{1515,1554} %write{1515,1554}
temp	float	$tmp696	%read{1515,1554} %write{1515,1554}
temp	float	$tmp697	%read{1515,1554} %write{1515,1554}
temp	int	$tmp698	%read{1515,1554} %write{1515,1554}
temp	float	$tmp699	%read{1515,1554} %write{1515,1554}
temp	float	$tmp700.x	%read{1515,1554} %write{1515,1554}
temp	float	$tmp700.y	%read{1515,1554} %write{1515,1554}
temp	float	$tmp701.x	%read{1515,1554} %write{1515,1554}
temp	float	$tmp701.y	%read{1515,1554} %write{1515,1554}
temp	float	$tmp702.x	%read{1515,1554} %write{1515,1554}
temp	float	$tmp702.y	%read{1515,1554} %write{1515,1554}
temp	float	$tmp703	%read{1515,1554} %write{1515,1554}
temp	float	$tmp704	%read{1515,1554} %write{1515,1554}
temp	float	$tmp705.x	%read{1515,1554} %write{1515,1554}
temp	float	$tmp705.y	%read{1515,1554} %write{1515,1554}
temp	int	$tmp706	%read{2147483647,-1} %write{1515,1554}
temp	float	$tmp707	%read{1556,1556} %write{1555,1555}
temp	int	$tmp708	%read{1558,1558} %write{1557,1557}
temp	float	$tmp709	%read{1585,1585} %write{1559,1559}
temp	float	$tmp710	%read{1585,1585} %write{1584,1584}
temp	float	$tmp711.x	%read{1573,1573} %write{1564,1564}
temp	float	$tmp711.y	%read{1574,1574} %write{1568,1568}
temp	float	$tmp712	%read{1562,1562} %write{1561,1561}
temp	int	$tmp713	%read{1563,1563} %write{1562,1562}
temp	float	$tmp714	%read{1564,1564} %write{1563,1563}
temp	float	$tmp715	%read{1566,1566} %write{1565,1565}
temp	int	$tmp716	%read{1567,1567} %write{1566,1566}
temp	float	$tmp717	%read{1568,1568} %write{1567,1567}
temp	float	$tmp718.x	%read{1573,1573} %write{1570,1570}
temp	float	$tmp718.y	%read{1574,1574} %write{1571,1571}
temp	float	$tmp719.x	%read{1582,1582} %write{1579,1579}
temp	float	$tmp719.y	%read{1583,1583} %write{1580,1580}
temp	float	$tmp720.x	%read{1579,1579} %write{1576,1576}
temp	float	$tmp720.y	%read{1580,1580} %write{1577,1577}
temp	float	$tmp721	%read{1586,1586} %write{1585,1585}
temp	float	$tmp722	%read{1587,1587} %write{1586,1586}
temp	int	$tmp723	%read{1591,1591} %write{1590,1590}
temp	int	$tmp724	%read{1601,1641} %write{1601,1641}
temp	int	$tmp725	%read{1601,1641} %write{1601,1641}
temp	int	$tmp726	%read{1599,1641} %write{1600,1641}
temp	float	$tmp727.x	%read{1601,1641} %write{1601,1641}
temp	float	$tmp727.y	%read{1601,1641} %write{1601,1641}
temp	float	$tmp728.x	%read{1601,1641} %write{1601,1641}
temp	float	$tmp728.y	%read{1601,1641} %write{1601,1641}
temp	float	$tmp729.x	%read{1601,1641} %write{1601,1641}
temp	float	$tmp729.y	%read{1601,1641} %write{1601,1641}
temp	float	$tmp730	%read{1601,1641} %write{1601,1641}
temp	int	$tmp731	%read{1601,1641} %write{1601,1641}
temp	float	$tmp732	%read{1601,1641} %write{1601,1641}
temp	float	$tmp733	%read{1601,1641} %write{1601,1641}
temp	int	$tmp734	%read{1601,1641} %write{1601,1641}
temp	float	$tmp735	%read{1601,1641} %write{1601,1641}
temp	float	$tmp736.x	%read{1601,1641} %write{1601,1641}
temp	float	$tmp736.y	%read{1601,1641} %write{1601,1641}
temp	float	$tmp737.x	%read{1601,1641} %write{1601,1641}
temp	float	$tmp737.y	%read{1601,1641} %write{1601,1641}
temp	float	$tmp738.x	%read{1601,1641} %write{1601,1641}
temp	float	$tmp738.y	%read{1601,1641} %write{1601,1641}
temp	float	$tmp739	%read{1601,1641} %write{1601,1641}
temp	int	$tmp740	%read{2147483647,-1} %write{1601,1641}
temp	float	$tmp741	%read{1643,1643} %write{1642,1642}
temp	int	$tmp742	%read{1645,1645} %write{1644,1644}
temp	float	$tmp743.x	%read{1653,1671} %write{1650,1650}
temp	float	$tmp743.y	%read{1657,1672} %write{1651,1651}
temp	float	$tmp744.x	%read{1650,1650} %write{1647,1647}
temp	float	$tmp744.y	%read{1651,1651} %write{1648,1648}
temp	float	$tmp745.x	%read{1665,1665} %write{1656,1656}
temp	float	$tmp745.y	%read{1666,1666} %write{1660,1660}
temp	float	$tmp746	%read{1654,1654} %write{1653,1653}
temp	int	$tmp747	%read{1655,1655} %write{1654,1654}
temp	float	$tmp748	%read{1656,1656} %write{1655,1655}
temp	float	$tmp749	%read{1658,1658} %write{1657,1657}
temp	int	$tmp750	%read{1659,1659} %write{1658,1658}
temp	float	$tmp751	%read{1660,1660} %write{1659,1659}
temp	float	$tmp752.x	%read{1665,1665} %write{1662,1662}
temp	float	$tmp752.y	%read{1666,1666} %write{1663,1663}
temp	float	$tmp753.x	%read{1674,1674} %write{1671,1671}
temp	float	$tmp753.y	%read{1675,1675} %write{1672,1672}
temp	float	$tmp754.x	%read{1671,1671} %write{1668,1668}
temp	float	$tmp754.y	%read{1672,1672} %write{1669,1669}
temp	float	$tmp755	%read{1678,1678} %write{1677,1677}
temp	float	$tmp756	%read{1681,1681} %write{1680,1680}
temp	float	$tmp757	%read{1682,1682} %write{1681,1681}
temp	float	$tmp758	%read{1687,1687} %write{1682,1682}
temp	float	$tmp759	%read{1685,1685} %write{1683,1683}
temp	float	$tmp760	%read{1685,1685} %write{1684,1684}
temp	float	$tmp761	%read{1686,1686} %write{1685,1685}
temp	float	$tmp762	%read{1687,1687} %write{1686,1686}
temp	float	$tmp763	%read{1692,1692} %write{1691,1691}
temp	float	$tmp764	%read{1693,1693} %write{1692,1692}
temp	int	$tmp765	%read{1698,1698} %write{1697,1697}
temp	int	$tmp766	%read{1707,1757} %write{1707,1757}
temp	int	$tmp767	%read{1707,1757} %write{1707,1757}
temp	int	$tmp768	%read{1707,1757} %write{1707,1757}
temp	int	$tmp769	%read{1707,1757} %write{1707,1757}
temp	int	$tmp770	%read{1707,1757} %write{1707,1757}
temp	int	$tmp771	%read{1705,1757} %write{1706,1757}
temp	int	$tmp772	%read{1707,1757} %write{1707,1757}
temp	float	$tmp773	%read{1707,1757} %write{1707,1757}
temp	float	$tmp774.x	%read{1707,1757} %write{1707,1757}
temp	float	$tmp774.y	%read{1707,1757} %write{1707,1757}
temp	float	$tmp775	%read{1707,1757} %write{1707,1757}
temp	int	$tmp776	%read{1707,1757} %write{1707,1757}
temp	float	$tmp777	%read{1707,1757} %write{1707,1757}
temp	float	$tmp778	%read{1707,1757} %write{1707,1757}
temp	int	$tmp779	%read{1707,1757} %write{1707,1757}
temp	float	$tmp780	%read{1707,1757} %write{1707,1757}
temp	float	$tmp781.x	%read{1707,1757} %write{1707,1757}
temp	float	$tmp781.y	%read{1707,1757} %write{1707,1757}
temp	float	$tmp782.x	%read{1707,1757} %write{1707,1757}
temp	float	$tmp782.y	%read{1707,1757} %write{1707,1757}
temp	float	$tmp783.x	%read{1707,1757} %write{1707,1757}
temp	float	$tmp783.y	%read{1707,1757} %write{1707,1757}
temp	float	$tmp784	%read{1707,1757} %write{1707,1757}
temp	float	$tmp785	%read{1707,1757} %write{1707,1757}
temp	float	$tmp786	%read{1707,1757} %write{1707,1757}
temp	float	$tmp787.x	%read{1707,1757} %write{1707,1757}
temp	float	$tmp787.y	%read{1707,1757} %write{1707,1757}
temp	int	$tmp788	%read{2147483647,-1} %write{1707,1757}
temp	float	$tmp789	%read{1759,1759} %write{1758,1758}
temp	int	$tmp790	%read{1761,1761} %write{1760,1760}
temp	int	$tmp791	%read{1762,1766} %write{1761,1765}
temp	int	$tmp792	%read{1764,1764} %write{1763,1763}
temp	int	$tmp793	%read{1765,1765} %write{1764,1764}
temp	int	$tmp794	%read{1768,1768} %write{1767,1767}
temp	float	$tmp795	%read{1795,1795} %write{1794,1794}
temp	float	$tmp796.x	%read{1783,1783} %write{1774,1774}
temp	float	$tmp796.y	%read{1784,1784} %write{1778,1778}
temp	float	$tmp797	%read{1772,1772} %write{1771,1771}
temp	int	$tmp798	%read{1773,1773} %write{1772,1772}
temp	float	$tmp799	%read{1774,1774} %write{1773,1773}
temp	float	$tmp800	%read{1776,1776} %write{1775,1775}
temp	int	$tmp801	%read{1777,1777} %write{1776,1776}
temp	float	$tmp802	%read{1778,1778} %write{1777,1777}
temp	float	$tmp803.x	%read{1783,1783} %write{1780,1780}
temp	float	$tmp803.y	%read{1784,1784} %write{1781,1781}
temp	float	$tmp804.x	%read{1792,1792} %write{1789,1789}
temp	float	$tmp804.y	%read{1793,1793} %write{1790,1790}
temp	float	$tmp805.x	%read{1789,1789} %write{1786,1786}
temp	float	$tmp805.y	%read{1790,1790} %write{1787,1787}
temp	float	$tmp806	%read{1796,1796} %write{1795,1795}
temp	float	$tmp807	%read{1798,1798} %write{1797,1797}
temp	float	$tmp808	%read{1799,1799} %write{1798,1798}
temp	int	$tmp809	%read{1803,1803} %write{1802,1802}
temp	float	$tmp810	%read{1834,1834} %write{1833,1833}
temp	float	$tmp811	%read{1833,1833} %write{1832,1832}
temp	float	$tmp812.x	%read{1821,1821} %write{1812,1812}
temp	float	$tmp812.y	%read{1822,1822} %write{1816,1816}
temp	float	$tmp813	%read{1810,1810} %write{1809,1809}
temp	int	$tmp814	%read{1811,1811} %write{1810,1810}
temp	float	$tmp815	%read{1812,1812} %write{1811,1811}
temp	float	$tmp816	%read{1814,1814} %write{1813,1813}
temp	int	$tmp817	%read{1815,1815} %write{1814,1814}
temp	float	$tmp818	%read{1816,1816} %write{1815,1815}
temp	float	$tmp819.x	%read{1821,1821} %write{1818,1818}
temp	float	$tmp819.y	%read{1822,1822} %write{1819,1819}
temp	float	$tmp820.x	%read{1830,1830} %write{1827,1827}
temp	float	$tmp820.y	%read{1831,1831} %write{1828,1828}
temp	float	$tmp821.x	%read{1827,1827} %write{1824,1824}
temp	float	$tmp821.y	%read{1828,1828} %write{1825,1825}
temp	int	$tmp822	%read{1840,1886} %write{1840,1886}
temp	int	$tmp823	%read{1840,1886} %write{1840,1886}
temp	int	$tmp824	%read{1838,1886} %write{1839,1886}
temp	float	$tmp825.x	%read{1840,1886} %write{1840,1886}
temp	float	$tmp825.y	%read{1840,1886} %write{1840,1886}
temp	float	$tmp826	%read{1840,1886} %write{1840,1886}
temp	float	$tmp827	%read{1840,1886} %write{1840,1886}
temp	float	$tmp828	%read{1840,1886} %write{1840,1886}
temp	float	$tmp829	%read{1840,1886} %write{1840,1886}
temp	float	$tmp830.x	%read{1840,1886} %write{1840,1886}
temp	float	$tmp830.y	%read{1840,1886} %write{1840,1886}
temp	float	$tmp831	%read{1840,1886} %write{1840,1886}
temp	int	$tmp832	%read{1840,1886} %write{1840,1886}
temp	float	$tmp833	%read{1840,1886} %write{1840,1886}
temp	float	$tmp834	%read{1840,1886} %write{1840,1886}
temp	int	$tmp835	%read{1840,1886} %write{1840,1886}
temp	float	$tmp836	%read{1840,1886} %write{1840,1886}
temp	float	$tmp837.x	%read{1840,1886} %write{1840,1886}
temp	float	$tmp837.y	%read{1840,1886} %write{1840,1886}
temp	float	$tmp838.x	%read{1840,1886} %write{1840,1886}
temp	float	$tmp838.y	%read{1840,1886} %write{1840,1886}
temp	float	$tmp839.x	%read{1840,1886} %write{1840,1886}
temp	float	$tmp839.y	%read{1840,1886} %write{1840,1886}
temp	float	$tmp840	%read{1840,1886} %write{1840,1886}
temp	int	$tmp841	%read{2147483647,-1} %write{1840,1886}
temp	int	$tmp842	%read{1890,1890} %write{1889,1889}
temp	float	$tmp843	%read{1920,1920} %write{1919,1919}
temp	float	$tmp844.x	%read{1908,1908} %write{1899,1899}
temp	float	$tmp844.y	%read{1909,1909} %write{1903,1903}
temp	float	$tmp845	%read{1897,1897} %write{1896,1896}
temp	int	$tmp846	%read{1898,1898} %write{1897,1897}
temp	float	$tmp847	%read{1899,1899} %write{1898,1898}
temp	float	$tmp848	%read{1901,1901} %write{1900,1900}
temp	int	$tmp849	%read{1902,1902} %write{1901,1901}
temp	float	$tmp850	%read{1903,1903} %write{1902,1902}
temp	float	$tmp851.x	%read{1908,1908} %write{1905,1905}
temp	float	$tmp851.y	%read{1909,1909} %write{1906,1906}
temp	float	$tmp852.x	%read{1917,1917} %write{1914,1914}
temp	float	$tmp852.y	%read{1918,1918} %write{1915,1915}
temp	float	$tmp853.x	%read{1914,1914} %write{1911,1911}
temp	float	$tmp853.y	%read{1915,1915} %write{1912,1912}
temp	float	$tmp854.x	%read{1925,1925} %write{1922,1922}
temp	float	$tmp854.y	%read{1926,1926} %write{1923,1923}
temp	int	$tmp855	%read{1929,1969} %write{1929,1969}
temp	int	$tmp856	%read{1929,1969} %write{1929,1969}
temp	int	$tmp857	%read{1927,1969} %write{1928,1969}
temp	float	$tmp858	%read{1929,1969} %write{1929,1969}
temp	float	$tmp859.x	%read{1929,1969} %write{1929,1969}
temp	float	$tmp859.y	%read{1929,1969} %write{1929,1969}
temp	float	$tmp860	%read{1929,1969} %write{1929,1969}
temp	int	$tmp861	%read{1929,1969} %write{1929,1969}
temp	float	$tmp862	%read{1929,1969} %write{1929,1969}
temp	float	$tmp863	%read{1929,1969} %write{1929,1969}
temp	int	$tmp864	%read{1929,1969} %write{1929,1969}
temp	float	$tmp865	%read{1929,1969} %write{1929,1969}
temp	float	$tmp866.x	%read{1929,1969} %write{1929,1969}
temp	float	$tmp866.y	%read{1929,1969} %write{1929,1969}
temp	float	$tmp867.x	%read{1929,1969} %write{1929,1969}
temp	float	$tmp867.y	%read{1929,1969} %write{1929,1969}
temp	float	$tmp868.x	%read{1929,1969} %write{1929,1969}
temp	float	$tmp868.y	%read{1929,1969} %write{1929,1969}
temp	float	$tmp869	%read{1929,1969} %write{1929,1969}
temp	float	$tmp870	%read{1929,1969} %write{1929,1969}
temp	float	$tmp871.x	%read{1929,1969} %write{1929,1969}
temp	float	$tmp871.y	%read{1929,1969} %write{1929,1969}
temp	int	$tmp872	%read{2147483647,-1} %write{1929,1969}
temp	float	$tmp873	%read{1971,1971} %write{1970,1970}
temp	int	$tmp874	%read{1973,1973} %write{1972,1972}
temp	float	$tmp875	%read{1999,1999} %write{1998,1998}
temp	float	$tmp876.x	%read{1987,1987} %write{1978,1978}
temp	float	$tmp876.y	%read{1988,1988} %write{1982,1982}
temp	float	$tmp877	%read{1976,1976} %write{1975,1975}
temp	int	$tmp878	%read{1977,1977} %write{1976,1976}
temp	float	$tmp879	%read{1978,1978} %write{1977,1977}
temp	float	$tmp880	%read{1980,1980} %write{1979,1979}
temp	int	$tmp881	%read{1981,1981} %write{1980,1980}
temp	float	$tmp882	%read{1982,1982} %write{1981,1981}
temp	float	$tmp883.x	%read{1987,1987} %write{1984,1984}
temp	float	$tmp883.y	%read{1988,1988} %write{1985,1985}
temp	float	$tmp884.x	%read{1996,1996} %write{1993,1993}
temp	float	$tmp884.y	%read{1997,1997} %write{1994,1994}
temp	float	$tmp885.x	%read{1993,1993} %write{1990,1990}
temp	float	$tmp885.y	%read{1994,1994} %write{1991,1991}
temp	float	$tmp886	%read{2000,2000} %write{1999,1999}
temp	float	$tmp887	%read{2001,2001} %write{2000,2000}
temp	float	$tmp888	%read{2003,2003} %write{2002,2002}
temp	float	$tmp889	%read{2523,2523} %write{2102,2521}
temp	float	$tmp890.x	%read{2023,2406} %write{2017,2017}
temp	float	$tmp890.y	%read{2024,2407} %write{2018,2018}
temp	float	$tmp891.x	%read{2017,2017} %write{2012,2012}
temp	float	$tmp891.y	%read{2018,2018} %write{2015,2015}
const	float	$const36	3		%read{2010,5721} %write{2147483647,-1}
temp	float	$tmp892	%read{2011,2011} %write{2010,2010}
temp	float	$tmp893	%read{2012,2012} %write{2011,2011}
temp	float	$tmp894	%read{2014,2014} %write{2013,2013}
temp	float	$tmp895	%read{2015,2015} %write{2014,2014}
temp	int	$tmp896	%read{2021,2021} %write{2020,2020}
temp	int	$tmp897	%read{2029,2068} %write{2029,2068}
temp	int	$tmp898	%read{2029,2068} %write{2029,2068}
temp	int	$tmp899	%read{2027,2068} %write{2028,2068}
temp	float	$tmp900	%read{2029,2068} %write{2029,2068}
temp	float	$tmp901.x	%read{2029,2068} %write{2029,2068}
temp	float	$tmp901.y	%read{2029,2068} %write{2029,2068}
temp	float	$tmp902	%read{2029,2068} %write{2029,2068}
temp	int	$tmp903	%read{2029,2068} %write{2029,2068}
temp	float	$tmp904	%read{2029,2068} %write{2029,2068}
temp	float	$tmp905	%read{2029,2068} %write{2029,2068}
temp	int	$tmp906	%read{2029,2068} %write{2029,2068}
temp	float	$tmp907	%read{2029,2068} %write{2029,2068}
temp	float	$tmp908.x	%read{2029,2068} %write{2029,2068}
temp	float	$tmp908.y	%read{2029,2068} %write{2029,2068}
temp	float	$tmp909.x	%read{2029,2068} %write{2029,2068}
temp	float	$tmp909.y	%read{2029,2068} %write{2029,2068}
temp	float	$tmp910.x	%read{2029,2068} %write{2029,2068}
temp	float	$tmp910.y	%read{2029,2068} %write{2029,2068}
temp	float	$tmp911	%read{2029,2068} %write{2029,2068}
temp	float	$tmp912	%read{2029,2068} %write{2029,2068}
temp	float	$tmp913.x	%read{2029,2068} %write{2029,2068}
temp	float	$tmp913.y	%read{2029,2068} %write{2029,2068}
temp	int	$tmp914	%read{2147483647,-1} %write{2029,2068}
temp	float	$tmp915	%read{2070,2070} %write{2069,2069}
temp	int	$tmp916	%read{2072,2072} %write{2071,2071}
temp	float	$tmp917	%read{2099,2099} %write{2073,2073}
temp	float	$tmp918	%read{2099,2099} %write{2098,2098}
temp	float	$tmp919.x	%read{2087,2087} %write{2078,2078}
temp	float	$tmp919.y	%read{2088,2088} %write{2082,2082}
temp	float	$tmp920	%read{2076,2076} %write{2075,2075}
temp	int	$tmp921	%read{2077,2077} %write{2076,2076}
temp	float	$tmp922	%read{2078,2078} %write{2077,2077}
temp	float	$tmp923	%read{2080,2080} %write{2079,2079}
temp	int	$tmp924	%read{2081,2081} %write{2080,2080}
temp	float	$tmp925	%read{2082,2082} %write{2081,2081}
temp	float	$tmp926.x	%read{2087,2087} %write{2084,2084}
temp	float	$tmp926.y	%read{2088,2088} %write{2085,2085}
temp	float	$tmp927.x	%read{2096,2096} %write{2093,2093}
temp	float	$tmp927.y	%read{2097,2097} %write{2094,2094}
temp	float	$tmp928.x	%read{2093,2093} %write{2090,2090}
temp	float	$tmp928.y	%read{2094,2094} %write{2091,2091}
temp	float	$tmp929	%read{2100,2100} %write{2099,2099}
temp	float	$tmp930	%read{2101,2101} %write{2100,2100}
temp	int	$tmp931	%read{2105,2105} %write{2104,2104}
temp	int	$tmp932	%read{2115,2155} %write{2115,2155}
temp	int	$tmp933	%read{2115,2155} %write{2115,2155}
temp	int	$tmp934	%read{2113,2155} %write{2114,2155}
temp	float	$tmp935.x	%read{2115,2155} %write{2115,2155}
temp	float	$tmp935.y	%read{2115,2155} %write{2115,2155}
temp	float	$tmp936.x	%read{2115,2155} %write{2115,2155}
temp	float	$tmp936.y	%read{2115,2155} %write{2115,2155}
temp	float	$tmp937.x	%read{2115,2155} %write{2115,2155}
temp	float	$tmp937.y	%read{2115,2155} %write{2115,2155}
temp	float	$tmp938	%read{2115,2155} %write{2115,2155}
temp	int	$tmp939	%read{2115,2155} %write{2115,2155}
temp	float	$tmp940	%read{2115,2155} %write{2115,2155}
temp	float	$tmp941	%read{2115,2155} %write{2115,2155}
temp	int	$tmp942	%read{2115,2155} %write{2115,2155}
temp	float	$tmp943	%read{2115,2155} %write{2115,2155}
temp	float	$tmp944.x	%read{2115,2155} %write{2115,2155}
temp	float	$tmp944.y	%read{2115,2155} %write{2115,2155}
temp	float	$tmp945.x	%read{2115,2155} %write{2115,2155}
temp	float	$tmp945.y	%read{2115,2155} %write{2115,2155}
temp	float	$tmp946.x	%read{2115,2155} %write{2115,2155}
temp	float	$tmp946.y	%read{2115,2155} %write{2115,2155}
temp	float	$tmp947	%read{2115,2155} %write{2115,2155}
temp	int	$tmp948	%read{2147483647,-1} %write{2115,2155}
temp	float	$tmp949	%read{2157,2157} %write{2156,2156}
temp	int	$tmp950	%read{2159,2159} %write{2158,2158}
temp	float	$tmp951.x	%read{2167,2185} %write{2164,2164}
temp	float	$tmp951.y	%read{2171,2186} %write{2165,2165}
temp	float	$tmp952.x	%read{2164,2164} %write{2161,2161}
temp	float	$tmp952.y	%read{2165,2165} %write{2162,2162}
temp	float	$tmp953.x	%read{2179,2179} %write{2170,2170}
temp	float	$tmp953.y	%read{2180,2180} %write{2174,2174}
temp	float	$tmp954	%read{2168,2168} %write{2167,2167}
temp	int	$tmp955	%read{2169,2169} %write{2168,2168}
temp	float	$tmp956	%read{2170,2170} %write{2169,2169}
temp	float	$tmp957	%read{2172,2172} %write{2171,2171}
temp	int	$tmp958	%read{2173,2173} %write{2172,2172}
temp	float	$tmp959	%read{2174,2174} %write{2173,2173}
temp	float	$tmp960.x	%read{2179,2179} %write{2176,2176}
temp	float	$tmp960.y	%read{2180,2180} %write{2177,2177}
temp	float	$tmp961.x	%read{2188,2188} %write{2185,2185}
temp	float	$tmp961.y	%read{2189,2189} %write{2186,2186}
temp	float	$tmp962.x	%read{2185,2185} %write{2182,2182}
temp	float	$tmp962.y	%read{2186,2186} %write{2183,2183}
temp	float	$tmp963	%read{2192,2192} %write{2191,2191}
temp	float	$tmp964	%read{2195,2195} %write{2194,2194}
temp	float	$tmp965	%read{2196,2196} %write{2195,2195}
temp	float	$tmp966	%read{2201,2201} %write{2196,2196}
temp	float	$tmp967	%read{2199,2199} %write{2197,2197}
temp	float	$tmp968	%read{2199,2199} %write{2198,2198}
temp	float	$tmp969	%read{2200,2200} %write{2199,2199}
temp	float	$tmp970	%read{2201,2201} %write{2200,2200}
temp	float	$tmp971	%read{2206,2206} %write{2205,2205}
temp	float	$tmp972	%read{2207,2207} %write{2206,2206}
temp	int	$tmp973	%read{2212,2212} %write{2211,2211}
temp	int	$tmp974	%read{2221,2271} %write{2221,2271}
temp	int	$tmp975	%read{2221,2271} %write{2221,2271}
temp	int	$tmp976	%read{2221,2271} %write{2221,2271}
temp	int	$tmp977	%read{2221,2271} %write{2221,2271}
temp	int	$tmp978	%read{2221,2271} %write{2221,2271}
temp	int	$tmp979	%read{2219,2271} %write{2220,2271}
temp	int	$tmp980	%read{2221,2271} %write{2221,2271}
temp	float	$tmp981	%read{2221,2271} %write{2221,2271}
temp	float	$tmp982.x	%read{2221,2271} %write{2221,2271}
temp	float	$tmp982.y	%read{2221,2271} %write{2221,2271}
temp	float	$tmp983	%read{2221,2271} %write{2221,2271}
temp	int	$tmp984	%read{2221,2271} %write{2221,2271}
temp	float	$tmp985	%read{2221,2271} %write{2221,2271}
temp	float	$tmp986	%read{2221,2271} %write{2221,2271}
temp	int	$tmp987	%read{2221,2271} %write{2221,2271}
temp	float	$tmp988	%read{2221,2271} %write{2221,2271}
temp	float	$tmp989.x	%read{2221,2271} %write{2221,2271}
temp	float	$tmp989.y	%read{2221,2271} %write{2221,2271}
temp	float	$tmp990.x	%read{2221,2271} %write{2221,2271}
temp	float	$tmp990.y	%read{2221,2271} %write{2221,2271}
temp	float	$tmp991.x	%read{2221,2271} %write{2221,2271}
temp	float	$tmp991.y	%read{2221,2271} %write{2221,2271}
temp	float	$tmp992	%read{2221,2271} %write{2221,2271}
temp	float	$tmp993	%read{2221,2271} %write{2221,2271}
temp	float	$tmp994	%read{2221,2271} %write{2221,2271}
temp	float	$tmp995.x	%read{2221,2271} %write{2221,2271}
temp	float	$tmp995.y	%read{2221,2271} %write{2221,2271}
temp	int	$tmp996	%read{2147483647,-1} %write{2221,2271}
temp	float	$tmp997	%read{2273,2273} %write{2272,2272}
temp	int	$tmp998	%read{2275,2275} %write{2274,2274}
temp	int	$tmp999	%read{2276,2280} %write{2275,2279}
temp	int	$tmp1000	%read{2278,2278} %write{2277,2277}
temp	int	$tmp1001	%read{2279,2279} %write{2278,2278}
temp	int	$tmp1002	%read{2282,2282} %write{2281,2281}
temp	float	$tmp1003	%read{2309,2309} %write{2308,2308}
temp	float	$tmp1004.x	%read{2297,2297} %write{2288,2288}
temp	float	$tmp1004.y	%read{2298,2298} %write{2292,2292}
temp	float	$tmp1005	%read{2286,2286} %write{2285,2285}
temp	int	$tmp1006	%read{2287,2287} %write{2286,2286}
temp	float	$tmp1007	%read{2288,2288} %write{2287,2287}
temp	float	$tmp1008	%read{2290,2290} %write{2289,2289}
temp	int	$tmp1009	%read{2291,2291} %write{2290,2290}
temp	float	$tmp1010	%read{2292,2292} %write{2291,2291}
temp	float	$tmp1011.x	%read{2297,2297} %write{2294,2294}
temp	float	$tmp1011.y	%read{2298,2298} %write{2295,2295}
temp	float	$tmp1012.x	%read{2306,2306} %write{2303,2303}
temp	float	$tmp1012.y	%read{2307,2307} %write{2304,2304}
temp	float	$tmp1013.x	%read{2303,2303} %write{2300,2300}
temp	float	$tmp1013.y	%read{2304,2304} %write{2301,2301}
temp	float	$tmp1014	%read{2310,2310} %write{2309,2309}
temp	float	$tmp1015	%read{2312,2312} %write{2311,2311}
temp	float	$tmp1016	%read{2313,2313} %write{2312,2312}
temp	int	$tmp1017	%read{2317,2317} %write{2316,2316}
temp	float	$tmp1018	%read{2348,2348} %write{2347,2347}
temp	float	$tmp1019	%read{2347,2347} %write{2346,2346}
temp	float	$tmp1020.x	%read{2335,2335} %write{2326,2326}
temp	float	$tmp1020.y	%read{2336,2336} %write{2330,2330}
temp	float	$tmp1021	%read{2324,2324} %write{2323,2323}
temp	int	$tmp1022	%read{2325,2325} %write{2324,2324}
temp	float	$tmp1023	%read{2326,2326} %write{2325,2325}
temp	float	$tmp1024	%read{2328,2328} %write{2327,2327}
temp	int	$tmp1025	%read{2329,2329} %write{2328,2328}
temp	float	$tmp1026	%read{2330,2330} %write{2329,2329}
temp	float	$tmp1027.x	%read{2335,2335} %write{2332,2332}
temp	float	$tmp1027.y	%read{2336,2336} %write{2333,2333}
temp	float	$tmp1028.x	%read{2344,2344} %write{2341,2341}
temp	float	$tmp1028.y	%read{2345,2345} %write{2342,2342}
temp	float	$tmp1029.x	%read{2341,2341} %write{2338,2338}
temp	float	$tmp1029.y	%read{2342,2342} %write{2339,2339}
temp	int	$tmp1030	%read{2354,2400} %write{2354,2400}
temp	int	$tmp1031	%read{2354,2400} %write{2354,2400}
temp	int	$tmp1032	%read{2352,2400} %write{2353,2400}
temp	float	$tmp1033.x	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1033.y	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1034	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1035	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1036	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1037	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1038.x	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1038.y	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1039	%read{2354,2400} %write{2354,2400}
temp	int	$tmp1040	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1041	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1042	%read{2354,2400} %write{2354,2400}
temp	int	$tmp1043	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1044	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1045.x	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1045.y	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1046.x	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1046.y	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1047.x	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1047.y	%read{2354,2400} %write{2354,2400}
temp	float	$tmp1048	%read{2354,2400} %write{2354,2400}
temp	int	$tmp1049	%read{2147483647,-1} %write{2354,2400}
temp	int	$tmp1050	%read{2404,2404} %write{2403,2403}
temp	float	$tmp1051	%read{2434,2434} %write{2433,2433}
temp	float	$tmp1052.x	%read{2422,2422} %write{2413,2413}
temp	float	$tmp1052.y	%read{2423,2423} %write{2417,2417}
temp	float	$tmp1053	%read{2411,2411} %write{2410,2410}
temp	int	$tmp1054	%read{2412,2412} %write{2411,2411}
temp	float	$tmp1055	%read{2413,2413} %write{2412,2412}
temp	float	$tmp1056	%read{2415,2415} %write{2414,2414}
temp	int	$tmp1057	%read{2416,2416} %write{2415,2415}
temp	float	$tmp1058	%read{2417,2417} %write{2416,2416}
temp	float	$tmp1059.x	%read{2422,2422} %write{2419,2419}
temp	float	$tmp1059.y	%read{2423,2423} %write{2420,2420}
temp	float	$tmp1060.x	%read{2431,2431} %write{2428,2428}
temp	float	$tmp1060.y	%read{2432,2432} %write{2429,2429}
temp	float	$tmp1061.x	%read{2428,2428} %write{2425,2425}
temp	float	$tmp1061.y	%read{2429,2429} %write{2426,2426}
temp	float	$tmp1062.x	%read{2439,2439} %write{2436,2436}
temp	float	$tmp1062.y	%read{2440,2440} %write{2437,2437}
temp	int	$tmp1063	%read{2443,2483} %write{2443,2483}
temp	int	$tmp1064	%read{2443,2483} %write{2443,2483}
temp	int	$tmp1065	%read{2441,2483} %write{2442,2483}
temp	float	$tmp1066	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1067.x	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1067.y	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1068	%read{2443,2483} %write{2443,2483}
temp	int	$tmp1069	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1070	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1071	%read{2443,2483} %write{2443,2483}
temp	int	$tmp1072	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1073	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1074.x	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1074.y	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1075.x	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1075.y	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1076.x	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1076.y	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1077	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1078	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1079.x	%read{2443,2483} %write{2443,2483}
temp	float	$tmp1079.y	%read{2443,2483} %write{2443,2483}
temp	int	$tmp1080	%read{2147483647,-1} %write{2443,2483}
temp	float	$tmp1081	%read{2485,2485} %write{2484,2484}
temp	int	$tmp1082	%read{2487,2487} %write{2486,2486}
temp	float	$tmp1083	%read{2513,2513} %write{2512,2512}
temp	float	$tmp1084.x	%read{2501,2501} %write{2492,2492}
temp	float	$tmp1084.y	%read{2502,2502} %write{2496,2496}
temp	float	$tmp1085	%read{2490,2490} %write{2489,2489}
temp	int	$tmp1086	%read{2491,2491} %write{2490,2490}
temp	float	$tmp1087	%read{2492,2492} %write{2491,2491}
temp	float	$tmp1088	%read{2494,2494} %write{2493,2493}
temp	int	$tmp1089	%read{2495,2495} %write{2494,2494}
temp	float	$tmp1090	%read{2496,2496} %write{2495,2495}
temp	float	$tmp1091.x	%read{2501,2501} %write{2498,2498}
temp	float	$tmp1091.y	%read{2502,2502} %write{2499,2499}
temp	float	$tmp1092.x	%read{2510,2510} %write{2507,2507}
temp	float	$tmp1092.y	%read{2511,2511} %write{2508,2508}
temp	float	$tmp1093.x	%read{2507,2507} %write{2504,2504}
temp	float	$tmp1093.y	%read{2508,2508} %write{2505,2505}
temp	float	$tmp1094	%read{2514,2514} %write{2513,2513}
temp	float	$tmp1095	%read{2515,2515} %write{2514,2514}
temp	float	$tmp1096	%read{2517,2517} %write{2516,2516}
const	string	$const37	"3D"		%read{2525,2525} %write{2147483647,-1}
temp	int	$tmp1097	%read{2526,2526} %write{2525,2525}
temp	int	$tmp1098	%read{2530,2530} %write{2529,2529}
temp	point	$tmp1099	%read{2634,2634} %write{2633,2633}
temp	float	$tmp1100	%read{2564,2564} %write{2563,2563}
temp	point	$tmp1101	%read{2542,2542} %write{2541,2541}
const	string	$const38	"random_vector3_offset"		%read{2531,3487} %write{2147483647,-1}
temp	float	$tmp1102	%read{2533,2533} %write{2532,2532}
temp	float	$tmp1103	%read{2534,2534} %write{2533,2533}
temp	float	$tmp1104	%read{2541,2541} %write{2534,2534}
temp	float	$tmp1105	%read{2536,2536} %write{2535,2535}
temp	float	$tmp1106	%read{2537,2537} %write{2536,2536}
temp	float	$tmp1107	%read{2541,2541} %write{2537,2537}
temp	float	$tmp1108	%read{2539,2539} %write{2538,2538}
temp	float	$tmp1109	%read{2540,2540} %write{2539,2539}
temp	float	$tmp1110	%read{2541,2541} %write{2540,2540}
temp	point	$tmp1111	%read{2544,2561} %write{2542,2542}
temp	point	$tmp1112	%read{2560,2560} %write{2559,2559}
temp	float	$tmp1113	%read{2559,2559} %write{2548,2548}
temp	float	$tmp1114	%read{2546,2546} %write{2545,2545}
temp	float	$tmp1115	%read{2545,2545} %write{2544,2544}
temp	int	$tmp1116	%read{2547,2547} %write{2546,2546}
temp	float	$tmp1117	%read{2548,2548} %write{2547,2547}
temp	float	$tmp1118	%read{2559,2559} %write{2553,2553}
temp	float	$tmp1119	%read{2551,2551} %write{2550,2550}
temp	float	$tmp1120	%read{2550,2550} %write{2549,2549}
temp	int	$tmp1121	%read{2552,2552} %write{2551,2551}
temp	float	$tmp1122	%read{2553,2553} %write{2552,2552}
temp	float	$tmp1123	%read{2559,2559} %write{2558,2558}
temp	float	$tmp1124	%read{2556,2556} %write{2555,2555}
const	int	$const39	2		%read{2554,3925} %write{2147483647,-1}
temp	float	$tmp1125	%read{2555,2555} %write{2554,2554}
temp	int	$tmp1126	%read{2557,2557} %write{2556,2556}
temp	float	$tmp1127	%read{2558,2558} %write{2557,2557}
temp	point	$tmp1128	%read{2562,2562} %write{2561,2561}
temp	float	$tmp1129	%read{2633,2633} %write{2564,2564}
temp	float	$tmp1130	%read{2598,2598} %write{2597,2597}
temp	point	$tmp1131	%read{2576,2576} %write{2575,2575}
temp	float	$tmp1132	%read{2567,2567} %write{2566,2566}
temp	float	$tmp1133	%read{2568,2568} %write{2567,2567}
temp	float	$tmp1134	%read{2575,2575} %write{2568,2568}
temp	float	$tmp1135	%read{2570,2570} %write{2569,2569}
temp	float	$tmp1136	%read{2571,2571} %write{2570,2570}
temp	float	$tmp1137	%read{2575,2575} %write{2571,2571}
temp	float	$tmp1138	%read{2573,2573} %write{2572,2572}
temp	float	$tmp1139	%read{2574,2574} %write{2573,2573}
temp	float	$tmp1140	%read{2575,2575} %write{2574,2574}
temp	point	$tmp1141	%read{2578,2595} %write{2576,2576}
temp	point	$tmp1142	%read{2594,2594} %write{2593,2593}
temp	float	$tmp1143	%read{2593,2593} %write{2582,2582}
temp	float	$tmp1144	%read{2580,2580} %write{2579,2579}
temp	float	$tmp1145	%read{2579,2579} %write{2578,2578}
temp	int	$tmp1146	%read{2581,2581} %write{2580,2580}
temp	float	$tmp1147	%read{2582,2582} %write{2581,2581}
temp	float	$tmp1148	%read{2593,2593} %write{2587,2587}
temp	float	$tmp1149	%read{2585,2585} %write{2584,2584}
temp	float	$tmp1150	%read{2584,2584} %write{2583,2583}
temp	int	$tmp1151	%read{2586,2586} %write{2585,2585}
temp	float	$tmp1152	%read{2587,2587} %write{2586,2586}
temp	float	$tmp1153	%read{2593,2593} %write{2592,2592}
temp	float	$tmp1154	%read{2590,2590} %write{2589,2589}
temp	float	$tmp1155	%read{2589,2589} %write{2588,2588}
temp	int	$tmp1156	%read{2591,2591} %write{2590,2590}
temp	float	$tmp1157	%read{2592,2592} %write{2591,2591}
temp	point	$tmp1158	%read{2596,2596} %write{2595,2595}
temp	float	$tmp1159	%read{2633,2633} %write{2598,2598}
temp	float	$tmp1160	%read{2632,2632} %write{2631,2631}
temp	point	$tmp1161	%read{2610,2610} %write{2609,2609}
temp	float	$tmp1162	%read{2601,2601} %write{2600,2600}
temp	float	$tmp1163	%read{2602,2602} %write{2601,2601}
temp	float	$tmp1164	%read{2609,2609} %write{2602,2602}
temp	float	$tmp1165	%read{2604,2604} %write{2603,2603}
temp	float	$tmp1166	%read{2605,2605} %write{2604,2604}
temp	float	$tmp1167	%read{2609,2609} %write{2605,2605}
temp	float	$tmp1168	%read{2607,2607} %write{2606,2606}
temp	float	$tmp1169	%read{2608,2608} %write{2607,2607}
temp	float	$tmp1170	%read{2609,2609} %write{2608,2608}
temp	point	$tmp1171	%read{2612,2629} %write{2610,2610}
temp	point	$tmp1172	%read{2628,2628} %write{2627,2627}
temp	float	$tmp1173	%read{2627,2627} %write{2616,2616}
temp	float	$tmp1174	%read{2614,2614} %write{2613,2613}
temp	float	$tmp1175	%read{2613,2613} %write{2612,2612}
temp	int	$tmp1176	%read{2615,2615} %write{2614,2614}
temp	float	$tmp1177	%read{2616,2616} %write{2615,2615}
temp	float	$tmp1178	%read{2627,2627} %write{2621,2621}
temp	float	$tmp1179	%read{2619,2619} %write{2618,2618}
temp	float	$tmp1180	%read{2618,2618} %write{2617,2617}
temp	int	$tmp1181	%read{2620,2620} %write{2619,2619}
temp	float	$tmp1182	%read{2621,2621} %write{2620,2620}
temp	float	$tmp1183	%read{2627,2627} %write{2626,2626}
temp	float	$tmp1184	%read{2624,2624} %write{2623,2623}
temp	float	$tmp1185	%read{2623,2623} %write{2622,2622}
temp	int	$tmp1186	%read{2625,2625} %write{2624,2624}
temp	float	$tmp1187	%read{2626,2626} %write{2625,2625}
temp	point	$tmp1188	%read{2630,2630} %write{2629,2629}
temp	float	$tmp1189	%read{2633,2633} %write{2632,2632}
temp	int	$tmp1190	%read{2637,2637} %write{2636,2636}
temp	int	$tmp1191	%read{2644,2674} %write{2644,2674}
temp	int	$tmp1192	%read{2644,2674} %write{2644,2674}
temp	int	$tmp1193	%read{2642,2674} %write{2643,2674}
temp	float	$tmp1194	%read{2644,2674} %write{2644,2674}
temp	point	$tmp1195	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1196	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1197	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1198	%read{2644,2674} %write{2644,2674}
temp	int	$tmp1199	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1200	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1201	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1202	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1203	%read{2644,2674} %write{2644,2674}
temp	int	$tmp1204	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1205	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1206	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1207	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1208	%read{2644,2674} %write{2644,2674}
temp	int	$tmp1209	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1210	%read{2644,2674} %write{2644,2674}
temp	point	$tmp1211	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1212	%read{2644,2674} %write{2644,2674}
temp	float	$tmp1213	%read{2644,2674} %write{2644,2674}
temp	int	$tmp1214	%read{2147483647,-1} %write{2644,2674}
temp	float	$tmp1215	%read{2676,2676} %write{2675,2675}
temp	int	$tmp1216	%read{2678,2678} %write{2677,2677}
temp	float	$tmp1217	%read{2701,2701} %write{2679,2679}
temp	float	$tmp1218	%read{2701,2701} %write{2700,2700}
temp	point	$tmp1219	%read{2697,2697} %write{2696,2696}
temp	float	$tmp1220	%read{2696,2696} %write{2685,2685}
temp	float	$tmp1221	%read{2683,2683} %write{2682,2682}
temp	float	$tmp1222	%read{2682,2682} %write{2681,2681}
temp	int	$tmp1223	%read{2684,2684} %write{2683,2683}
temp	float	$tmp1224	%read{2685,2685} %write{2684,2684}
temp	float	$tmp1225	%read{2696,2696} %write{2690,2690}
temp	float	$tmp1226	%read{2688,2688} %write{2687,2687}
temp	float	$tmp1227	%read{2687,2687} %write{2686,2686}
temp	int	$tmp1228	%read{2689,2689} %write{2688,2688}
temp	float	$tmp1229	%read{2690,2690} %write{2689,2689}
temp	float	$tmp1230	%read{2696,2696} %write{2695,2695}
temp	float	$tmp1231	%read{2693,2693} %write{2692,2692}
temp	float	$tmp1232	%read{2692,2692} %write{2691,2691}
temp	int	$tmp1233	%read{2694,2694} %write{2693,2693}
temp	float	$tmp1234	%read{2695,2695} %write{2694,2694}
temp	point	$tmp1235	%read{2699,2699} %write{2698,2698}
temp	float	$tmp1236	%read{2702,2702} %write{2701,2701}
temp	float	$tmp1237	%read{2703,2703} %write{2702,2702}
temp	int	$tmp1238	%read{2707,2707} %write{2706,2706}
temp	int	$tmp1239	%read{2716,2747} %write{2716,2747}
temp	int	$tmp1240	%read{2716,2747} %write{2716,2747}
temp	int	$tmp1241	%read{2714,2747} %write{2715,2747}
temp	point	$tmp1242	%read{2716,2747} %write{2716,2747}
temp	point	$tmp1243	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1244	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1245	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1246	%read{2716,2747} %write{2716,2747}
temp	int	$tmp1247	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1248	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1249	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1250	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1251	%read{2716,2747} %write{2716,2747}
temp	int	$tmp1252	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1253	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1254	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1255	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1256	%read{2716,2747} %write{2716,2747}
temp	int	$tmp1257	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1258	%read{2716,2747} %write{2716,2747}
temp	point	$tmp1259	%read{2716,2747} %write{2716,2747}
temp	float	$tmp1260	%read{2716,2747} %write{2716,2747}
temp	int	$tmp1261	%read{2147483647,-1} %write{2716,2747}
temp	float	$tmp1262	%read{2749,2749} %write{2748,2748}
temp	int	$tmp1263	%read{2751,2751} %write{2750,2750}
temp	point	$tmp1264	%read{2754,2771} %write{2752,2752}
temp	point	$tmp1265	%read{2770,2770} %write{2769,2769}
temp	float	$tmp1266	%read{2769,2769} %write{2758,2758}
temp	float	$tmp1267	%read{2756,2756} %write{2755,2755}
temp	float	$tmp1268	%read{2755,2755} %write{2754,2754}
temp	int	$tmp1269	%read{2757,2757} %write{2756,2756}
temp	float	$tmp1270	%read{2758,2758} %write{2757,2757}
temp	float	$tmp1271	%read{2769,2769} %write{2763,2763}
temp	float	$tmp1272	%read{2761,2761} %write{2760,2760}
temp	float	$tmp1273	%read{2760,2760} %write{2759,2759}
temp	int	$tmp1274	%read{2762,2762} %write{2761,2761}
temp	float	$tmp1275	%read{2763,2763} %write{2762,2762}
temp	float	$tmp1276	%read{2769,2769} %write{2768,2768}
temp	float	$tmp1277	%read{2766,2766} %write{2765,2765}
temp	float	$tmp1278	%read{2765,2765} %write{2764,2764}
temp	int	$tmp1279	%read{2767,2767} %write{2766,2766}
temp	float	$tmp1280	%read{2768,2768} %write{2767,2767}
temp	point	$tmp1281	%read{2772,2772} %write{2771,2771}
temp	float	$tmp1282	%read{2775,2775} %write{2774,2774}
temp	float	$tmp1283	%read{2778,2778} %write{2777,2777}
temp	float	$tmp1284	%read{2779,2779} %write{2778,2778}
temp	float	$tmp1285	%read{2784,2784} %write{2779,2779}
temp	float	$tmp1286	%read{2782,2782} %write{2780,2780}
temp	float	$tmp1287	%read{2782,2782} %write{2781,2781}
temp	float	$tmp1288	%read{2783,2783} %write{2782,2782}
temp	float	$tmp1289	%read{2784,2784} %write{2783,2783}
temp	float	$tmp1290	%read{2789,2789} %write{2788,2788}
temp	float	$tmp1291	%read{2790,2790} %write{2789,2789}
temp	int	$tmp1292	%read{2795,2795} %write{2794,2794}
temp	int	$tmp1293	%read{2803,2844} %write{2803,2844}
temp	int	$tmp1294	%read{2803,2844} %write{2803,2844}
temp	int	$tmp1295	%read{2803,2844} %write{2803,2844}
temp	int	$tmp1296	%read{2803,2844} %write{2803,2844}
temp	int	$tmp1297	%read{2803,2844} %write{2803,2844}
temp	int	$tmp1298	%read{2801,2844} %write{2802,2844}
temp	int	$tmp1299	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1300	%read{2803,2844} %write{2803,2844}
temp	point	$tmp1301	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1302	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1303	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1304	%read{2803,2844} %write{2803,2844}
temp	int	$tmp1305	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1306	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1307	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1308	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1309	%read{2803,2844} %write{2803,2844}
temp	int	$tmp1310	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1311	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1312	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1313	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1314	%read{2803,2844} %write{2803,2844}
temp	int	$tmp1315	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1316	%read{2803,2844} %write{2803,2844}
temp	point	$tmp1317	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1318	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1319	%read{2803,2844} %write{2803,2844}
temp	float	$tmp1320	%read{2803,2844} %write{2803,2844}
temp	int	$tmp1321	%read{2147483647,-1} %write{2803,2844}
temp	float	$tmp1322	%read{2846,2846} %write{2845,2845}
temp	int	$tmp1323	%read{2848,2848} %write{2847,2847}
temp	int	$tmp1324	%read{2849,2853} %write{2848,2852}
temp	int	$tmp1325	%read{2851,2851} %write{2850,2850}
temp	int	$tmp1326	%read{2852,2852} %write{2851,2851}
temp	int	$tmp1327	%read{2855,2855} %write{2854,2854}
temp	float	$tmp1328	%read{2878,2878} %write{2877,2877}
temp	point	$tmp1329	%read{2874,2874} %write{2873,2873}
temp	float	$tmp1330	%read{2873,2873} %write{2862,2862}
temp	float	$tmp1331	%read{2860,2860} %write{2859,2859}
temp	float	$tmp1332	%read{2859,2859} %write{2858,2858}
temp	int	$tmp1333	%read{2861,2861} %write{2860,2860}
temp	float	$tmp1334	%read{2862,2862} %write{2861,2861}
temp	float	$tmp1335	%read{2873,2873} %write{2867,2867}
temp	float	$tmp1336	%read{2865,2865} %write{2864,2864}
temp	float	$tmp1337	%read{2864,2864} %write{2863,2863}
temp	int	$tmp1338	%read{2866,2866} %write{2865,2865}
temp	float	$tmp1339	%read{2867,2867} %write{2866,2866}
temp	float	$tmp1340	%read{2873,2873} %write{2872,2872}
temp	float	$tmp1341	%read{2870,2870} %write{2869,2869}
temp	float	$tmp1342	%read{2869,2869} %write{2868,2868}
temp	int	$tmp1343	%read{2871,2871} %write{2870,2870}
temp	float	$tmp1344	%read{2872,2872} %write{2871,2871}
temp	point	$tmp1345	%read{2876,2876} %write{2875,2875}
temp	float	$tmp1346	%read{2879,2879} %write{2878,2878}
temp	float	$tmp1347	%read{2881,2881} %write{2880,2880}
temp	float	$tmp1348	%read{2882,2882} %write{2881,2881}
temp	int	$tmp1349	%read{2886,2886} %write{2885,2885}
temp	float	$tmp1350	%read{2912,2912} %write{2911,2911}
temp	float	$tmp1351	%read{2911,2911} %write{2910,2910}
temp	point	$tmp1352	%read{2907,2907} %write{2906,2906}
temp	float	$tmp1353	%read{2906,2906} %write{2895,2895}
temp	float	$tmp1354	%read{2893,2893} %write{2892,2892}
temp	float	$tmp1355	%read{2892,2892} %write{2891,2891}
temp	int	$tmp1356	%read{2894,2894} %write{2893,2893}
temp	float	$tmp1357	%read{2895,2895} %write{2894,2894}
temp	float	$tmp1358	%read{2906,2906} %write{2900,2900}
temp	float	$tmp1359	%read{2898,2898} %write{2897,2897}
temp	float	$tmp1360	%read{2897,2897} %write{2896,2896}
temp	int	$tmp1361	%read{2899,2899} %write{2898,2898}
temp	float	$tmp1362	%read{2900,2900} %write{2899,2899}
temp	float	$tmp1363	%read{2906,2906} %write{2905,2905}
temp	float	$tmp1364	%read{2903,2903} %write{2902,2902}
temp	float	$tmp1365	%read{2902,2902} %write{2901,2901}
temp	int	$tmp1366	%read{2904,2904} %write{2903,2903}
temp	float	$tmp1367	%read{2905,2905} %write{2904,2904}
temp	point	$tmp1368	%read{2909,2909} %write{2908,2908}
temp	int	$tmp1369	%read{2918,2955} %write{2918,2955}
temp	int	$tmp1370	%read{2918,2955} %write{2918,2955}
temp	int	$tmp1371	%read{2916,2955} %write{2917,2955}
temp	float	$tmp1372	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1373	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1374	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1375	%read{2918,2955} %write{2918,2955}
temp	point	$tmp1376	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1377	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1378	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1379	%read{2918,2955} %write{2918,2955}
temp	int	$tmp1380	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1381	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1382	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1383	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1384	%read{2918,2955} %write{2918,2955}
temp	int	$tmp1385	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1386	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1387	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1388	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1389	%read{2918,2955} %write{2918,2955}
temp	int	$tmp1390	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1391	%read{2918,2955} %write{2918,2955}
temp	point	$tmp1392	%read{2918,2955} %write{2918,2955}
temp	float	$tmp1393	%read{2918,2955} %write{2918,2955}
temp	int	$tmp1394	%read{2147483647,-1} %write{2918,2955}
temp	int	$tmp1395	%read{2959,2959} %write{2958,2958}
temp	float	$tmp1396	%read{2984,2984} %write{2983,2983}
temp	point	$tmp1397	%read{2980,2980} %write{2979,2979}
temp	float	$tmp1398	%read{2979,2979} %write{2968,2968}
temp	float	$tmp1399	%read{2966,2966} %write{2965,2965}
temp	float	$tmp1400	%read{2965,2965} %write{2964,2964}
temp	int	$tmp1401	%read{2967,2967} %write{2966,2966}
temp	float	$tmp1402	%read{2968,2968} %write{2967,2967}
temp	float	$tmp1403	%read{2979,2979} %write{2973,2973}
temp	float	$tmp1404	%read{2971,2971} %write{2970,2970}
temp	float	$tmp1405	%read{2970,2970} %write{2969,2969}
temp	int	$tmp1406	%read{2972,2972} %write{2971,2971}
temp	float	$tmp1407	%read{2973,2973} %write{2972,2972}
temp	float	$tmp1408	%read{2979,2979} %write{2978,2978}
temp	float	$tmp1409	%read{2976,2976} %write{2975,2975}
temp	float	$tmp1410	%read{2975,2975} %write{2974,2974}
temp	int	$tmp1411	%read{2977,2977} %write{2976,2976}
temp	float	$tmp1412	%read{2978,2978} %write{2977,2977}
temp	point	$tmp1413	%read{2982,2982} %write{2981,2981}
temp	int	$tmp1414	%read{2988,3019} %write{2988,3019}
temp	int	$tmp1415	%read{2988,3019} %write{2988,3019}
temp	int	$tmp1416	%read{2986,3019} %write{2987,3019}
temp	float	$tmp1417	%read{2988,3019} %write{2988,3019}
temp	point	$tmp1418	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1419	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1420	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1421	%read{2988,3019} %write{2988,3019}
temp	int	$tmp1422	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1423	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1424	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1425	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1426	%read{2988,3019} %write{2988,3019}
temp	int	$tmp1427	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1428	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1429	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1430	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1431	%read{2988,3019} %write{2988,3019}
temp	int	$tmp1432	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1433	%read{2988,3019} %write{2988,3019}
temp	point	$tmp1434	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1435	%read{2988,3019} %write{2988,3019}
temp	float	$tmp1436	%read{2988,3019} %write{2988,3019}
temp	int	$tmp1437	%read{2147483647,-1} %write{2988,3019}
temp	float	$tmp1438	%read{3021,3021} %write{3020,3020}
temp	int	$tmp1439	%read{3023,3023} %write{3022,3022}
temp	float	$tmp1440	%read{3045,3045} %write{3044,3044}
temp	point	$tmp1441	%read{3041,3041} %write{3040,3040}
temp	float	$tmp1442	%read{3040,3040} %write{3029,3029}
temp	float	$tmp1443	%read{3027,3027} %write{3026,3026}
temp	float	$tmp1444	%read{3026,3026} %write{3025,3025}
temp	int	$tmp1445	%read{3028,3028} %write{3027,3027}
temp	float	$tmp1446	%read{3029,3029} %write{3028,3028}
temp	float	$tmp1447	%read{3040,3040} %write{3034,3034}
temp	float	$tmp1448	%read{3032,3032} %write{3031,3031}
temp	float	$tmp1449	%read{3031,3031} %write{3030,3030}
temp	int	$tmp1450	%read{3033,3033} %write{3032,3032}
temp	float	$tmp1451	%read{3034,3034} %write{3033,3033}
temp	float	$tmp1452	%read{3040,3040} %write{3039,3039}
temp	float	$tmp1453	%read{3037,3037} %write{3036,3036}
temp	float	$tmp1454	%read{3036,3036} %write{3035,3035}
temp	int	$tmp1455	%read{3038,3038} %write{3037,3037}
temp	float	$tmp1456	%read{3039,3039} %write{3038,3038}
temp	point	$tmp1457	%read{3043,3043} %write{3042,3042}
temp	float	$tmp1458	%read{3046,3046} %write{3045,3045}
temp	float	$tmp1459	%read{3047,3047} %write{3046,3046}
temp	float	$tmp1460	%read{3049,3049} %write{3048,3048}
temp	float	$tmp1461	%read{3919,3919} %write{3136,3485}
temp	point	$tmp1462	%read{3066,3066} %write{3065,3065}
temp	float	$tmp1463	%read{3057,3057} %write{3056,3056}
temp	float	$tmp1464	%read{3058,3058} %write{3057,3057}
temp	float	$tmp1465	%read{3065,3065} %write{3058,3058}
temp	float	$tmp1466	%read{3060,3060} %write{3059,3059}
temp	float	$tmp1467	%read{3061,3061} %write{3060,3060}
temp	float	$tmp1468	%read{3065,3065} %write{3061,3061}
temp	float	$tmp1469	%read{3063,3063} %write{3062,3062}
temp	float	$tmp1470	%read{3064,3064} %write{3063,3063}
temp	float	$tmp1471	%read{3065,3065} %write{3064,3064}
temp	point	$tmp1472	%read{3071,3393} %write{3066,3066}
temp	int	$tmp1473	%read{3069,3069} %write{3068,3068}
temp	int	$tmp1474	%read{3076,3106} %write{3076,3106}
temp	int	$tmp1475	%read{3076,3106} %write{3076,3106}
temp	int	$tmp1476	%read{3074,3106} %write{3075,3106}
temp	float	$tmp1477	%read{3076,3106} %write{3076,3106}
temp	point	$tmp1478	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1479	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1480	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1481	%read{3076,3106} %write{3076,3106}
temp	int	$tmp1482	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1483	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1484	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1485	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1486	%read{3076,3106} %write{3076,3106}
temp	int	$tmp1487	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1488	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1489	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1490	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1491	%read{3076,3106} %write{3076,3106}
temp	int	$tmp1492	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1493	%read{3076,3106} %write{3076,3106}
temp	point	$tmp1494	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1495	%read{3076,3106} %write{3076,3106}
temp	float	$tmp1496	%read{3076,3106} %write{3076,3106}
temp	int	$tmp1497	%read{2147483647,-1} %write{3076,3106}
temp	float	$tmp1498	%read{3108,3108} %write{3107,3107}
temp	int	$tmp1499	%read{3110,3110} %write{3109,3109}
temp	float	$tmp1500	%read{3133,3133} %write{3111,3111}
temp	float	$tmp1501	%read{3133,3133} %write{3132,3132}
temp	point	$tmp1502	%read{3129,3129} %write{3128,3128}
temp	float	$tmp1503	%read{3128,3128} %write{3117,3117}
temp	float	$tmp1504	%read{3115,3115} %write{3114,3114}
temp	float	$tmp1505	%read{3114,3114} %write{3113,3113}
temp	int	$tmp1506	%read{3116,3116} %write{3115,3115}
temp	float	$tmp1507	%read{3117,3117} %write{3116,3116}
temp	float	$tmp1508	%read{3128,3128} %write{3122,3122}
temp	float	$tmp1509	%read{3120,3120} %write{3119,3119}
temp	float	$tmp1510	%read{3119,3119} %write{3118,3118}
temp	int	$tmp1511	%read{3121,3121} %write{3120,3120}
temp	float	$tmp1512	%read{3122,3122} %write{3121,3121}
temp	float	$tmp1513	%read{3128,3128} %write{3127,3127}
temp	float	$tmp1514	%read{3125,3125} %write{3124,3124}
temp	float	$tmp1515	%read{3124,3124} %write{3123,3123}
temp	int	$tmp1516	%read{3126,3126} %write{3125,3125}
temp	float	$tmp1517	%read{3127,3127} %write{3126,3126}
temp	point	$tmp1518	%read{3131,3131} %write{3130,3130}
temp	float	$tmp1519	%read{3134,3134} %write{3133,3133}
temp	float	$tmp1520	%read{3135,3135} %write{3134,3134}
temp	int	$tmp1521	%read{3139,3139} %write{3138,3138}
temp	int	$tmp1522	%read{3148,3179} %write{3148,3179}
temp	int	$tmp1523	%read{3148,3179} %write{3148,3179}
temp	int	$tmp1524	%read{3146,3179} %write{3147,3179}
temp	point	$tmp1525	%read{3148,3179} %write{3148,3179}
temp	point	$tmp1526	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1527	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1528	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1529	%read{3148,3179} %write{3148,3179}
temp	int	$tmp1530	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1531	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1532	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1533	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1534	%read{3148,3179} %write{3148,3179}
temp	int	$tmp1535	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1536	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1537	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1538	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1539	%read{3148,3179} %write{3148,3179}
temp	int	$tmp1540	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1541	%read{3148,3179} %write{3148,3179}
temp	point	$tmp1542	%read{3148,3179} %write{3148,3179}
temp	float	$tmp1543	%read{3148,3179} %write{3148,3179}
temp	int	$tmp1544	%read{2147483647,-1} %write{3148,3179}
temp	float	$tmp1545	%read{3181,3181} %write{3180,3180}
temp	int	$tmp1546	%read{3183,3183} %write{3182,3182}
temp	point	$tmp1547	%read{3186,3203} %write{3184,3184}
temp	point	$tmp1548	%read{3202,3202} %write{3201,3201}
temp	float	$tmp1549	%read{3201,3201} %write{3190,3190}
temp	float	$tmp1550	%read{3188,3188} %write{3187,3187}
temp	float	$tmp1551	%read{3187,3187} %write{3186,3186}
temp	int	$tmp1552	%read{3189,3189} %write{3188,3188}
temp	float	$tmp1553	%read{3190,3190} %write{3189,3189}
temp	float	$tmp1554	%read{3201,3201} %write{3195,3195}
temp	float	$tmp1555	%read{3193,3193} %write{3192,3192}
temp	float	$tmp1556	%read{3192,3192} %write{3191,3191}
temp	int	$tmp1557	%read{3194,3194} %write{3193,3193}
temp	float	$tmp1558	%read{3195,3195} %write{3194,3194}
temp	float	$tmp1559	%read{3201,3201} %write{3200,3200}
temp	float	$tmp1560	%read{3198,3198} %write{3197,3197}
temp	float	$tmp1561	%read{3197,3197} %write{3196,3196}
temp	int	$tmp1562	%read{3199,3199} %write{3198,3198}
temp	float	$tmp1563	%read{3200,3200} %write{3199,3199}
temp	point	$tmp1564	%read{3204,3204} %write{3203,3203}
temp	float	$tmp1565	%read{3207,3207} %write{3206,3206}
temp	float	$tmp1566	%read{3210,3210} %write{3209,3209}
temp	float	$tmp1567	%read{3211,3211} %write{3210,3210}
temp	float	$tmp1568	%read{3216,3216} %write{3211,3211}
temp	float	$tmp1569	%read{3214,3214} %write{3212,3212}
temp	float	$tmp1570	%read{3214,3214} %write{3213,3213}
temp	float	$tmp1571	%read{3215,3215} %write{3214,3214}
temp	float	$tmp1572	%read{3216,3216} %write{3215,3215}
temp	float	$tmp1573	%read{3221,3221} %write{3220,3220}
temp	float	$tmp1574	%read{3222,3222} %write{3221,3221}
temp	int	$tmp1575	%read{3227,3227} %write{3226,3226}
temp	int	$tmp1576	%read{3235,3276} %write{3235,3276}
temp	int	$tmp1577	%read{3235,3276} %write{3235,3276}
temp	int	$tmp1578	%read{3235,3276} %write{3235,3276}
temp	int	$tmp1579	%read{3235,3276} %write{3235,3276}
temp	int	$tmp1580	%read{3235,3276} %write{3235,3276}
temp	int	$tmp1581	%read{3233,3276} %write{3234,3276}
temp	int	$tmp1582	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1583	%read{3235,3276} %write{3235,3276}
temp	point	$tmp1584	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1585	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1586	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1587	%read{3235,3276} %write{3235,3276}
temp	int	$tmp1588	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1589	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1590	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1591	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1592	%read{3235,3276} %write{3235,3276}
temp	int	$tmp1593	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1594	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1595	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1596	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1597	%read{3235,3276} %write{3235,3276}
temp	int	$tmp1598	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1599	%read{3235,3276} %write{3235,3276}
temp	point	$tmp1600	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1601	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1602	%read{3235,3276} %write{3235,3276}
temp	float	$tmp1603	%read{3235,3276} %write{3235,3276}
temp	int	$tmp1604	%read{2147483647,-1} %write{3235,3276}
temp	float	$tmp1605	%read{3278,3278} %write{3277,3277}
temp	int	$tmp1606	%read{3280,3280} %write{3279,3279}
temp	int	$tmp1607	%read{3281,3285} %write{3280,3284}
temp	int	$tmp1608	%read{3283,3283} %write{3282,3282}
temp	int	$tmp1609	%read{3284,3284} %write{3283,3283}
temp	int	$tmp1610	%read{3287,3287} %write{3286,3286}
temp	float	$tmp1611	%read{3310,3310} %write{3309,3309}
temp	point	$tmp1612	%read{3306,3306} %write{3305,3305}
temp	float	$tmp1613	%read{3305,3305} %write{3294,3294}
temp	float	$tmp1614	%read{3292,3292} %write{3291,3291}
temp	float	$tmp1615	%read{3291,3291} %write{3290,3290}
temp	int	$tmp1616	%read{3293,3293} %write{3292,3292}
temp	float	$tmp1617	%read{3294,3294} %write{3293,3293}
temp	float	$tmp1618	%read{3305,3305} %write{3299,3299}
temp	float	$tmp1619	%read{3297,3297} %write{3296,3296}
temp	float	$tmp1620	%read{3296,3296} %write{3295,3295}
temp	int	$tmp1621	%read{3298,3298} %write{3297,3297}
temp	float	$tmp1622	%read{3299,3299} %write{3298,3298}
temp	float	$tmp1623	%read{3305,3305} %write{3304,3304}
temp	float	$tmp1624	%read{3302,3302} %write{3301,3301}
temp	float	$tmp1625	%read{3301,3301} %write{3300,3300}
temp	int	$tmp1626	%read{3303,3303} %write{3302,3302}
temp	float	$tmp1627	%read{3304,3304} %write{3303,3303}
temp	point	$tmp1628	%read{3308,3308} %write{3307,3307}
temp	float	$tmp1629	%read{3311,3311} %write{3310,3310}
temp	float	$tmp1630	%read{3313,3313} %write{3312,3312}
temp	float	$tmp1631	%read{3314,3314} %write{3313,3313}
temp	int	$tmp1632	%read{3318,3318} %write{3317,3317}
temp	float	$tmp1633	%read{3344,3344} %write{3343,3343}
temp	float	$tmp1634	%read{3343,3343} %write{3342,3342}
temp	point	$tmp1635	%read{3339,3339} %write{3338,3338}
temp	float	$tmp1636	%read{3338,3338} %write{3327,3327}
temp	float	$tmp1637	%read{3325,3325} %write{3324,3324}
temp	float	$tmp1638	%read{3324,3324} %write{3323,3323}
temp	int	$tmp1639	%read{3326,3326} %write{3325,3325}
temp	float	$tmp1640	%read{3327,3327} %write{3326,3326}
temp	float	$tmp1641	%read{3338,3338} %write{3332,3332}
temp	float	$tmp1642	%read{3330,3330} %write{3329,3329}
temp	float	$tmp1643	%read{3329,3329} %write{3328,3328}
temp	int	$tmp1644	%read{3331,3331} %write{3330,3330}
temp	float	$tmp1645	%read{3332,3332} %write{3331,3331}
temp	float	$tmp1646	%read{3338,3338} %write{3337,3337}
temp	float	$tmp1647	%read{3335,3335} %write{3334,3334}
temp	float	$tmp1648	%read{3334,3334} %write{3333,3333}
temp	int	$tmp1649	%read{3336,3336} %write{3335,3335}
temp	float	$tmp1650	%read{3337,3337} %write{3336,3336}
temp	point	$tmp1651	%read{3341,3341} %write{3340,3340}
temp	int	$tmp1652	%read{3350,3387} %write{3350,3387}
temp	int	$tmp1653	%read{3350,3387} %write{3350,3387}
temp	int	$tmp1654	%read{3348,3387} %write{3349,3387}
temp	float	$tmp1655	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1656	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1657	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1658	%read{3350,3387} %write{3350,3387}
temp	point	$tmp1659	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1660	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1661	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1662	%read{3350,3387} %write{3350,3387}
temp	int	$tmp1663	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1664	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1665	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1666	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1667	%read{3350,3387} %write{3350,3387}
temp	int	$tmp1668	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1669	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1670	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1671	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1672	%read{3350,3387} %write{3350,3387}
temp	int	$tmp1673	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1674	%read{3350,3387} %write{3350,3387}
temp	point	$tmp1675	%read{3350,3387} %write{3350,3387}
temp	float	$tmp1676	%read{3350,3387} %write{3350,3387}
temp	int	$tmp1677	%read{2147483647,-1} %write{3350,3387}
temp	int	$tmp1678	%read{3391,3391} %write{3390,3390}
temp	float	$tmp1679	%read{3416,3416} %write{3415,3415}
temp	point	$tmp1680	%read{3412,3412} %write{3411,3411}
temp	float	$tmp1681	%read{3411,3411} %write{3400,3400}
temp	float	$tmp1682	%read{3398,3398} %write{3397,3397}
temp	float	$tmp1683	%read{3397,3397} %write{3396,3396}
temp	int	$tmp1684	%read{3399,3399} %write{3398,3398}
temp	float	$tmp1685	%read{3400,3400} %write{3399,3399}
temp	float	$tmp1686	%read{3411,3411} %write{3405,3405}
temp	float	$tmp1687	%read{3403,3403} %write{3402,3402}
temp	float	$tmp1688	%read{3402,3402} %write{3401,3401}
temp	int	$tmp1689	%read{3404,3404} %write{3403,3403}
temp	float	$tmp1690	%read{3405,3405} %write{3404,3404}
temp	float	$tmp1691	%read{3411,3411} %write{3410,3410}
temp	float	$tmp1692	%read{3408,3408} %write{3407,3407}
temp	float	$tmp1693	%read{3407,3407} %write{3406,3406}
temp	int	$tmp1694	%read{3409,3409} %write{3408,3408}
temp	float	$tmp1695	%read{3410,3410} %write{3409,3409}
temp	point	$tmp1696	%read{3414,3414} %write{3413,3413}
temp	int	$tmp1697	%read{3420,3451} %write{3420,3451}
temp	int	$tmp1698	%read{3420,3451} %write{3420,3451}
temp	int	$tmp1699	%read{3418,3451} %write{3419,3451}
temp	float	$tmp1700	%read{3420,3451} %write{3420,3451}
temp	point	$tmp1701	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1702	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1703	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1704	%read{3420,3451} %write{3420,3451}
temp	int	$tmp1705	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1706	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1707	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1708	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1709	%read{3420,3451} %write{3420,3451}
temp	int	$tmp1710	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1711	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1712	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1713	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1714	%read{3420,3451} %write{3420,3451}
temp	int	$tmp1715	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1716	%read{3420,3451} %write{3420,3451}
temp	point	$tmp1717	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1718	%read{3420,3451} %write{3420,3451}
temp	float	$tmp1719	%read{3420,3451} %write{3420,3451}
temp	int	$tmp1720	%read{2147483647,-1} %write{3420,3451}
temp	float	$tmp1721	%read{3453,3453} %write{3452,3452}
temp	int	$tmp1722	%read{3455,3455} %write{3454,3454}
temp	float	$tmp1723	%read{3477,3477} %write{3476,3476}
temp	point	$tmp1724	%read{3473,3473} %write{3472,3472}
temp	float	$tmp1725	%read{3472,3472} %write{3461,3461}
temp	float	$tmp1726	%read{3459,3459} %write{3458,3458}
temp	float	$tmp1727	%read{3458,3458} %write{3457,3457}
temp	int	$tmp1728	%read{3460,3460} %write{3459,3459}
temp	float	$tmp1729	%read{3461,3461} %write{3460,3460}
temp	float	$tmp1730	%read{3472,3472} %write{3466,3466}
temp	float	$tmp1731	%read{3464,3464} %write{3463,3463}
temp	float	$tmp1732	%read{3463,3463} %write{3462,3462}
temp	int	$tmp1733	%read{3465,3465} %write{3464,3464}
temp	float	$tmp1734	%read{3466,3466} %write{3465,3465}
temp	float	$tmp1735	%read{3472,3472} %write{3471,3471}
temp	float	$tmp1736	%read{3469,3469} %write{3468,3468}
temp	float	$tmp1737	%read{3468,3468} %write{3467,3467}
temp	int	$tmp1738	%read{3470,3470} %write{3469,3469}
temp	float	$tmp1739	%read{3471,3471} %write{3470,3470}
temp	point	$tmp1740	%read{3475,3475} %write{3474,3474}
temp	float	$tmp1741	%read{3478,3478} %write{3477,3477}
temp	float	$tmp1742	%read{3479,3479} %write{3478,3478}
temp	float	$tmp1743	%read{3481,3481} %write{3480,3480}
temp	float	$tmp1744	%read{3919,3919} %write{3568,3917}
temp	point	$tmp1745	%read{3498,3498} %write{3497,3497}
const	float	$const40	4		%read{3488,4952} %write{2147483647,-1}
temp	float	$tmp1746	%read{3489,3489} %write{3488,3488}
temp	float	$tmp1747	%read{3490,3490} %write{3489,3489}
temp	float	$tmp1748	%read{3497,3497} %write{3490,3490}
temp	float	$tmp1749	%read{3492,3492} %write{3491,3491}
temp	float	$tmp1750	%read{3493,3493} %write{3492,3492}
temp	float	$tmp1751	%read{3497,3497} %write{3493,3493}
temp	float	$tmp1752	%read{3495,3495} %write{3494,3494}
temp	float	$tmp1753	%read{3496,3496} %write{3495,3495}
temp	float	$tmp1754	%read{3497,3497} %write{3496,3496}
temp	point	$tmp1755	%read{3503,3825} %write{3498,3498}
temp	int	$tmp1756	%read{3501,3501} %write{3500,3500}
temp	int	$tmp1757	%read{3508,3538} %write{3508,3538}
temp	int	$tmp1758	%read{3508,3538} %write{3508,3538}
temp	int	$tmp1759	%read{3506,3538} %write{3507,3538}
temp	float	$tmp1760	%read{3508,3538} %write{3508,3538}
temp	point	$tmp1761	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1762	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1763	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1764	%read{3508,3538} %write{3508,3538}
temp	int	$tmp1765	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1766	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1767	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1768	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1769	%read{3508,3538} %write{3508,3538}
temp	int	$tmp1770	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1771	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1772	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1773	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1774	%read{3508,3538} %write{3508,3538}
temp	int	$tmp1775	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1776	%read{3508,3538} %write{3508,3538}
temp	point	$tmp1777	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1778	%read{3508,3538} %write{3508,3538}
temp	float	$tmp1779	%read{3508,3538} %write{3508,3538}
temp	int	$tmp1780	%read{2147483647,-1} %write{3508,3538}
temp	float	$tmp1781	%read{3540,3540} %write{3539,3539}
temp	int	$tmp1782	%read{3542,3542} %write{3541,3541}
temp	float	$tmp1783	%read{3565,3565} %write{3543,3543}
temp	float	$tmp1784	%read{3565,3565} %write{3564,3564}
temp	point	$tmp1785	%read{3561,3561} %write{3560,3560}
temp	float	$tmp1786	%read{3560,3560} %write{3549,3549}
temp	float	$tmp1787	%read{3547,3547} %write{3546,3546}
temp	float	$tmp1788	%read{3546,3546} %write{3545,3545}
temp	int	$tmp1789	%read{3548,3548} %write{3547,3547}
temp	float	$tmp1790	%read{3549,3549} %write{3548,3548}
temp	float	$tmp1791	%read{3560,3560} %write{3554,3554}
temp	float	$tmp1792	%read{3552,3552} %write{3551,3551}
temp	float	$tmp1793	%read{3551,3551} %write{3550,3550}
temp	int	$tmp1794	%read{3553,3553} %write{3552,3552}
temp	float	$tmp1795	%read{3554,3554} %write{3553,3553}
temp	float	$tmp1796	%read{3560,3560} %write{3559,3559}
temp	float	$tmp1797	%read{3557,3557} %write{3556,3556}
temp	float	$tmp1798	%read{3556,3556} %write{3555,3555}
temp	int	$tmp1799	%read{3558,3558} %write{3557,3557}
temp	float	$tmp1800	%read{3559,3559} %write{3558,3558}
temp	point	$tmp1801	%read{3563,3563} %write{3562,3562}
temp	float	$tmp1802	%read{3566,3566} %write{3565,3565}
temp	float	$tmp1803	%read{3567,3567} %write{3566,3566}
temp	int	$tmp1804	%read{3571,3571} %write{3570,3570}
temp	int	$tmp1805	%read{3580,3611} %write{3580,3611}
temp	int	$tmp1806	%read{3580,3611} %write{3580,3611}
temp	int	$tmp1807	%read{3578,3611} %write{3579,3611}
temp	point	$tmp1808	%read{3580,3611} %write{3580,3611}
temp	point	$tmp1809	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1810	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1811	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1812	%read{3580,3611} %write{3580,3611}
temp	int	$tmp1813	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1814	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1815	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1816	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1817	%read{3580,3611} %write{3580,3611}
temp	int	$tmp1818	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1819	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1820	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1821	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1822	%read{3580,3611} %write{3580,3611}
temp	int	$tmp1823	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1824	%read{3580,3611} %write{3580,3611}
temp	point	$tmp1825	%read{3580,3611} %write{3580,3611}
temp	float	$tmp1826	%read{3580,3611} %write{3580,3611}
temp	int	$tmp1827	%read{2147483647,-1} %write{3580,3611}
temp	float	$tmp1828	%read{3613,3613} %write{3612,3612}
temp	int	$tmp1829	%read{3615,3615} %write{3614,3614}
temp	point	$tmp1830	%read{3618,3635} %write{3616,3616}
temp	point	$tmp1831	%read{3634,3634} %write{3633,3633}
temp	float	$tmp1832	%read{3633,3633} %write{3622,3622}
temp	float	$tmp1833	%read{3620,3620} %write{3619,3619}
temp	float	$tmp1834	%read{3619,3619} %write{3618,3618}
temp	int	$tmp1835	%read{3621,3621} %write{3620,3620}
temp	float	$tmp1836	%read{3622,3622} %write{3621,3621}
temp	float	$tmp1837	%read{3633,3633} %write{3627,3627}
temp	float	$tmp1838	%read{3625,3625} %write{3624,3624}
temp	float	$tmp1839	%read{3624,3624} %write{3623,3623}
temp	int	$tmp1840	%read{3626,3626} %write{3625,3625}
temp	float	$tmp1841	%read{3627,3627} %write{3626,3626}
temp	float	$tmp1842	%read{3633,3633} %write{3632,3632}
temp	float	$tmp1843	%read{3630,3630} %write{3629,3629}
temp	float	$tmp1844	%read{3629,3629} %write{3628,3628}
temp	int	$tmp1845	%read{3631,3631} %write{3630,3630}
temp	float	$tmp1846	%read{3632,3632} %write{3631,3631}
temp	point	$tmp1847	%read{3636,3636} %write{3635,3635}
temp	float	$tmp1848	%read{3639,3639} %write{3638,3638}
temp	float	$tmp1849	%read{3642,3642} %write{3641,3641}
temp	float	$tmp1850	%read{3643,3643} %write{3642,3642}
temp	float	$tmp1851	%read{3648,3648} %write{3643,3643}
temp	float	$tmp1852	%read{3646,3646} %write{3644,3644}
temp	float	$tmp1853	%read{3646,3646} %write{3645,3645}
temp	float	$tmp1854	%read{3647,3647} %write{3646,3646}
temp	float	$tmp1855	%read{3648,3648} %write{3647,3647}
temp	float	$tmp1856	%read{3653,3653} %write{3652,3652}
temp	float	$tmp1857	%read{3654,3654} %write{3653,3653}
temp	int	$tmp1858	%read{3659,3659} %write{3658,3658}
temp	int	$tmp1859	%read{3667,3708} %write{3667,3708}
temp	int	$tmp1860	%read{3667,3708} %write{3667,3708}
temp	int	$tmp1861	%read{3667,3708} %write{3667,3708}
temp	int	$tmp1862	%read{3667,3708} %write{3667,3708}
temp	int	$tmp1863	%read{3667,3708} %write{3667,3708}
temp	int	$tmp1864	%read{3665,3708} %write{3666,3708}
temp	int	$tmp1865	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1866	%read{3667,3708} %write{3667,3708}
temp	point	$tmp1867	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1868	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1869	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1870	%read{3667,3708} %write{3667,3708}
temp	int	$tmp1871	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1872	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1873	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1874	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1875	%read{3667,3708} %write{3667,3708}
temp	int	$tmp1876	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1877	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1878	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1879	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1880	%read{3667,3708} %write{3667,3708}
temp	int	$tmp1881	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1882	%read{3667,3708} %write{3667,3708}
temp	point	$tmp1883	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1884	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1885	%read{3667,3708} %write{3667,3708}
temp	float	$tmp1886	%read{3667,3708} %write{3667,3708}
temp	int	$tmp1887	%read{2147483647,-1} %write{3667,3708}
temp	float	$tmp1888	%read{3710,3710} %write{3709,3709}
temp	int	$tmp1889	%read{3712,3712} %write{3711,3711}
temp	int	$tmp1890	%read{3713,3717} %write{3712,3716}
temp	int	$tmp1891	%read{3715,3715} %write{3714,3714}
temp	int	$tmp1892	%read{3716,3716} %write{3715,3715}
temp	int	$tmp1893	%read{3719,3719} %write{3718,3718}
temp	float	$tmp1894	%read{3742,3742} %write{3741,3741}
temp	point	$tmp1895	%read{3738,3738} %write{3737,3737}
temp	float	$tmp1896	%read{3737,3737} %write{3726,3726}
temp	float	$tmp1897	%read{3724,3724} %write{3723,3723}
temp	float	$tmp1898	%read{3723,3723} %write{3722,3722}
temp	int	$tmp1899	%read{3725,3725} %write{3724,3724}
temp	float	$tmp1900	%read{3726,3726} %write{3725,3725}
temp	float	$tmp1901	%read{3737,3737} %write{3731,3731}
temp	float	$tmp1902	%read{3729,3729} %write{3728,3728}
temp	float	$tmp1903	%read{3728,3728} %write{3727,3727}
temp	int	$tmp1904	%read{3730,3730} %write{3729,3729}
temp	float	$tmp1905	%read{3731,3731} %write{3730,3730}
temp	float	$tmp1906	%read{3737,3737} %write{3736,3736}
temp	float	$tmp1907	%read{3734,3734} %write{3733,3733}
temp	float	$tmp1908	%read{3733,3733} %write{3732,3732}
temp	int	$tmp1909	%read{3735,3735} %write{3734,3734}
temp	float	$tmp1910	%read{3736,3736} %write{3735,3735}
temp	point	$tmp1911	%read{3740,3740} %write{3739,3739}
temp	float	$tmp1912	%read{3743,3743} %write{3742,3742}
temp	float	$tmp1913	%read{3745,3745} %write{3744,3744}
temp	float	$tmp1914	%read{3746,3746} %write{3745,3745}
temp	int	$tmp1915	%read{3750,3750} %write{3749,3749}
temp	float	$tmp1916	%read{3776,3776} %write{3775,3775}
temp	float	$tmp1917	%read{3775,3775} %write{3774,3774}
temp	point	$tmp1918	%read{3771,3771} %write{3770,3770}
temp	float	$tmp1919	%read{3770,3770} %write{3759,3759}
temp	float	$tmp1920	%read{3757,3757} %write{3756,3756}
temp	float	$tmp1921	%read{3756,3756} %write{3755,3755}
temp	int	$tmp1922	%read{3758,3758} %write{3757,3757}
temp	float	$tmp1923	%read{3759,3759} %write{3758,3758}
temp	float	$tmp1924	%read{3770,3770} %write{3764,3764}
temp	float	$tmp1925	%read{3762,3762} %write{3761,3761}
temp	float	$tmp1926	%read{3761,3761} %write{3760,3760}
temp	int	$tmp1927	%read{3763,3763} %write{3762,3762}
temp	float	$tmp1928	%read{3764,3764} %write{3763,3763}
temp	float	$tmp1929	%read{3770,3770} %write{3769,3769}
temp	float	$tmp1930	%read{3767,3767} %write{3766,3766}
temp	float	$tmp1931	%read{3766,3766} %write{3765,3765}
temp	int	$tmp1932	%read{3768,3768} %write{3767,3767}
temp	float	$tmp1933	%read{3769,3769} %write{3768,3768}
temp	point	$tmp1934	%read{3773,3773} %write{3772,3772}
temp	int	$tmp1935	%read{3782,3819} %write{3782,3819}
temp	int	$tmp1936	%read{3782,3819} %write{3782,3819}
temp	int	$tmp1937	%read{3780,3819} %write{3781,3819}
temp	float	$tmp1938	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1939	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1940	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1941	%read{3782,3819} %write{3782,3819}
temp	point	$tmp1942	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1943	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1944	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1945	%read{3782,3819} %write{3782,3819}
temp	int	$tmp1946	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1947	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1948	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1949	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1950	%read{3782,3819} %write{3782,3819}
temp	int	$tmp1951	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1952	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1953	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1954	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1955	%read{3782,3819} %write{3782,3819}
temp	int	$tmp1956	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1957	%read{3782,3819} %write{3782,3819}
temp	point	$tmp1958	%read{3782,3819} %write{3782,3819}
temp	float	$tmp1959	%read{3782,3819} %write{3782,3819}
temp	int	$tmp1960	%read{2147483647,-1} %write{3782,3819}
temp	int	$tmp1961	%read{3823,3823} %write{3822,3822}
temp	float	$tmp1962	%read{3848,3848} %write{3847,3847}
temp	point	$tmp1963	%read{3844,3844} %write{3843,3843}
temp	float	$tmp1964	%read{3843,3843} %write{3832,3832}
temp	float	$tmp1965	%read{3830,3830} %write{3829,3829}
temp	float	$tmp1966	%read{3829,3829} %write{3828,3828}
temp	int	$tmp1967	%read{3831,3831} %write{3830,3830}
temp	float	$tmp1968	%read{3832,3832} %write{3831,3831}
temp	float	$tmp1969	%read{3843,3843} %write{3837,3837}
temp	float	$tmp1970	%read{3835,3835} %write{3834,3834}
temp	float	$tmp1971	%read{3834,3834} %write{3833,3833}
temp	int	$tmp1972	%read{3836,3836} %write{3835,3835}
temp	float	$tmp1973	%read{3837,3837} %write{3836,3836}
temp	float	$tmp1974	%read{3843,3843} %write{3842,3842}
temp	float	$tmp1975	%read{3840,3840} %write{3839,3839}
temp	float	$tmp1976	%read{3839,3839} %write{3838,3838}
temp	int	$tmp1977	%read{3841,3841} %write{3840,3840}
temp	float	$tmp1978	%read{3842,3842} %write{3841,3841}
temp	point	$tmp1979	%read{3846,3846} %write{3845,3845}
temp	int	$tmp1980	%read{3852,3883} %write{3852,3883}
temp	int	$tmp1981	%read{3852,3883} %write{3852,3883}
temp	int	$tmp1982	%read{3850,3883} %write{3851,3883}
temp	float	$tmp1983	%read{3852,3883} %write{3852,3883}
temp	point	$tmp1984	%read{3852,3883} %write{3852,3883}
temp	float	$tmp1985	%read{3852,3883} %write{3852,3883}
temp	float	$tmp1986	%read{3852,3883} %write{3852,3883}
temp	float	$tmp1987	%read{3852,3883} %write{3852,3883}
temp	int	$tmp1988	%read{3852,3883} %write{3852,3883}
temp	float	$tmp1989	%read{3852,3883} %write{3852,3883}
temp	float	$tmp1990	%read{3852,3883} %write{3852,3883}
temp	float	$tmp1991	%read{3852,3883} %write{3852,3883}
temp	float	$tmp1992	%read{3852,3883} %write{3852,3883}
temp	int	$tmp1993	%read{3852,3883} %write{3852,3883}
temp	float	$tmp1994	%read{3852,3883} %write{3852,3883}
temp	float	$tmp1995	%read{3852,3883} %write{3852,3883}
temp	float	$tmp1996	%read{3852,3883} %write{3852,3883}
temp	float	$tmp1997	%read{3852,3883} %write{3852,3883}
temp	int	$tmp1998	%read{3852,3883} %write{3852,3883}
temp	float	$tmp1999	%read{3852,3883} %write{3852,3883}
temp	point	$tmp2000	%read{3852,3883} %write{3852,3883}
temp	float	$tmp2001	%read{3852,3883} %write{3852,3883}
temp	float	$tmp2002	%read{3852,3883} %write{3852,3883}
temp	int	$tmp2003	%read{2147483647,-1} %write{3852,3883}
temp	float	$tmp2004	%read{3885,3885} %write{3884,3884}
temp	int	$tmp2005	%read{3887,3887} %write{3886,3886}
temp	float	$tmp2006	%read{3909,3909} %write{3908,3908}
temp	point	$tmp2007	%read{3905,3905} %write{3904,3904}
temp	float	$tmp2008	%read{3904,3904} %write{3893,3893}
temp	float	$tmp2009	%read{3891,3891} %write{3890,3890}
temp	float	$tmp2010	%read{3890,3890} %write{3889,3889}
temp	int	$tmp2011	%read{3892,3892} %write{3891,3891}
temp	float	$tmp2012	%read{3893,3893} %write{3892,3892}
temp	float	$tmp2013	%read{3904,3904} %write{3898,3898}
temp	float	$tmp2014	%read{3896,3896} %write{3895,3895}
temp	float	$tmp2015	%read{3895,3895} %write{3894,3894}
temp	int	$tmp2016	%read{3897,3897} %write{3896,3896}
temp	float	$tmp2017	%read{3898,3898} %write{3897,3897}
temp	float	$tmp2018	%read{3904,3904} %write{3903,3903}
temp	float	$tmp2019	%read{3901,3901} %write{3900,3900}
temp	float	$tmp2020	%read{3900,3900} %write{3899,3899}
temp	int	$tmp2021	%read{3902,3902} %write{3901,3901}
temp	float	$tmp2022	%read{3903,3903} %write{3902,3902}
temp	point	$tmp2023	%read{3907,3907} %write{3906,3906}
temp	float	$tmp2024	%read{3910,3910} %write{3909,3909}
temp	float	$tmp2025	%read{3911,3911} %write{3910,3910}
temp	float	$tmp2026	%read{3913,3913} %write{3912,3912}
const	string	$const41	"4D"		%read{3921,3921} %write{2147483647,-1}
temp	int	$tmp2027	%read{3922,3922} %write{3921,3921}
temp	float	$tmp2028.x	%read{3928,3928} %write{3923,3923}
temp	float	$tmp2028.y	%read{3929,3929} %write{3924,3924}
temp	float	$tmp2028.z	%read{3930,3930} %write{3925,3925}
temp	float	$tmp2028.w	%read{3931,3931} %write{3926,3926}
temp	int	$tmp2029	%read{3933,3933} %write{3932,3932}
temp	float	$tmp2030.x	%read{4187,4187} %write{3996,3996}
temp	float	$tmp2030.y	%read{4188,4188} %write{4059,4059}
temp	float	$tmp2030.z	%read{4189,4189} %write{4122,4122}
temp	float	$tmp2030.w	%read{4190,4190} %write{4185,4185}
temp	float	$tmp2031	%read{3996,3996} %write{3995,3995}
temp	float	$tmp2032.x	%read{3953,3985} %write{3948,3948}
temp	float	$tmp2032.y	%read{3957,3986} %write{3949,3949}
temp	float	$tmp2032.z	%read{3961,3987} %write{3950,3950}
temp	float	$tmp2032.w	%read{3965,3988} %write{3951,3951}
temp	float	$tmp2033.x	%read{3948,3948} %write{3937,3937}
temp	float	$tmp2033.y	%read{3949,3949} %write{3940,3940}
temp	float	$tmp2033.z	%read{3950,3950} %write{3943,3943}
temp	float	$tmp2033.w	%read{3951,3951} %write{3946,3946}
const	string	$const42	"random_vector4_offset"		%read{3934,5711} %write{2147483647,-1}
temp	float	$tmp2034	%read{3936,3936} %write{3935,3935}
temp	float	$tmp2035	%read{3937,3937} %write{3936,3936}
temp	float	$tmp2036	%read{3939,3939} %write{3938,3938}
temp	float	$tmp2037	%read{3940,3940} %write{3939,3939}
temp	float	$tmp2038	%read{3942,3942} %write{3941,3941}
temp	float	$tmp2039	%read{3943,3943} %write{3942,3942}
temp	float	$tmp2040	%read{3945,3945} %write{3944,3944}
temp	float	$tmp2041	%read{3946,3946} %write{3945,3945}
temp	float	$tmp2042.x	%read{3975,3975} %write{3956,3956}
temp	float	$tmp2042.y	%read{3976,3976} %write{3960,3960}
temp	float	$tmp2042.z	%read{3977,3977} %write{3964,3964}
temp	float	$tmp2042.w	%read{3978,3978} %write{3968,3968}
temp	float	$tmp2043	%read{3954,3954} %write{3953,3953}
temp	int	$tmp2044	%read{3955,3955} %write{3954,3954}
temp	float	$tmp2045	%read{3956,3956} %write{3955,3955}
temp	float	$tmp2046	%read{3958,3958} %write{3957,3957}
temp	int	$tmp2047	%read{3959,3959} %write{3958,3958}
temp	float	$tmp2048	%read{3960,3960} %write{3959,3959}
temp	float	$tmp2049	%read{3962,3962} %write{3961,3961}
temp	int	$tmp2050	%read{3963,3963} %write{3962,3962}
temp	float	$tmp2051	%read{3964,3964} %write{3963,3963}
temp	float	$tmp2052	%read{3966,3966} %write{3965,3965}
temp	int	$tmp2053	%read{3967,3967} %write{3966,3966}
temp	float	$tmp2054	%read{3968,3968} %write{3967,3967}
temp	float	$tmp2055.x	%read{3975,3975} %write{3970,3970}
temp	float	$tmp2055.y	%read{3976,3976} %write{3971,3971}
temp	float	$tmp2055.z	%read{3977,3977} %write{3972,3972}
temp	float	$tmp2055.w	%read{3978,3978} %write{3973,3973}
temp	float	$tmp2056.x	%read{3990,3990} %write{3985,3985}
temp	float	$tmp2056.y	%read{3991,3991} %write{3986,3986}
temp	float	$tmp2056.z	%read{3992,3992} %write{3987,3987}
temp	float	$tmp2056.w	%read{3993,3993} %write{3988,3988}
temp	float	$tmp2057.x	%read{3985,3985} %write{3980,3980}
temp	float	$tmp2057.y	%read{3986,3986} %write{3981,3981}
temp	float	$tmp2057.z	%read{3987,3987} %write{3982,3982}
temp	float	$tmp2057.w	%read{3988,3988} %write{3983,3983}
temp	point	$tmp2058	%read{3995,3995} %write{3994,3994}
temp	float	$tmp2059	%read{4059,4059} %write{4058,4058}
temp	float	$tmp2060.x	%read{4016,4048} %write{4011,4011}
temp	float	$tmp2060.y	%read{4020,4049} %write{4012,4012}
temp	float	$tmp2060.z	%read{4024,4050} %write{4013,4013}
temp	float	$tmp2060.w	%read{4028,4051} %write{4014,4014}
temp	float	$tmp2061.x	%read{4011,4011} %write{4000,4000}
temp	float	$tmp2061.y	%read{4012,4012} %write{4003,4003}
temp	float	$tmp2061.z	%read{4013,4013} %write{4006,4006}
temp	float	$tmp2061.w	%read{4014,4014} %write{4009,4009}
temp	float	$tmp2062	%read{3999,3999} %write{3998,3998}
temp	float	$tmp2063	%read{4000,4000} %write{3999,3999}
temp	float	$tmp2064	%read{4002,4002} %write{4001,4001}
temp	float	$tmp2065	%read{4003,4003} %write{4002,4002}
temp	float	$tmp2066	%read{4005,4005} %write{4004,4004}
temp	float	$tmp2067	%read{4006,4006} %write{4005,4005}
temp	float	$tmp2068	%read{4008,4008} %write{4007,4007}
temp	float	$tmp2069	%read{4009,4009} %write{4008,4008}
temp	float	$tmp2070.x	%read{4038,4038} %write{4019,4019}
temp	float	$tmp2070.y	%read{4039,4039} %write{4023,4023}
temp	float	$tmp2070.z	%read{4040,4040} %write{4027,4027}
temp	float	$tmp2070.w	%read{4041,4041} %write{4031,4031}
temp	float	$tmp2071	%read{4017,4017} %write{4016,4016}
temp	int	$tmp2072	%read{4018,4018} %write{4017,4017}
temp	float	$tmp2073	%read{4019,4019} %write{4018,4018}
temp	float	$tmp2074	%read{4021,4021} %write{4020,4020}
temp	int	$tmp2075	%read{4022,4022} %write{4021,4021}
temp	float	$tmp2076	%read{4023,4023} %write{4022,4022}
temp	float	$tmp2077	%read{4025,4025} %write{4024,4024}
temp	int	$tmp2078	%read{4026,4026} %write{4025,4025}
temp	float	$tmp2079	%read{4027,4027} %write{4026,4026}
temp	float	$tmp2080	%read{4029,4029} %write{4028,4028}
temp	int	$tmp2081	%read{4030,4030} %write{4029,4029}
temp	float	$tmp2082	%read{4031,4031} %write{4030,4030}
temp	float	$tmp2083.x	%read{4038,4038} %write{4033,4033}
temp	float	$tmp2083.y	%read{4039,4039} %write{4034,4034}
temp	float	$tmp2083.z	%read{4040,4040} %write{4035,4035}
temp	float	$tmp2083.w	%read{4041,4041} %write{4036,4036}
temp	float	$tmp2084.x	%read{4053,4053} %write{4048,4048}
temp	float	$tmp2084.y	%read{4054,4054} %write{4049,4049}
temp	float	$tmp2084.z	%read{4055,4055} %write{4050,4050}
temp	float	$tmp2084.w	%read{4056,4056} %write{4051,4051}
temp	float	$tmp2085.x	%read{4048,4048} %write{4043,4043}
temp	float	$tmp2085.y	%read{4049,4049} %write{4044,4044}
temp	float	$tmp2085.z	%read{4050,4050} %write{4045,4045}
temp	float	$tmp2085.w	%read{4051,4051} %write{4046,4046}
temp	point	$tmp2086	%read{4058,4058} %write{4057,4057}
temp	float	$tmp2087	%read{4122,4122} %write{4121,4121}
temp	float	$tmp2088.x	%read{4079,4111} %write{4074,4074}
temp	float	$tmp2088.y	%read{4083,4112} %write{4075,4075}
temp	float	$tmp2088.z	%read{4087,4113} %write{4076,4076}
temp	float	$tmp2088.w	%read{4091,4114} %write{4077,4077}
temp	float	$tmp2089.x	%read{4074,4074} %write{4063,4063}
temp	float	$tmp2089.y	%read{4075,4075} %write{4066,4066}
temp	float	$tmp2089.z	%read{4076,4076} %write{4069,4069}
temp	float	$tmp2089.w	%read{4077,4077} %write{4072,4072}
temp	float	$tmp2090	%read{4062,4062} %write{4061,4061}
temp	float	$tmp2091	%read{4063,4063} %write{4062,4062}
temp	float	$tmp2092	%read{4065,4065} %write{4064,4064}
temp	float	$tmp2093	%read{4066,4066} %write{4065,4065}
temp	float	$tmp2094	%read{4068,4068} %write{4067,4067}
temp	float	$tmp2095	%read{4069,4069} %write{4068,4068}
temp	float	$tmp2096	%read{4071,4071} %write{4070,4070}
temp	float	$tmp2097	%read{4072,4072} %write{4071,4071}
temp	float	$tmp2098.x	%read{4101,4101} %write{4082,4082}
temp	float	$tmp2098.y	%read{4102,4102} %write{4086,4086}
temp	float	$tmp2098.z	%read{4103,4103} %write{4090,4090}
temp	float	$tmp2098.w	%read{4104,4104} %write{4094,4094}
temp	float	$tmp2099	%read{4080,4080} %write{4079,4079}
temp	int	$tmp2100	%read{4081,4081} %write{4080,4080}
temp	float	$tmp2101	%read{4082,4082} %write{4081,4081}
temp	float	$tmp2102	%read{4084,4084} %write{4083,4083}
temp	int	$tmp2103	%read{4085,4085} %write{4084,4084}
temp	float	$tmp2104	%read{4086,4086} %write{4085,4085}
temp	float	$tmp2105	%read{4088,4088} %write{4087,4087}
temp	int	$tmp2106	%read{4089,4089} %write{4088,4088}
temp	float	$tmp2107	%read{4090,4090} %write{4089,4089}
temp	float	$tmp2108	%read{4092,4092} %write{4091,4091}
temp	int	$tmp2109	%read{4093,4093} %write{4092,4092}
temp	float	$tmp2110	%read{4094,4094} %write{4093,4093}
temp	float	$tmp2111.x	%read{4101,4101} %write{4096,4096}
temp	float	$tmp2111.y	%read{4102,4102} %write{4097,4097}
temp	float	$tmp2111.z	%read{4103,4103} %write{4098,4098}
temp	float	$tmp2111.w	%read{4104,4104} %write{4099,4099}
temp	float	$tmp2112.x	%read{4116,4116} %write{4111,4111}
temp	float	$tmp2112.y	%read{4117,4117} %write{4112,4112}
temp	float	$tmp2112.z	%read{4118,4118} %write{4113,4113}
temp	float	$tmp2112.w	%read{4119,4119} %write{4114,4114}
temp	float	$tmp2113.x	%read{4111,4111} %write{4106,4106}
temp	float	$tmp2113.y	%read{4112,4112} %write{4107,4107}
temp	float	$tmp2113.z	%read{4113,4113} %write{4108,4108}
temp	float	$tmp2113.w	%read{4114,4114} %write{4109,4109}
temp	point	$tmp2114	%read{4121,4121} %write{4120,4120}
temp	float	$tmp2115	%read{4185,4185} %write{4184,4184}
temp	float	$tmp2116.x	%read{4142,4174} %write{4137,4137}
temp	float	$tmp2116.y	%read{4146,4175} %write{4138,4138}
temp	float	$tmp2116.z	%read{4150,4176} %write{4139,4139}
temp	float	$tmp2116.w	%read{4154,4177} %write{4140,4140}
temp	float	$tmp2117.x	%read{4137,4137} %write{4126,4126}
temp	float	$tmp2117.y	%read{4138,4138} %write{4129,4129}
temp	float	$tmp2117.z	%read{4139,4139} %write{4132,4132}
temp	float	$tmp2117.w	%read{4140,4140} %write{4135,4135}
temp	float	$tmp2118	%read{4125,4125} %write{4124,4124}
temp	float	$tmp2119	%read{4126,4126} %write{4125,4125}
temp	float	$tmp2120	%read{4128,4128} %write{4127,4127}
temp	float	$tmp2121	%read{4129,4129} %write{4128,4128}
temp	float	$tmp2122	%read{4131,4131} %write{4130,4130}
temp	float	$tmp2123	%read{4132,4132} %write{4131,4131}
temp	float	$tmp2124	%read{4134,4134} %write{4133,4133}
temp	float	$tmp2125	%read{4135,4135} %write{4134,4134}
temp	float	$tmp2126.x	%read{4164,4164} %write{4145,4145}
temp	float	$tmp2126.y	%read{4165,4165} %write{4149,4149}
temp	float	$tmp2126.z	%read{4166,4166} %write{4153,4153}
temp	float	$tmp2126.w	%read{4167,4167} %write{4157,4157}
temp	float	$tmp2127	%read{4143,4143} %write{4142,4142}
temp	int	$tmp2128	%read{4144,4144} %write{4143,4143}
temp	float	$tmp2129	%read{4145,4145} %write{4144,4144}
temp	float	$tmp2130	%read{4147,4147} %write{4146,4146}
temp	int	$tmp2131	%read{4148,4148} %write{4147,4147}
temp	float	$tmp2132	%read{4149,4149} %write{4148,4148}
temp	float	$tmp2133	%read{4151,4151} %write{4150,4150}
temp	int	$tmp2134	%read{4152,4152} %write{4151,4151}
temp	float	$tmp2135	%read{4153,4153} %write{4152,4152}
temp	float	$tmp2136	%read{4155,4155} %write{4154,4154}
temp	int	$tmp2137	%read{4156,4156} %write{4155,4155}
temp	float	$tmp2138	%read{4157,4157} %write{4156,4156}
temp	float	$tmp2139.x	%read{4164,4164} %write{4159,4159}
temp	float	$tmp2139.y	%read{4165,4165} %write{4160,4160}
temp	float	$tmp2139.z	%read{4166,4166} %write{4161,4161}
temp	float	$tmp2139.w	%read{4167,4167} %write{4162,4162}
temp	float	$tmp2140.x	%read{4179,4179} %write{4174,4174}
temp	float	$tmp2140.y	%read{4180,4180} %write{4175,4175}
temp	float	$tmp2140.z	%read{4181,4181} %write{4176,4176}
temp	float	$tmp2140.w	%read{4182,4182} %write{4177,4177}
temp	float	$tmp2141.x	%read{4174,4174} %write{4169,4169}
temp	float	$tmp2141.y	%read{4175,4175} %write{4170,4170}
temp	float	$tmp2141.z	%read{4176,4176} %write{4171,4171}
temp	float	$tmp2141.w	%read{4177,4177} %write{4172,4172}
temp	point	$tmp2142	%read{4184,4184} %write{4183,4183}
temp	int	$tmp2143	%read{4193,4193} %write{4192,4192}
temp	int	$tmp2144	%read{4203,4265} %write{4203,4265}
temp	int	$tmp2145	%read{4203,4265} %write{4203,4265}
temp	int	$tmp2146	%read{4201,4265} %write{4202,4265}
temp	float	$tmp2147	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2148.x	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2148.y	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2148.z	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2148.w	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2149	%read{4203,4265} %write{4203,4265}
temp	int	$tmp2150	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2151	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2152	%read{4203,4265} %write{4203,4265}
temp	int	$tmp2153	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2154	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2155	%read{4203,4265} %write{4203,4265}
temp	int	$tmp2156	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2157	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2158	%read{4203,4265} %write{4203,4265}
temp	int	$tmp2159	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2160	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2161.x	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2161.y	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2161.z	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2161.w	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2162.x	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2162.y	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2162.z	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2162.w	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2163.x	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2163.y	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2163.z	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2163.w	%read{4203,4265} %write{4203,4265}
temp	point	$tmp2164	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2165	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2166	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2167.x	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2167.y	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2167.z	%read{4203,4265} %write{4203,4265}
temp	float	$tmp2167.w	%read{4203,4265} %write{4203,4265}
temp	int	$tmp2168	%read{2147483647,-1} %write{4203,4265}
temp	float	$tmp2169	%read{4267,4267} %write{4266,4266}
temp	int	$tmp2170	%read{4269,4269} %write{4268,4268}
temp	float	$tmp2171	%read{4315,4315} %write{4270,4270}
temp	float	$tmp2172	%read{4315,4315} %write{4314,4314}
temp	float	$tmp2173.x	%read{4294,4294} %write{4275,4275}
temp	float	$tmp2173.y	%read{4295,4295} %write{4279,4279}
temp	float	$tmp2173.z	%read{4296,4296} %write{4283,4283}
temp	float	$tmp2173.w	%read{4297,4297} %write{4287,4287}
temp	float	$tmp2174	%read{4273,4273} %write{4272,4272}
temp	int	$tmp2175	%read{4274,4274} %write{4273,4273}
temp	float	$tmp2176	%read{4275,4275} %write{4274,4274}
temp	float	$tmp2177	%read{4277,4277} %write{4276,4276}
temp	int	$tmp2178	%read{4278,4278} %write{4277,4277}
temp	float	$tmp2179	%read{4279,4279} %write{4278,4278}
temp	float	$tmp2180	%read{4281,4281} %write{4280,4280}
temp	int	$tmp2181	%read{4282,4282} %write{4281,4281}
temp	float	$tmp2182	%read{4283,4283} %write{4282,4282}
temp	float	$tmp2183	%read{4285,4285} %write{4284,4284}
temp	int	$tmp2184	%read{4286,4286} %write{4285,4285}
temp	float	$tmp2185	%read{4287,4287} %write{4286,4286}
temp	float	$tmp2186.x	%read{4294,4294} %write{4289,4289}
temp	float	$tmp2186.y	%read{4295,4295} %write{4290,4290}
temp	float	$tmp2186.z	%read{4296,4296} %write{4291,4291}
temp	float	$tmp2186.w	%read{4297,4297} %write{4292,4292}
temp	float	$tmp2187.x	%read{4309,4309} %write{4304,4304}
temp	float	$tmp2187.y	%read{4310,4310} %write{4305,4305}
temp	float	$tmp2187.z	%read{4311,4311} %write{4306,4306}
temp	float	$tmp2187.w	%read{4312,4312} %write{4307,4307}
temp	float	$tmp2188.x	%read{4304,4304} %write{4299,4299}
temp	float	$tmp2188.y	%read{4305,4305} %write{4300,4300}
temp	float	$tmp2188.z	%read{4306,4306} %write{4301,4301}
temp	float	$tmp2188.w	%read{4307,4307} %write{4302,4302}
temp	point	$tmp2189	%read{4314,4314} %write{4313,4313}
temp	float	$tmp2190	%read{4316,4316} %write{4315,4315}
temp	float	$tmp2191	%read{4317,4317} %write{4316,4316}
temp	int	$tmp2192	%read{4321,4321} %write{4320,4320}
temp	int	$tmp2193	%read{4333,4396} %write{4333,4396}
temp	int	$tmp2194	%read{4333,4396} %write{4333,4396}
temp	int	$tmp2195	%read{4331,4396} %write{4332,4396}
temp	float	$tmp2196.x	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2196.y	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2196.z	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2196.w	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2197.x	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2197.y	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2197.z	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2197.w	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2198.x	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2198.y	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2198.z	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2198.w	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2199	%read{4333,4396} %write{4333,4396}
temp	int	$tmp2200	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2201	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2202	%read{4333,4396} %write{4333,4396}
temp	int	$tmp2203	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2204	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2205	%read{4333,4396} %write{4333,4396}
temp	int	$tmp2206	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2207	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2208	%read{4333,4396} %write{4333,4396}
temp	int	$tmp2209	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2210	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2211.x	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2211.y	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2211.z	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2211.w	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2212.x	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2212.y	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2212.z	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2212.w	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2213.x	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2213.y	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2213.z	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2213.w	%read{4333,4396} %write{4333,4396}
temp	point	$tmp2214	%read{4333,4396} %write{4333,4396}
temp	float	$tmp2215	%read{4333,4396} %write{4333,4396}
temp	int	$tmp2216	%read{2147483647,-1} %write{4333,4396}
temp	float	$tmp2217	%read{4398,4398} %write{4397,4397}
temp	int	$tmp2218	%read{4400,4400} %write{4399,4399}
temp	float	$tmp2219.x	%read{4412,4444} %write{4407,4407}
temp	float	$tmp2219.y	%read{4416,4445} %write{4408,4408}
temp	float	$tmp2219.z	%read{4420,4446} %write{4409,4409}
temp	float	$tmp2219.w	%read{4424,4447} %write{4410,4410}
temp	float	$tmp2220.x	%read{4407,4407} %write{4402,4402}
temp	float	$tmp2220.y	%read{4408,4408} %write{4403,4403}
temp	float	$tmp2220.z	%read{4409,4409} %write{4404,4404}
temp	float	$tmp2220.w	%read{4410,4410} %write{4405,4405}
temp	float	$tmp2221.x	%read{4434,4434} %write{4415,4415}
temp	float	$tmp2221.y	%read{4435,4435} %write{4419,4419}
temp	float	$tmp2221.z	%read{4436,4436} %write{4423,4423}
temp	float	$tmp2221.w	%read{4437,4437} %write{4427,4427}
temp	float	$tmp2222	%read{4413,4413} %write{4412,4412}
temp	int	$tmp2223	%read{4414,4414} %write{4413,4413}
temp	float	$tmp2224	%read{4415,4415} %write{4414,4414}
temp	float	$tmp2225	%read{4417,4417} %write{4416,4416}
temp	int	$tmp2226	%read{4418,4418} %write{4417,4417}
temp	float	$tmp2227	%read{4419,4419} %write{4418,4418}
temp	float	$tmp2228	%read{4421,4421} %write{4420,4420}
temp	int	$tmp2229	%read{4422,4422} %write{4421,4421}
temp	float	$tmp2230	%read{4423,4423} %write{4422,4422}
temp	float	$tmp2231	%read{4425,4425} %write{4424,4424}
temp	int	$tmp2232	%read{4426,4426} %write{4425,4425}
temp	float	$tmp2233	%read{4427,4427} %write{4426,4426}
temp	float	$tmp2234.x	%read{4434,4434} %write{4429,4429}
temp	float	$tmp2234.y	%read{4435,4435} %write{4430,4430}
temp	float	$tmp2234.z	%read{4436,4436} %write{4431,4431}
temp	float	$tmp2234.w	%read{4437,4437} %write{4432,4432}
temp	float	$tmp2235.x	%read{4449,4449} %write{4444,4444}
temp	float	$tmp2235.y	%read{4450,4450} %write{4445,4445}
temp	float	$tmp2235.z	%read{4451,4451} %write{4446,4446}
temp	float	$tmp2235.w	%read{4452,4452} %write{4447,4447}
temp	float	$tmp2236.x	%read{4444,4444} %write{4439,4439}
temp	float	$tmp2236.y	%read{4445,4445} %write{4440,4440}
temp	float	$tmp2236.z	%read{4446,4446} %write{4441,4441}
temp	float	$tmp2236.w	%read{4447,4447} %write{4442,4442}
temp	point	$tmp2237	%read{4454,4454} %write{4453,4453}
temp	float	$tmp2238	%read{4456,4456} %write{4455,4455}
temp	float	$tmp2239	%read{4459,4459} %write{4458,4458}
temp	float	$tmp2240	%read{4460,4460} %write{4459,4459}
temp	float	$tmp2241	%read{4465,4465} %write{4460,4460}
temp	float	$tmp2242	%read{4463,4463} %write{4461,4461}
temp	float	$tmp2243	%read{4463,4463} %write{4462,4462}
temp	float	$tmp2244	%read{4464,4464} %write{4463,4463}
temp	float	$tmp2245	%read{4465,4465} %write{4464,4464}
temp	float	$tmp2246	%read{4470,4470} %write{4469,4469}
temp	float	$tmp2247	%read{4471,4471} %write{4470,4470}
temp	int	$tmp2248	%read{4476,4476} %write{4475,4475}
temp	int	$tmp2249	%read{4487,4560} %write{4487,4560}
temp	int	$tmp2250	%read{4487,4560} %write{4487,4560}
temp	int	$tmp2251	%read{4487,4560} %write{4487,4560}
temp	int	$tmp2252	%read{4487,4560} %write{4487,4560}
temp	int	$tmp2253	%read{4487,4560} %write{4487,4560}
temp	int	$tmp2254	%read{4485,4560} %write{4486,4560}
temp	int	$tmp2255	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2256	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2257.x	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2257.y	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2257.z	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2257.w	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2258	%read{4487,4560} %write{4487,4560}
temp	int	$tmp2259	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2260	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2261	%read{4487,4560} %write{4487,4560}
temp	int	$tmp2262	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2263	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2264	%read{4487,4560} %write{4487,4560}
temp	int	$tmp2265	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2266	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2267	%read{4487,4560} %write{4487,4560}
temp	int	$tmp2268	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2269	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2270.x	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2270.y	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2270.z	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2270.w	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2271.x	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2271.y	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2271.z	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2271.w	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2272.x	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2272.y	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2272.z	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2272.w	%read{4487,4560} %write{4487,4560}
temp	point	$tmp2273	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2274	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2275	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2276	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2277.x	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2277.y	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2277.z	%read{4487,4560} %write{4487,4560}
temp	float	$tmp2277.w	%read{4487,4560} %write{4487,4560}
temp	int	$tmp2278	%read{2147483647,-1} %write{4487,4560}
temp	float	$tmp2279	%read{4562,4562} %write{4561,4561}
temp	int	$tmp2280	%read{4564,4564} %write{4563,4563}
temp	int	$tmp2281	%read{4565,4569} %write{4564,4568}
temp	int	$tmp2282	%read{4567,4567} %write{4566,4566}
temp	int	$tmp2283	%read{4568,4568} %write{4567,4567}
temp	int	$tmp2284	%read{4571,4571} %write{4570,4570}
temp	float	$tmp2285	%read{4617,4617} %write{4616,4616}
temp	float	$tmp2286.x	%read{4596,4596} %write{4577,4577}
temp	float	$tmp2286.y	%read{4597,4597} %write{4581,4581}
temp	float	$tmp2286.z	%read{4598,4598} %write{4585,4585}
temp	float	$tmp2286.w	%read{4599,4599} %write{4589,4589}
temp	float	$tmp2287	%read{4575,4575} %write{4574,4574}
temp	int	$tmp2288	%read{4576,4576} %write{4575,4575}
temp	float	$tmp2289	%read{4577,4577} %write{4576,4576}
temp	float	$tmp2290	%read{4579,4579} %write{4578,4578}
temp	int	$tmp2291	%read{4580,4580} %write{4579,4579}
temp	float	$tmp2292	%read{4581,4581} %write{4580,4580}
temp	float	$tmp2293	%read{4583,4583} %write{4582,4582}
temp	int	$tmp2294	%read{4584,4584} %write{4583,4583}
temp	float	$tmp2295	%read{4585,4585} %write{4584,4584}
temp	float	$tmp2296	%read{4587,4587} %write{4586,4586}
temp	int	$tmp2297	%read{4588,4588} %write{4587,4587}
temp	float	$tmp2298	%read{4589,4589} %write{4588,4588}
temp	float	$tmp2299.x	%read{4596,4596} %write{4591,4591}
temp	float	$tmp2299.y	%read{4597,4597} %write{4592,4592}
temp	float	$tmp2299.z	%read{4598,4598} %write{4593,4593}
temp	float	$tmp2299.w	%read{4599,4599} %write{4594,4594}
temp	float	$tmp2300.x	%read{4611,4611} %write{4606,4606}
temp	float	$tmp2300.y	%read{4612,4612} %write{4607,4607}
temp	float	$tmp2300.z	%read{4613,4613} %write{4608,4608}
temp	float	$tmp2300.w	%read{4614,4614} %write{4609,4609}
temp	float	$tmp2301.x	%read{4606,4606} %write{4601,4601}
temp	float	$tmp2301.y	%read{4607,4607} %write{4602,4602}
temp	float	$tmp2301.z	%read{4608,4608} %write{4603,4603}
temp	float	$tmp2301.w	%read{4609,4609} %write{4604,4604}
temp	point	$tmp2302	%read{4616,4616} %write{4615,4615}
temp	float	$tmp2303	%read{4618,4618} %write{4617,4617}
temp	float	$tmp2304	%read{4620,4620} %write{4619,4619}
temp	float	$tmp2305	%read{4621,4621} %write{4620,4620}
temp	int	$tmp2306	%read{4625,4625} %write{4624,4624}
temp	float	$tmp2307	%read{4677,4677} %write{4676,4676}
temp	float	$tmp2308	%read{4676,4676} %write{4675,4675}
temp	float	$tmp2309.x	%read{4655,4655} %write{4636,4636}
temp	float	$tmp2309.y	%read{4656,4656} %write{4640,4640}
temp	float	$tmp2309.z	%read{4657,4657} %write{4644,4644}
temp	float	$tmp2309.w	%read{4658,4658} %write{4648,4648}
temp	float	$tmp2310	%read{4634,4634} %write{4633,4633}
temp	int	$tmp2311	%read{4635,4635} %write{4634,4634}
temp	float	$tmp2312	%read{4636,4636} %write{4635,4635}
temp	float	$tmp2313	%read{4638,4638} %write{4637,4637}
temp	int	$tmp2314	%read{4639,4639} %write{4638,4638}
temp	float	$tmp2315	%read{4640,4640} %write{4639,4639}
temp	float	$tmp2316	%read{4642,4642} %write{4641,4641}
temp	int	$tmp2317	%read{4643,4643} %write{4642,4642}
temp	float	$tmp2318	%read{4644,4644} %write{4643,4643}
temp	float	$tmp2319	%read{4646,4646} %write{4645,4645}
temp	int	$tmp2320	%read{4647,4647} %write{4646,4646}
temp	float	$tmp2321	%read{4648,4648} %write{4647,4647}
temp	float	$tmp2322.x	%read{4655,4655} %write{4650,4650}
temp	float	$tmp2322.y	%read{4656,4656} %write{4651,4651}
temp	float	$tmp2322.z	%read{4657,4657} %write{4652,4652}
temp	float	$tmp2322.w	%read{4658,4658} %write{4653,4653}
temp	float	$tmp2323.x	%read{4670,4670} %write{4665,4665}
temp	float	$tmp2323.y	%read{4671,4671} %write{4666,4666}
temp	float	$tmp2323.z	%read{4672,4672} %write{4667,4667}
temp	float	$tmp2323.w	%read{4673,4673} %write{4668,4668}
temp	float	$tmp2324.x	%read{4665,4665} %write{4660,4660}
temp	float	$tmp2324.y	%read{4666,4666} %write{4661,4661}
temp	float	$tmp2324.z	%read{4667,4667} %write{4662,4662}
temp	float	$tmp2324.w	%read{4668,4668} %write{4663,4663}
temp	point	$tmp2325	%read{4675,4675} %write{4674,4674}
temp	int	$tmp2326	%read{4683,4752} %write{4683,4752}
temp	int	$tmp2327	%read{4683,4752} %write{4683,4752}
temp	int	$tmp2328	%read{4681,4752} %write{4682,4752}
temp	float	$tmp2329.x	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2329.y	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2329.z	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2329.w	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2330	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2331	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2332	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2333	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2334.x	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2334.y	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2334.z	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2334.w	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2335	%read{4683,4752} %write{4683,4752}
temp	int	$tmp2336	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2337	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2338	%read{4683,4752} %write{4683,4752}
temp	int	$tmp2339	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2340	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2341	%read{4683,4752} %write{4683,4752}
temp	int	$tmp2342	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2343	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2344	%read{4683,4752} %write{4683,4752}
temp	int	$tmp2345	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2346	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2347.x	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2347.y	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2347.z	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2347.w	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2348.x	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2348.y	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2348.z	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2348.w	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2349.x	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2349.y	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2349.z	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2349.w	%read{4683,4752} %write{4683,4752}
temp	point	$tmp2350	%read{4683,4752} %write{4683,4752}
temp	float	$tmp2351	%read{4683,4752} %write{4683,4752}
temp	int	$tmp2352	%read{2147483647,-1} %write{4683,4752}
temp	int	$tmp2353	%read{4756,4756} %write{4755,4755}
temp	float	$tmp2354	%read{4807,4807} %write{4806,4806}
temp	float	$tmp2355.x	%read{4786,4786} %write{4767,4767}
temp	float	$tmp2355.y	%read{4787,4787} %write{4771,4771}
temp	float	$tmp2355.z	%read{4788,4788} %write{4775,4775}
temp	float	$tmp2355.w	%read{4789,4789} %write{4779,4779}
temp	float	$tmp2356	%read{4765,4765} %write{4764,4764}
temp	int	$tmp2357	%read{4766,4766} %write{4765,4765}
temp	float	$tmp2358	%read{4767,4767} %write{4766,4766}
temp	float	$tmp2359	%read{4769,4769} %write{4768,4768}
temp	int	$tmp2360	%read{4770,4770} %write{4769,4769}
temp	float	$tmp2361	%read{4771,4771} %write{4770,4770}
temp	float	$tmp2362	%read{4773,4773} %write{4772,4772}
temp	int	$tmp2363	%read{4774,4774} %write{4773,4773}
temp	float	$tmp2364	%read{4775,4775} %write{4774,4774}
temp	float	$tmp2365	%read{4777,4777} %write{4776,4776}
temp	int	$tmp2366	%read{4778,4778} %write{4777,4777}
temp	float	$tmp2367	%read{4779,4779} %write{4778,4778}
temp	float	$tmp2368.x	%read{4786,4786} %write{4781,4781}
temp	float	$tmp2368.y	%read{4787,4787} %write{4782,4782}
temp	float	$tmp2368.z	%read{4788,4788} %write{4783,4783}
temp	float	$tmp2368.w	%read{4789,4789} %write{4784,4784}
temp	float	$tmp2369.x	%read{4801,4801} %write{4796,4796}
temp	float	$tmp2369.y	%read{4802,4802} %write{4797,4797}
temp	float	$tmp2369.z	%read{4803,4803} %write{4798,4798}
temp	float	$tmp2369.w	%read{4804,4804} %write{4799,4799}
temp	float	$tmp2370.x	%read{4796,4796} %write{4791,4791}
temp	float	$tmp2370.y	%read{4797,4797} %write{4792,4792}
temp	float	$tmp2370.z	%read{4798,4798} %write{4793,4793}
temp	float	$tmp2370.w	%read{4799,4799} %write{4794,4794}
temp	point	$tmp2371	%read{4806,4806} %write{4805,4805}
temp	float	$tmp2372.x	%read{4814,4814} %write{4809,4809}
temp	float	$tmp2372.y	%read{4815,4815} %write{4810,4810}
temp	float	$tmp2372.z	%read{4816,4816} %write{4811,4811}
temp	float	$tmp2372.w	%read{4817,4817} %write{4812,4812}
temp	int	$tmp2373	%read{4820,4883} %write{4820,4883}
temp	int	$tmp2374	%read{4820,4883} %write{4820,4883}
temp	int	$tmp2375	%read{4818,4883} %write{4819,4883}
temp	float	$tmp2376	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2377.x	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2377.y	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2377.z	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2377.w	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2378	%read{4820,4883} %write{4820,4883}
temp	int	$tmp2379	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2380	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2381	%read{4820,4883} %write{4820,4883}
temp	int	$tmp2382	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2383	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2384	%read{4820,4883} %write{4820,4883}
temp	int	$tmp2385	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2386	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2387	%read{4820,4883} %write{4820,4883}
temp	int	$tmp2388	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2389	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2390.x	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2390.y	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2390.z	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2390.w	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2391.x	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2391.y	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2391.z	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2391.w	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2392.x	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2392.y	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2392.z	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2392.w	%read{4820,4883} %write{4820,4883}
temp	point	$tmp2393	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2394	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2395	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2396.x	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2396.y	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2396.z	%read{4820,4883} %write{4820,4883}
temp	float	$tmp2396.w	%read{4820,4883} %write{4820,4883}
temp	int	$tmp2397	%read{2147483647,-1} %write{4820,4883}
temp	float	$tmp2398	%read{4885,4885} %write{4884,4884}
temp	int	$tmp2399	%read{4887,4887} %write{4886,4886}
temp	float	$tmp2400	%read{4932,4932} %write{4931,4931}
temp	float	$tmp2401.x	%read{4911,4911} %write{4892,4892}
temp	float	$tmp2401.y	%read{4912,4912} %write{4896,4896}
temp	float	$tmp2401.z	%read{4913,4913} %write{4900,4900}
temp	float	$tmp2401.w	%read{4914,4914} %write{4904,4904}
temp	float	$tmp2402	%read{4890,4890} %write{4889,4889}
temp	int	$tmp2403	%read{4891,4891} %write{4890,4890}
temp	float	$tmp2404	%read{4892,4892} %write{4891,4891}
temp	float	$tmp2405	%read{4894,4894} %write{4893,4893}
temp	int	$tmp2406	%read{4895,4895} %write{4894,4894}
temp	float	$tmp2407	%read{4896,4896} %write{4895,4895}
temp	float	$tmp2408	%read{4898,4898} %write{4897,4897}
temp	int	$tmp2409	%read{4899,4899} %write{4898,4898}
temp	float	$tmp2410	%read{4900,4900} %write{4899,4899}
temp	float	$tmp2411	%read{4902,4902} %write{4901,4901}
temp	int	$tmp2412	%read{4903,4903} %write{4902,4902}
temp	float	$tmp2413	%read{4904,4904} %write{4903,4903}
temp	float	$tmp2414.x	%read{4911,4911} %write{4906,4906}
temp	float	$tmp2414.y	%read{4912,4912} %write{4907,4907}
temp	float	$tmp2414.z	%read{4913,4913} %write{4908,4908}
temp	float	$tmp2414.w	%read{4914,4914} %write{4909,4909}
temp	float	$tmp2415.x	%read{4926,4926} %write{4921,4921}
temp	float	$tmp2415.y	%read{4927,4927} %write{4922,4922}
temp	float	$tmp2415.z	%read{4928,4928} %write{4923,4923}
temp	float	$tmp2415.w	%read{4929,4929} %write{4924,4924}
temp	float	$tmp2416.x	%read{4921,4921} %write{4916,4916}
temp	float	$tmp2416.y	%read{4922,4922} %write{4917,4917}
temp	float	$tmp2416.z	%read{4923,4923} %write{4918,4918}
temp	float	$tmp2416.w	%read{4924,4924} %write{4919,4919}
temp	point	$tmp2417	%read{4931,4931} %write{4930,4930}
temp	float	$tmp2418	%read{4933,4933} %write{4932,4932}
temp	float	$tmp2419	%read{4934,4934} %write{4933,4933}
temp	float	$tmp2420	%read{4936,4936} %write{4935,4935}
temp	float	$tmp2421	%read{6480,6480} %write{5087,5709}
temp	float	$tmp2422.x	%read{4964,5527} %write{4956,4956}
temp	float	$tmp2422.y	%read{4965,5528} %write{4957,4957}
temp	float	$tmp2422.z	%read{4966,5529} %write{4958,4958}
temp	float	$tmp2422.w	%read{4967,5530} %write{4959,4959}
temp	float	$tmp2423.x	%read{4956,4956} %write{4945,4945}
temp	float	$tmp2423.y	%read{4957,4957} %write{4948,4948}
temp	float	$tmp2423.z	%read{4958,4958} %write{4951,4951}
temp	float	$tmp2423.w	%read{4959,4959} %write{4954,4954}
temp	float	$tmp2424	%read{4944,4944} %write{4943,4943}
temp	float	$tmp2425	%read{4945,4945} %write{4944,4944}
temp	float	$tmp2426	%read{4947,4947} %write{4946,4946}
temp	float	$tmp2427	%read{4948,4948} %write{4947,4947}
temp	float	$tmp2428	%read{4950,4950} %write{4949,4949}
temp	float	$tmp2429	%read{4951,4951} %write{4950,4950}
temp	float	$tmp2430	%read{4953,4953} %write{4952,4952}
temp	float	$tmp2431	%read{4954,4954} %write{4953,4953}
temp	int	$tmp2432	%read{4962,4962} %write{4961,4961}
temp	int	$tmp2433	%read{4972,5034} %write{4972,5034}
temp	int	$tmp2434	%read{4972,5034} %write{4972,5034}
temp	int	$tmp2435	%read{4970,5034} %write{4971,5034}
temp	float	$tmp2436	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2437.x	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2437.y	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2437.z	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2437.w	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2438	%read{4972,5034} %write{4972,5034}
temp	int	$tmp2439	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2440	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2441	%read{4972,5034} %write{4972,5034}
temp	int	$tmp2442	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2443	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2444	%read{4972,5034} %write{4972,5034}
temp	int	$tmp2445	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2446	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2447	%read{4972,5034} %write{4972,5034}
temp	int	$tmp2448	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2449	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2450.x	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2450.y	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2450.z	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2450.w	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2451.x	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2451.y	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2451.z	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2451.w	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2452.x	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2452.y	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2452.z	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2452.w	%read{4972,5034} %write{4972,5034}
temp	point	$tmp2453	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2454	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2455	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2456.x	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2456.y	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2456.z	%read{4972,5034} %write{4972,5034}
temp	float	$tmp2456.w	%read{4972,5034} %write{4972,5034}
temp	int	$tmp2457	%read{2147483647,-1} %write{4972,5034}
temp	float	$tmp2458	%read{5036,5036} %write{5035,5035}
temp	int	$tmp2459	%read{5038,5038} %write{5037,5037}
temp	float	$tmp2460	%read{5084,5084} %write{5039,5039}
temp	float	$tmp2461	%read{5084,5084} %write{5083,5083}
temp	float	$tmp2462.x	%read{5063,5063} %write{5044,5044}
temp	float	$tmp2462.y	%read{5064,5064} %write{5048,5048}
temp	float	$tmp2462.z	%read{5065,5065} %write{5052,5052}
temp	float	$tmp2462.w	%read{5066,5066} %write{5056,5056}
temp	float	$tmp2463	%read{5042,5042} %write{5041,5041}
temp	int	$tmp2464	%read{5043,5043} %write{5042,5042}
temp	float	$tmp2465	%read{5044,5044} %write{5043,5043}
temp	float	$tmp2466	%read{5046,5046} %write{5045,5045}
temp	int	$tmp2467	%read{5047,5047} %write{5046,5046}
temp	float	$tmp2468	%read{5048,5048} %write{5047,5047}
temp	float	$tmp2469	%read{5050,5050} %write{5049,5049}
temp	int	$tmp2470	%read{5051,5051} %write{5050,5050}
temp	float	$tmp2471	%read{5052,5052} %write{5051,5051}
temp	float	$tmp2472	%read{5054,5054} %write{5053,5053}
temp	int	$tmp2473	%read{5055,5055} %write{5054,5054}
temp	float	$tmp2474	%read{5056,5056} %write{5055,5055}
temp	float	$tmp2475.x	%read{5063,5063} %write{5058,5058}
temp	float	$tmp2475.y	%read{5064,5064} %write{5059,5059}
temp	float	$tmp2475.z	%read{5065,5065} %write{5060,5060}
temp	float	$tmp2475.w	%read{5066,5066} %write{5061,5061}
temp	float	$tmp2476.x	%read{5078,5078} %write{5073,5073}
temp	float	$tmp2476.y	%read{5079,5079} %write{5074,5074}
temp	float	$tmp2476.z	%read{5080,5080} %write{5075,5075}
temp	float	$tmp2476.w	%read{5081,5081} %write{5076,5076}
temp	float	$tmp2477.x	%read{5073,5073} %write{5068,5068}
temp	float	$tmp2477.y	%read{5074,5074} %write{5069,5069}
temp	float	$tmp2477.z	%read{5075,5075} %write{5070,5070}
temp	float	$tmp2477.w	%read{5076,5076} %write{5071,5071}
temp	point	$tmp2478	%read{5083,5083} %write{5082,5082}
temp	float	$tmp2479	%read{5085,5085} %write{5084,5084}
temp	float	$tmp2480	%read{5086,5086} %write{5085,5085}
temp	int	$tmp2481	%read{5090,5090} %write{5089,5089}
temp	int	$tmp2482	%read{5102,5165} %write{5102,5165}
temp	int	$tmp2483	%read{5102,5165} %write{5102,5165}
temp	int	$tmp2484	%read{5100,5165} %write{5101,5165}
temp	float	$tmp2485.x	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2485.y	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2485.z	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2485.w	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2486.x	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2486.y	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2486.z	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2486.w	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2487.x	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2487.y	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2487.z	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2487.w	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2488	%read{5102,5165} %write{5102,5165}
temp	int	$tmp2489	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2490	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2491	%read{5102,5165} %write{5102,5165}
temp	int	$tmp2492	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2493	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2494	%read{5102,5165} %write{5102,5165}
temp	int	$tmp2495	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2496	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2497	%read{5102,5165} %write{5102,5165}
temp	int	$tmp2498	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2499	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2500.x	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2500.y	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2500.z	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2500.w	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2501.x	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2501.y	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2501.z	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2501.w	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2502.x	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2502.y	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2502.z	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2502.w	%read{5102,5165} %write{5102,5165}
temp	point	$tmp2503	%read{5102,5165} %write{5102,5165}
temp	float	$tmp2504	%read{5102,5165} %write{5102,5165}
temp	int	$tmp2505	%read{2147483647,-1} %write{5102,5165}
temp	float	$tmp2506	%read{5167,5167} %write{5166,5166}
temp	int	$tmp2507	%read{5169,5169} %write{5168,5168}
temp	float	$tmp2508.x	%read{5181,5213} %write{5176,5176}
temp	float	$tmp2508.y	%read{5185,5214} %write{5177,5177}
temp	float	$tmp2508.z	%read{5189,5215} %write{5178,5178}
temp	float	$tmp2508.w	%read{5193,5216} %write{5179,5179}
temp	float	$tmp2509.x	%read{5176,5176} %write{5171,5171}
temp	float	$tmp2509.y	%read{5177,5177} %write{5172,5172}
temp	float	$tmp2509.z	%read{5178,5178} %write{5173,5173}
temp	float	$tmp2509.w	%read{5179,5179} %write{5174,5174}
temp	float	$tmp2510.x	%read{5203,5203} %write{5184,5184}
temp	float	$tmp2510.y	%read{5204,5204} %write{5188,5188}
temp	float	$tmp2510.z	%read{5205,5205} %write{5192,5192}
temp	float	$tmp2510.w	%read{5206,5206} %write{5196,5196}
temp	float	$tmp2511	%read{5182,5182} %write{5181,5181}
temp	int	$tmp2512	%read{5183,5183} %write{5182,5182}
temp	float	$tmp2513	%read{5184,5184} %write{5183,5183}
temp	float	$tmp2514	%read{5186,5186} %write{5185,5185}
temp	int	$tmp2515	%read{5187,5187} %write{5186,5186}
temp	float	$tmp2516	%read{5188,5188} %write{5187,5187}
temp	float	$tmp2517	%read{5190,5190} %write{5189,5189}
temp	int	$tmp2518	%read{5191,5191} %write{5190,5190}
temp	float	$tmp2519	%read{5192,5192} %write{5191,5191}
temp	float	$tmp2520	%read{5194,5194} %write{5193,5193}
temp	int	$tmp2521	%read{5195,5195} %write{5194,5194}
temp	float	$tmp2522	%read{5196,5196} %write{5195,5195}
temp	float	$tmp2523.x	%read{5203,5203} %write{5198,5198}
temp	float	$tmp2523.y	%read{5204,5204} %write{5199,5199}
temp	float	$tmp2523.z	%read{5205,5205} %write{5200,5200}
temp	float	$tmp2523.w	%read{5206,5206} %write{5201,5201}
temp	float	$tmp2524.x	%read{5218,5218} %write{5213,5213}
temp	float	$tmp2524.y	%read{5219,5219} %write{5214,5214}
temp	float	$tmp2524.z	%read{5220,5220} %write{5215,5215}
temp	float	$tmp2524.w	%read{5221,5221} %write{5216,5216}
temp	float	$tmp2525.x	%read{5213,5213} %write{5208,5208}
temp	float	$tmp2525.y	%read{5214,5214} %write{5209,5209}
temp	float	$tmp2525.z	%read{5215,5215} %write{5210,5210}
temp	float	$tmp2525.w	%read{5216,5216} %write{5211,5211}
temp	point	$tmp2526	%read{5223,5223} %write{5222,5222}
temp	float	$tmp2527	%read{5225,5225} %write{5224,5224}
temp	float	$tmp2528	%read{5228,5228} %write{5227,5227}
temp	float	$tmp2529	%read{5229,5229} %write{5228,5228}
temp	float	$tmp2530	%read{5234,5234} %write{5229,5229}
temp	float	$tmp2531	%read{5232,5232} %write{5230,5230}
temp	float	$tmp2532	%read{5232,5232} %write{5231,5231}
temp	float	$tmp2533	%read{5233,5233} %write{5232,5232}
temp	float	$tmp2534	%read{5234,5234} %write{5233,5233}
temp	float	$tmp2535	%read{5239,5239} %write{5238,5238}
temp	float	$tmp2536	%read{5240,5240} %write{5239,5239}
temp	int	$tmp2537	%read{5245,5245} %write{5244,5244}
temp	int	$tmp2538	%read{5256,5329} %write{5256,5329}
temp	int	$tmp2539	%read{5256,5329} %write{5256,5329}
temp	int	$tmp2540	%read{5256,5329} %write{5256,5329}
temp	int	$tmp2541	%read{5256,5329} %write{5256,5329}
temp	int	$tmp2542	%read{5256,5329} %write{5256,5329}
temp	int	$tmp2543	%read{5254,5329} %write{5255,5329}
temp	int	$tmp2544	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2545	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2546.x	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2546.y	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2546.z	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2546.w	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2547	%read{5256,5329} %write{5256,5329}
temp	int	$tmp2548	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2549	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2550	%read{5256,5329} %write{5256,5329}
temp	int	$tmp2551	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2552	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2553	%read{5256,5329} %write{5256,5329}
temp	int	$tmp2554	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2555	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2556	%read{5256,5329} %write{5256,5329}
temp	int	$tmp2557	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2558	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2559.x	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2559.y	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2559.z	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2559.w	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2560.x	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2560.y	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2560.z	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2560.w	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2561.x	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2561.y	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2561.z	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2561.w	%read{5256,5329} %write{5256,5329}
temp	point	$tmp2562	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2563	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2564	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2565	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2566.x	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2566.y	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2566.z	%read{5256,5329} %write{5256,5329}
temp	float	$tmp2566.w	%read{5256,5329} %write{5256,5329}
temp	int	$tmp2567	%read{2147483647,-1} %write{5256,5329}
temp	float	$tmp2568	%read{5331,5331} %write{5330,5330}
temp	int	$tmp2569	%read{5333,5333} %write{5332,5332}
temp	int	$tmp2570	%read{5334,5338} %write{5333,5337}
temp	int	$tmp2571	%read{5336,5336} %write{5335,5335}
temp	int	$tmp2572	%read{5337,5337} %write{5336,5336}
temp	int	$tmp2573	%read{5340,5340} %write{5339,5339}
temp	float	$tmp2574	%read{5386,5386} %write{5385,5385}
temp	float	$tmp2575.x	%read{5365,5365} %write{5346,5346}
temp	float	$tmp2575.y	%read{5366,5366} %write{5350,5350}
temp	float	$tmp2575.z	%read{5367,5367} %write{5354,5354}
temp	float	$tmp2575.w	%read{5368,5368} %write{5358,5358}
temp	float	$tmp2576	%read{5344,5344} %write{5343,5343}
temp	int	$tmp2577	%read{5345,5345} %write{5344,5344}
temp	float	$tmp2578	%read{5346,5346} %write{5345,5345}
temp	float	$tmp2579	%read{5348,5348} %write{5347,5347}
temp	int	$tmp2580	%read{5349,5349} %write{5348,5348}
temp	float	$tmp2581	%read{5350,5350} %write{5349,5349}
temp	float	$tmp2582	%read{5352,5352} %write{5351,5351}
temp	int	$tmp2583	%read{5353,5353} %write{5352,5352}
temp	float	$tmp2584	%read{5354,5354} %write{5353,5353}
temp	float	$tmp2585	%read{5356,5356} %write{5355,5355}
temp	int	$tmp2586	%read{5357,5357} %write{5356,5356}
temp	float	$tmp2587	%read{5358,5358} %write{5357,5357}
temp	float	$tmp2588.x	%read{5365,5365} %write{5360,5360}
temp	float	$tmp2588.y	%read{5366,5366} %write{5361,5361}
temp	float	$tmp2588.z	%read{5367,5367} %write{5362,5362}
temp	float	$tmp2588.w	%read{5368,5368} %write{5363,5363}
temp	float	$tmp2589.x	%read{5380,5380} %write{5375,5375}
temp	float	$tmp2589.y	%read{5381,5381} %write{5376,5376}
temp	float	$tmp2589.z	%read{5382,5382} %write{5377,5377}
temp	float	$tmp2589.w	%read{5383,5383} %write{5378,5378}
temp	float	$tmp2590.x	%read{5375,5375} %write{5370,5370}
temp	float	$tmp2590.y	%read{5376,5376} %write{5371,5371}
temp	float	$tmp2590.z	%read{5377,5377} %write{5372,5372}
temp	float	$tmp2590.w	%read{5378,5378} %write{5373,5373}
temp	point	$tmp2591	%read{5385,5385} %write{5384,5384}
temp	float	$tmp2592	%read{5387,5387} %write{5386,5386}
temp	float	$tmp2593	%read{5389,5389} %write{5388,5388}
temp	float	$tmp2594	%read{5390,5390} %write{5389,5389}
temp	int	$tmp2595	%read{5394,5394} %write{5393,5393}
temp	float	$tmp2596	%read{5446,5446} %write{5445,5445}
temp	float	$tmp2597	%read{5445,5445} %write{5444,5444}
temp	float	$tmp2598.x	%read{5424,5424} %write{5405,5405}
temp	float	$tmp2598.y	%read{5425,5425} %write{5409,5409}
temp	float	$tmp2598.z	%read{5426,5426} %write{5413,5413}
temp	float	$tmp2598.w	%read{5427,5427} %write{5417,5417}
temp	float	$tmp2599	%read{5403,5403} %write{5402,5402}
temp	int	$tmp2600	%read{5404,5404} %write{5403,5403}
temp	float	$tmp2601	%read{5405,5405} %write{5404,5404}
temp	float	$tmp2602	%read{5407,5407} %write{5406,5406}
temp	int	$tmp2603	%read{5408,5408} %write{5407,5407}
temp	float	$tmp2604	%read{5409,5409} %write{5408,5408}
temp	float	$tmp2605	%read{5411,5411} %write{5410,5410}
temp	int	$tmp2606	%read{5412,5412} %write{5411,5411}
temp	float	$tmp2607	%read{5413,5413} %write{5412,5412}
temp	float	$tmp2608	%read{5415,5415} %write{5414,5414}
temp	int	$tmp2609	%read{5416,5416} %write{5415,5415}
temp	float	$tmp2610	%read{5417,5417} %write{5416,5416}
temp	float	$tmp2611.x	%read{5424,5424} %write{5419,5419}
temp	float	$tmp2611.y	%read{5425,5425} %write{5420,5420}
temp	float	$tmp2611.z	%read{5426,5426} %write{5421,5421}
temp	float	$tmp2611.w	%read{5427,5427} %write{5422,5422}
temp	float	$tmp2612.x	%read{5439,5439} %write{5434,5434}
temp	float	$tmp2612.y	%read{5440,5440} %write{5435,5435}
temp	float	$tmp2612.z	%read{5441,5441} %write{5436,5436}
temp	float	$tmp2612.w	%read{5442,5442} %write{5437,5437}
temp	float	$tmp2613.x	%read{5434,5434} %write{5429,5429}
temp	float	$tmp2613.y	%read{5435,5435} %write{5430,5430}
temp	float	$tmp2613.z	%read{5436,5436} %write{5431,5431}
temp	float	$tmp2613.w	%read{5437,5437} %write{5432,5432}
temp	point	$tmp2614	%read{5444,5444} %write{5443,5443}
temp	int	$tmp2615	%read{5452,5521} %write{5452,5521}
temp	int	$tmp2616	%read{5452,5521} %write{5452,5521}
temp	int	$tmp2617	%read{5450,5521} %write{5451,5521}
temp	float	$tmp2618.x	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2618.y	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2618.z	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2618.w	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2619	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2620	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2621	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2622	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2623.x	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2623.y	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2623.z	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2623.w	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2624	%read{5452,5521} %write{5452,5521}
temp	int	$tmp2625	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2626	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2627	%read{5452,5521} %write{5452,5521}
temp	int	$tmp2628	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2629	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2630	%read{5452,5521} %write{5452,5521}
temp	int	$tmp2631	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2632	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2633	%read{5452,5521} %write{5452,5521}
temp	int	$tmp2634	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2635	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2636.x	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2636.y	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2636.z	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2636.w	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2637.x	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2637.y	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2637.z	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2637.w	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2638.x	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2638.y	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2638.z	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2638.w	%read{5452,5521} %write{5452,5521}
temp	point	$tmp2639	%read{5452,5521} %write{5452,5521}
temp	float	$tmp2640	%read{5452,5521} %write{5452,5521}
temp	int	$tmp2641	%read{2147483647,-1} %write{5452,5521}
temp	int	$tmp2642	%read{5525,5525} %write{5524,5524}
temp	float	$tmp2643	%read{5576,5576} %write{5575,5575}
temp	float	$tmp2644.x	%read{5555,5555} %write{5536,5536}
temp	float	$tmp2644.y	%read{5556,5556} %write{5540,5540}
temp	float	$tmp2644.z	%read{5557,5557} %write{5544,5544}
temp	float	$tmp2644.w	%read{5558,5558} %write{5548,5548}
temp	float	$tmp2645	%read{5534,5534} %write{5533,5533}
temp	int	$tmp2646	%read{5535,5535} %write{5534,5534}
temp	float	$tmp2647	%read{5536,5536} %write{5535,5535}
temp	float	$tmp2648	%read{5538,5538} %write{5537,5537}
temp	int	$tmp2649	%read{5539,5539} %write{5538,5538}
temp	float	$tmp2650	%read{5540,5540} %write{5539,5539}
temp	float	$tmp2651	%read{5542,5542} %write{5541,5541}
temp	int	$tmp2652	%read{5543,5543} %write{5542,5542}
temp	float	$tmp2653	%read{5544,5544} %write{5543,5543}
temp	float	$tmp2654	%read{5546,5546} %write{5545,5545}
temp	int	$tmp2655	%read{5547,5547} %write{5546,5546}
temp	float	$tmp2656	%read{5548,5548} %write{5547,5547}
temp	float	$tmp2657.x	%read{5555,5555} %write{5550,5550}
temp	float	$tmp2657.y	%read{5556,5556} %write{5551,5551}
temp	float	$tmp2657.z	%read{5557,5557} %write{5552,5552}
temp	float	$tmp2657.w	%read{5558,5558} %write{5553,5553}
temp	float	$tmp2658.x	%read{5570,5570} %write{5565,5565}
temp	float	$tmp2658.y	%read{5571,5571} %write{5566,5566}
temp	float	$tmp2658.z	%read{5572,5572} %write{5567,5567}
temp	float	$tmp2658.w	%read{5573,5573} %write{5568,5568}
temp	float	$tmp2659.x	%read{5565,5565} %write{5560,5560}
temp	float	$tmp2659.y	%read{5566,5566} %write{5561,5561}
temp	float	$tmp2659.z	%read{5567,5567} %write{5562,5562}
temp	float	$tmp2659.w	%read{5568,5568} %write{5563,5563}
temp	point	$tmp2660	%read{5575,5575} %write{5574,5574}
temp	float	$tmp2661.x	%read{5583,5583} %write{5578,5578}
temp	float	$tmp2661.y	%read{5584,5584} %write{5579,5579}
temp	float	$tmp2661.z	%read{5585,5585} %write{5580,5580}
temp	float	$tmp2661.w	%read{5586,5586} %write{5581,5581}
temp	int	$tmp2662	%read{5589,5652} %write{5589,5652}
temp	int	$tmp2663	%read{5589,5652} %write{5589,5652}
temp	int	$tmp2664	%read{5587,5652} %write{5588,5652}
temp	float	$tmp2665	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2666.x	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2666.y	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2666.z	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2666.w	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2667	%read{5589,5652} %write{5589,5652}
temp	int	$tmp2668	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2669	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2670	%read{5589,5652} %write{5589,5652}
temp	int	$tmp2671	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2672	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2673	%read{5589,5652} %write{5589,5652}
temp	int	$tmp2674	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2675	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2676	%read{5589,5652} %write{5589,5652}
temp	int	$tmp2677	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2678	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2679.x	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2679.y	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2679.z	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2679.w	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2680.x	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2680.y	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2680.z	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2680.w	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2681.x	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2681.y	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2681.z	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2681.w	%read{5589,5652} %write{5589,5652}
temp	point	$tmp2682	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2683	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2684	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2685.x	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2685.y	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2685.z	%read{5589,5652} %write{5589,5652}
temp	float	$tmp2685.w	%read{5589,5652} %write{5589,5652}
temp	int	$tmp2686	%read{2147483647,-1} %write{5589,5652}
temp	float	$tmp2687	%read{5654,5654} %write{5653,5653}
temp	int	$tmp2688	%read{5656,5656} %write{5655,5655}
temp	float	$tmp2689	%read{5701,5701} %write{5700,5700}
temp	float	$tmp2690.x	%read{5680,5680} %write{5661,5661}
temp	float	$tmp2690.y	%read{5681,5681} %write{5665,5665}
temp	float	$tmp2690.z	%read{5682,5682} %write{5669,5669}
temp	float	$tmp2690.w	%read{5683,5683} %write{5673,5673}
temp	float	$tmp2691	%read{5659,5659} %write{5658,5658}
temp	int	$tmp2692	%read{5660,5660} %write{5659,5659}
temp	float	$tmp2693	%read{5661,5661} %write{5660,5660}
temp	float	$tmp2694	%read{5663,5663} %write{5662,5662}
temp	int	$tmp2695	%read{5664,5664} %write{5663,5663}
temp	float	$tmp2696	%read{5665,5665} %write{5664,5664}
temp	float	$tmp2697	%read{5667,5667} %write{5666,5666}
temp	int	$tmp2698	%read{5668,5668} %write{5667,5667}
temp	float	$tmp2699	%read{5669,5669} %write{5668,5668}
temp	float	$tmp2700	%read{5671,5671} %write{5670,5670}
temp	int	$tmp2701	%read{5672,5672} %write{5671,5671}
temp	float	$tmp2702	%read{5673,5673} %write{5672,5672}
temp	float	$tmp2703.x	%read{5680,5680} %write{5675,5675}
temp	float	$tmp2703.y	%read{5681,5681} %write{5676,5676}
temp	float	$tmp2703.z	%read{5682,5682} %write{5677,5677}
temp	float	$tmp2703.w	%read{5683,5683} %write{5678,5678}
temp	float	$tmp2704.x	%read{5695,5695} %write{5690,5690}
temp	float	$tmp2704.y	%read{5696,5696} %write{5691,5691}
temp	float	$tmp2704.z	%read{5697,5697} %write{5692,5692}
temp	float	$tmp2704.w	%read{5698,5698} %write{5693,5693}
temp	float	$tmp2705.x	%read{5690,5690} %write{5685,5685}
temp	float	$tmp2705.y	%read{5691,5691} %write{5686,5686}
temp	float	$tmp2705.z	%read{5692,5692} %write{5687,5687}
temp	float	$tmp2705.w	%read{5693,5693} %write{5688,5688}
temp	point	$tmp2706	%read{5700,5700} %write{5699,5699}
temp	float	$tmp2707	%read{5702,5702} %write{5701,5701}
temp	float	$tmp2708	%read{5703,5703} %write{5702,5702}
temp	float	$tmp2709	%read{5705,5705} %write{5704,5704}
temp	float	$tmp2710	%read{6480,6480} %write{5856,6478}
temp	float	$tmp2711.x	%read{5733,6296} %write{5725,5725}
temp	float	$tmp2711.y	%read{5734,6297} %write{5726,5726}
temp	float	$tmp2711.z	%read{5735,6298} %write{5727,5727}
temp	float	$tmp2711.w	%read{5736,6299} %write{5728,5728}
temp	float	$tmp2712.x	%read{5725,5725} %write{5714,5714}
temp	float	$tmp2712.y	%read{5726,5726} %write{5717,5717}
temp	float	$tmp2712.z	%read{5727,5727} %write{5720,5720}
temp	float	$tmp2712.w	%read{5728,5728} %write{5723,5723}
const	float	$const43	5		%read{5712,5721} %write{2147483647,-1}
temp	float	$tmp2713	%read{5713,5713} %write{5712,5712}
temp	float	$tmp2714	%read{5714,5714} %write{5713,5713}
temp	float	$tmp2715	%read{5716,5716} %write{5715,5715}
temp	float	$tmp2716	%read{5717,5717} %write{5716,5716}
temp	float	$tmp2717	%read{5719,5719} %write{5718,5718}
temp	float	$tmp2718	%read{5720,5720} %write{5719,5719}
temp	float	$tmp2719	%read{5722,5722} %write{5721,5721}
temp	float	$tmp2720	%read{5723,5723} %write{5722,5722}
temp	int	$tmp2721	%read{5731,5731} %write{5730,5730}
temp	int	$tmp2722	%read{5741,5803} %write{5741,5803}
temp	int	$tmp2723	%read{5741,5803} %write{5741,5803}
temp	int	$tmp2724	%read{5739,5803} %write{5740,5803}
temp	float	$tmp2725	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2726.x	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2726.y	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2726.z	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2726.w	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2727	%read{5741,5803} %write{5741,5803}
temp	int	$tmp2728	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2729	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2730	%read{5741,5803} %write{5741,5803}
temp	int	$tmp2731	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2732	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2733	%read{5741,5803} %write{5741,5803}
temp	int	$tmp2734	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2735	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2736	%read{5741,5803} %write{5741,5803}
temp	int	$tmp2737	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2738	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2739.x	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2739.y	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2739.z	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2739.w	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2740.x	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2740.y	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2740.z	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2740.w	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2741.x	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2741.y	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2741.z	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2741.w	%read{5741,5803} %write{5741,5803}
temp	point	$tmp2742	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2743	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2744	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2745.x	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2745.y	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2745.z	%read{5741,5803} %write{5741,5803}
temp	float	$tmp2745.w	%read{5741,5803} %write{5741,5803}
temp	int	$tmp2746	%read{2147483647,-1} %write{5741,5803}
temp	float	$tmp2747	%read{5805,5805} %write{5804,5804}
temp	int	$tmp2748	%read{5807,5807} %write{5806,5806}
temp	float	$tmp2749	%read{5853,5853} %write{5808,5808}
temp	float	$tmp2750	%read{5853,5853} %write{5852,5852}
temp	float	$tmp2751.x	%read{5832,5832} %write{5813,5813}
temp	float	$tmp2751.y	%read{5833,5833} %write{5817,5817}
temp	float	$tmp2751.z	%read{5834,5834} %write{5821,5821}
temp	float	$tmp2751.w	%read{5835,5835} %write{5825,5825}
temp	float	$tmp2752	%read{5811,5811} %write{5810,5810}
temp	int	$tmp2753	%read{5812,5812} %write{5811,5811}
temp	float	$tmp2754	%read{5813,5813} %write{5812,5812}
temp	float	$tmp2755	%read{5815,5815} %write{5814,5814}
temp	int	$tmp2756	%read{5816,5816} %write{5815,5815}
temp	float	$tmp2757	%read{5817,5817} %write{5816,5816}
temp	float	$tmp2758	%read{5819,5819} %write{5818,5818}
temp	int	$tmp2759	%read{5820,5820} %write{5819,5819}
temp	float	$tmp2760	%read{5821,5821} %write{5820,5820}
temp	float	$tmp2761	%read{5823,5823} %write{5822,5822}
temp	int	$tmp2762	%read{5824,5824} %write{5823,5823}
temp	float	$tmp2763	%read{5825,5825} %write{5824,5824}
temp	float	$tmp2764.x	%read{5832,5832} %write{5827,5827}
temp	float	$tmp2764.y	%read{5833,5833} %write{5828,5828}
temp	float	$tmp2764.z	%read{5834,5834} %write{5829,5829}
temp	float	$tmp2764.w	%read{5835,5835} %write{5830,5830}
temp	float	$tmp2765.x	%read{5847,5847} %write{5842,5842}
temp	float	$tmp2765.y	%read{5848,5848} %write{5843,5843}
temp	float	$tmp2765.z	%read{5849,5849} %write{5844,5844}
temp	float	$tmp2765.w	%read{5850,5850} %write{5845,5845}
temp	float	$tmp2766.x	%read{5842,5842} %write{5837,5837}
temp	float	$tmp2766.y	%read{5843,5843} %write{5838,5838}
temp	float	$tmp2766.z	%read{5844,5844} %write{5839,5839}
temp	float	$tmp2766.w	%read{5845,5845} %write{5840,5840}
temp	point	$tmp2767	%read{5852,5852} %write{5851,5851}
temp	float	$tmp2768	%read{5854,5854} %write{5853,5853}
temp	float	$tmp2769	%read{5855,5855} %write{5854,5854}
temp	int	$tmp2770	%read{5859,5859} %write{5858,5858}
temp	int	$tmp2771	%read{5871,5934} %write{5871,5934}
temp	int	$tmp2772	%read{5871,5934} %write{5871,5934}
temp	int	$tmp2773	%read{5869,5934} %write{5870,5934}
temp	float	$tmp2774.x	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2774.y	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2774.z	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2774.w	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2775.x	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2775.y	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2775.z	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2775.w	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2776.x	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2776.y	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2776.z	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2776.w	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2777	%read{5871,5934} %write{5871,5934}
temp	int	$tmp2778	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2779	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2780	%read{5871,5934} %write{5871,5934}
temp	int	$tmp2781	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2782	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2783	%read{5871,5934} %write{5871,5934}
temp	int	$tmp2784	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2785	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2786	%read{5871,5934} %write{5871,5934}
temp	int	$tmp2787	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2788	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2789.x	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2789.y	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2789.z	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2789.w	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2790.x	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2790.y	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2790.z	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2790.w	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2791.x	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2791.y	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2791.z	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2791.w	%read{5871,5934} %write{5871,5934}
temp	point	$tmp2792	%read{5871,5934} %write{5871,5934}
temp	float	$tmp2793	%read{5871,5934} %write{5871,5934}
temp	int	$tmp2794	%read{2147483647,-1} %write{5871,5934}
temp	float	$tmp2795	%read{5936,5936} %write{5935,5935}
temp	int	$tmp2796	%read{5938,5938} %write{5937,5937}
temp	float	$tmp2797.x	%read{5950,5982} %write{5945,5945}
temp	float	$tmp2797.y	%read{5954,5983} %write{5946,5946}
temp	float	$tmp2797.z	%read{5958,5984} %write{5947,5947}
temp	float	$tmp2797.w	%read{5962,5985} %write{5948,5948}
temp	float	$tmp2798.x	%read{5945,5945} %write{5940,5940}
temp	float	$tmp2798.y	%read{5946,5946} %write{5941,5941}
temp	float	$tmp2798.z	%read{5947,5947} %write{5942,5942}
temp	float	$tmp2798.w	%read{5948,5948} %write{5943,5943}
temp	float	$tmp2799.x	%read{5972,5972} %write{5953,5953}
temp	float	$tmp2799.y	%read{5973,5973} %write{5957,5957}
temp	float	$tmp2799.z	%read{5974,5974} %write{5961,5961}
temp	float	$tmp2799.w	%read{5975,5975} %write{5965,5965}
temp	float	$tmp2800	%read{5951,5951} %write{5950,5950}
temp	int	$tmp2801	%read{5952,5952} %write{5951,5951}
temp	float	$tmp2802	%read{5953,5953} %write{5952,5952}
temp	float	$tmp2803	%read{5955,5955} %write{5954,5954}
temp	int	$tmp2804	%read{5956,5956} %write{5955,5955}
temp	float	$tmp2805	%read{5957,5957} %write{5956,5956}
temp	float	$tmp2806	%read{5959,5959} %write{5958,5958}
temp	int	$tmp2807	%read{5960,5960} %write{5959,5959}
temp	float	$tmp2808	%read{5961,5961} %write{5960,5960}
temp	float	$tmp2809	%read{5963,5963} %write{5962,5962}
temp	int	$tmp2810	%read{5964,5964} %write{5963,5963}
temp	float	$tmp2811	%read{5965,5965} %write{5964,5964}
temp	float	$tmp2812.x	%read{5972,5972} %write{5967,5967}
temp	float	$tmp2812.y	%read{5973,5973} %write{5968,5968}
temp	float	$tmp2812.z	%read{5974,5974} %write{5969,5969}
temp	float	$tmp2812.w	%read{5975,5975} %write{5970,5970}
temp	float	$tmp2813.x	%read{5987,5987} %write{5982,5982}
temp	float	$tmp2813.y	%read{5988,5988} %write{5983,5983}
temp	float	$tmp2813.z	%read{5989,5989} %write{5984,5984}
temp	float	$tmp2813.w	%read{5990,5990} %write{5985,5985}
temp	float	$tmp2814.x	%read{5982,5982} %write{5977,5977}
temp	float	$tmp2814.y	%read{5983,5983} %write{5978,5978}
temp	float	$tmp2814.z	%read{5984,5984} %write{5979,5979}
temp	float	$tmp2814.w	%read{5985,5985} %write{5980,5980}
temp	point	$tmp2815	%read{5992,5992} %write{5991,5991}
temp	float	$tmp2816	%read{5994,5994} %write{5993,5993}
temp	float	$tmp2817	%read{5997,5997} %write{5996,5996}
temp	float	$tmp2818	%read{5998,5998} %write{5997,5997}
temp	float	$tmp2819	%read{6003,6003} %write{5998,5998}
temp	float	$tmp2820	%read{6001,6001} %write{5999,5999}
temp	float	$tmp2821	%read{6001,6001} %write{6000,6000}
temp	float	$tmp2822	%read{6002,6002} %write{6001,6001}
temp	float	$tmp2823	%read{6003,6003} %write{6002,6002}
temp	float	$tmp2824	%read{6008,6008} %write{6007,6007}
temp	float	$tmp2825	%read{6009,6009} %write{6008,6008}
temp	int	$tmp2826	%read{6014,6014} %write{6013,6013}
temp	int	$tmp2827	%read{6025,6098} %write{6025,6098}
temp	int	$tmp2828	%read{6025,6098} %write{6025,6098}
temp	int	$tmp2829	%read{6025,6098} %write{6025,6098}
temp	int	$tmp2830	%read{6025,6098} %write{6025,6098}
temp	int	$tmp2831	%read{6025,6098} %write{6025,6098}
temp	int	$tmp2832	%read{6023,6098} %write{6024,6098}
temp	int	$tmp2833	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2834	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2835.x	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2835.y	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2835.z	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2835.w	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2836	%read{6025,6098} %write{6025,6098}
temp	int	$tmp2837	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2838	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2839	%read{6025,6098} %write{6025,6098}
temp	int	$tmp2840	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2841	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2842	%read{6025,6098} %write{6025,6098}
temp	int	$tmp2843	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2844	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2845	%read{6025,6098} %write{6025,6098}
temp	int	$tmp2846	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2847	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2848.x	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2848.y	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2848.z	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2848.w	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2849.x	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2849.y	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2849.z	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2849.w	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2850.x	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2850.y	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2850.z	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2850.w	%read{6025,6098} %write{6025,6098}
temp	point	$tmp2851	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2852	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2853	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2854	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2855.x	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2855.y	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2855.z	%read{6025,6098} %write{6025,6098}
temp	float	$tmp2855.w	%read{6025,6098} %write{6025,6098}
temp	int	$tmp2856	%read{2147483647,-1} %write{6025,6098}
temp	float	$tmp2857	%read{6100,6100} %write{6099,6099}
temp	int	$tmp2858	%read{6102,6102} %write{6101,6101}
temp	int	$tmp2859	%read{6103,6107} %write{6102,6106}
temp	int	$tmp2860	%read{6105,6105} %write{6104,6104}
temp	int	$tmp2861	%read{6106,6106} %write{6105,6105}
temp	int	$tmp2862	%read{6109,6109} %write{6108,6108}
temp	float	$tmp2863	%read{6155,6155} %write{6154,6154}
temp	float	$tmp2864.x	%read{6134,6134} %write{6115,6115}
temp	float	$tmp2864.y	%read{6135,6135} %write{6119,6119}
temp	float	$tmp2864.z	%read{6136,6136} %write{6123,6123}
temp	float	$tmp2864.w	%read{6137,6137} %write{6127,6127}
temp	float	$tmp2865	%read{6113,6113} %write{6112,6112}
temp	int	$tmp2866	%read{6114,6114} %write{6113,6113}
temp	float	$tmp2867	%read{6115,6115} %write{6114,6114}
temp	float	$tmp2868	%read{6117,6117} %write{6116,6116}
temp	int	$tmp2869	%read{6118,6118} %write{6117,6117}
temp	float	$tmp2870	%read{6119,6119} %write{6118,6118}
temp	float	$tmp2871	%read{6121,6121} %write{6120,6120}
temp	int	$tmp2872	%read{6122,6122} %write{6121,6121}
temp	float	$tmp2873	%read{6123,6123} %write{6122,6122}
temp	float	$tmp2874	%read{6125,6125} %write{6124,6124}
temp	int	$tmp2875	%read{6126,6126} %write{6125,6125}
temp	float	$tmp2876	%read{6127,6127} %write{6126,6126}
temp	float	$tmp2877.x	%read{6134,6134} %write{6129,6129}
temp	float	$tmp2877.y	%read{6135,6135} %write{6130,6130}
temp	float	$tmp2877.z	%read{6136,6136} %write{6131,6131}
temp	float	$tmp2877.w	%read{6137,6137} %write{6132,6132}
temp	float	$tmp2878.x	%read{6149,6149} %write{6144,6144}
temp	float	$tmp2878.y	%read{6150,6150} %write{6145,6145}
temp	float	$tmp2878.z	%read{6151,6151} %write{6146,6146}
temp	float	$tmp2878.w	%read{6152,6152} %write{6147,6147}
temp	float	$tmp2879.x	%read{6144,6144} %write{6139,6139}
temp	float	$tmp2879.y	%read{6145,6145} %write{6140,6140}
temp	float	$tmp2879.z	%read{6146,6146} %write{6141,6141}
temp	float	$tmp2879.w	%read{6147,6147} %write{6142,6142}
temp	point	$tmp2880	%read{6154,6154} %write{6153,6153}
temp	float	$tmp2881	%read{6156,6156} %write{6155,6155}
temp	float	$tmp2882	%read{6158,6158} %write{6157,6157}
temp	float	$tmp2883	%read{6159,6159} %write{6158,6158}
temp	int	$tmp2884	%read{6163,6163} %write{6162,6162}
temp	float	$tmp2885	%read{6215,6215} %write{6214,6214}
temp	float	$tmp2886	%read{6214,6214} %write{6213,6213}
temp	float	$tmp2887.x	%read{6193,6193} %write{6174,6174}
temp	float	$tmp2887.y	%read{6194,6194} %write{6178,6178}
temp	float	$tmp2887.z	%read{6195,6195} %write{6182,6182}
temp	float	$tmp2887.w	%read{6196,6196} %write{6186,6186}
temp	float	$tmp2888	%read{6172,6172} %write{6171,6171}
temp	int	$tmp2889	%read{6173,6173} %write{6172,6172}
temp	float	$tmp2890	%read{6174,6174} %write{6173,6173}
temp	float	$tmp2891	%read{6176,6176} %write{6175,6175}
temp	int	$tmp2892	%read{6177,6177} %write{6176,6176}
temp	float	$tmp2893	%read{6178,6178} %write{6177,6177}
temp	float	$tmp2894	%read{6180,6180} %write{6179,6179}
temp	int	$tmp2895	%read{6181,6181} %write{6180,6180}
temp	float	$tmp2896	%read{6182,6182} %write{6181,6181}
temp	float	$tmp2897	%read{6184,6184} %write{6183,6183}
temp	int	$tmp2898	%read{6185,6185} %write{6184,6184}
temp	float	$tmp2899	%read{6186,6186} %write{6185,6185}
temp	float	$tmp2900.x	%read{6193,6193} %write{6188,6188}
temp	float	$tmp2900.y	%read{6194,6194} %write{6189,6189}
temp	float	$tmp2900.z	%read{6195,6195} %write{6190,6190}
temp	float	$tmp2900.w	%read{6196,6196} %write{6191,6191}
temp	float	$tmp2901.x	%read{6208,6208} %write{6203,6203}
temp	float	$tmp2901.y	%read{6209,6209} %write{6204,6204}
temp	float	$tmp2901.z	%read{6210,6210} %write{6205,6205}
temp	float	$tmp2901.w	%read{6211,6211} %write{6206,6206}
temp	float	$tmp2902.x	%read{6203,6203} %write{6198,6198}
temp	float	$tmp2902.y	%read{6204,6204} %write{6199,6199}
temp	float	$tmp2902.z	%read{6205,6205} %write{6200,6200}
temp	float	$tmp2902.w	%read{6206,6206} %write{6201,6201}
temp	point	$tmp2903	%read{6213,6213} %write{6212,6212}
temp	int	$tmp2904	%read{6221,6290} %write{6221,6290}
temp	int	$tmp2905	%read{6221,6290} %write{6221,6290}
temp	int	$tmp2906	%read{6219,6290} %write{6220,6290}
temp	float	$tmp2907.x	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2907.y	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2907.z	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2907.w	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2908	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2909	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2910	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2911	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2912.x	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2912.y	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2912.z	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2912.w	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2913	%read{6221,6290} %write{6221,6290}
temp	int	$tmp2914	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2915	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2916	%read{6221,6290} %write{6221,6290}
temp	int	$tmp2917	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2918	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2919	%read{6221,6290} %write{6221,6290}
temp	int	$tmp2920	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2921	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2922	%read{6221,6290} %write{6221,6290}
temp	int	$tmp2923	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2924	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2925.x	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2925.y	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2925.z	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2925.w	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2926.x	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2926.y	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2926.z	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2926.w	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2927.x	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2927.y	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2927.z	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2927.w	%read{6221,6290} %write{6221,6290}
temp	point	$tmp2928	%read{6221,6290} %write{6221,6290}
temp	float	$tmp2929	%read{6221,6290} %write{6221,6290}
temp	int	$tmp2930	%read{2147483647,-1} %write{6221,6290}
temp	int	$tmp2931	%read{6294,6294} %write{6293,6293}
temp	float	$tmp2932	%read{6345,6345} %write{6344,6344}
temp	float	$tmp2933.x	%read{6324,6324} %write{6305,6305}
temp	float	$tmp2933.y	%read{6325,6325} %write{6309,6309}
temp	float	$tmp2933.z	%read{6326,6326} %write{6313,6313}
temp	float	$tmp2933.w	%read{6327,6327} %write{6317,6317}
temp	float	$tmp2934	%read{6303,6303} %write{6302,6302}
temp	int	$tmp2935	%read{6304,6304} %write{6303,6303}
temp	float	$tmp2936	%read{6305,6305} %write{6304,6304}
temp	float	$tmp2937	%read{6307,6307} %write{6306,6306}
temp	int	$tmp2938	%read{6308,6308} %write{6307,6307}
temp	float	$tmp2939	%read{6309,6309} %write{6308,6308}
temp	float	$tmp2940	%read{6311,6311} %write{6310,6310}
temp	int	$tmp2941	%read{6312,6312} %write{6311,6311}
temp	float	$tmp2942	%read{6313,6313} %write{6312,6312}
temp	float	$tmp2943	%read{6315,6315} %write{6314,6314}
temp	int	$tmp2944	%read{6316,6316} %write{6315,6315}
temp	float	$tmp2945	%read{6317,6317} %write{6316,6316}
temp	float	$tmp2946.x	%read{6324,6324} %write{6319,6319}
temp	float	$tmp2946.y	%read{6325,6325} %write{6320,6320}
temp	float	$tmp2946.z	%read{6326,6326} %write{6321,6321}
temp	float	$tmp2946.w	%read{6327,6327} %write{6322,6322}
temp	float	$tmp2947.x	%read{6339,6339} %write{6334,6334}
temp	float	$tmp2947.y	%read{6340,6340} %write{6335,6335}
temp	float	$tmp2947.z	%read{6341,6341} %write{6336,6336}
temp	float	$tmp2947.w	%read{6342,6342} %write{6337,6337}
temp	float	$tmp2948.x	%read{6334,6334} %write{6329,6329}
temp	float	$tmp2948.y	%read{6335,6335} %write{6330,6330}
temp	float	$tmp2948.z	%read{6336,6336} %write{6331,6331}
temp	float	$tmp2948.w	%read{6337,6337} %write{6332,6332}
temp	point	$tmp2949	%read{6344,6344} %write{6343,6343}
temp	float	$tmp2950.x	%read{6352,6352} %write{6347,6347}
temp	float	$tmp2950.y	%read{6353,6353} %write{6348,6348}
temp	float	$tmp2950.z	%read{6354,6354} %write{6349,6349}
temp	float	$tmp2950.w	%read{6355,6355} %write{6350,6350}
temp	int	$tmp2951	%read{6358,6421} %write{6358,6421}
temp	int	$tmp2952	%read{6358,6421} %write{6358,6421}
temp	int	$tmp2953	%read{6356,6421} %write{6357,6421}
temp	float	$tmp2954	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2955.x	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2955.y	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2955.z	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2955.w	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2956	%read{6358,6421} %write{6358,6421}
temp	int	$tmp2957	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2958	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2959	%read{6358,6421} %write{6358,6421}
temp	int	$tmp2960	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2961	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2962	%read{6358,6421} %write{6358,6421}
temp	int	$tmp2963	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2964	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2965	%read{6358,6421} %write{6358,6421}
temp	int	$tmp2966	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2967	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2968.x	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2968.y	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2968.z	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2968.w	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2969.x	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2969.y	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2969.z	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2969.w	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2970.x	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2970.y	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2970.z	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2970.w	%read{6358,6421} %write{6358,6421}
temp	point	$tmp2971	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2972	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2973	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2974.x	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2974.y	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2974.z	%read{6358,6421} %write{6358,6421}
temp	float	$tmp2974.w	%read{6358,6421} %write{6358,6421}
temp	int	$tmp2975	%read{2147483647,-1} %write{6358,6421}
temp	float	$tmp2976	%read{6423,6423} %write{6422,6422}
temp	int	$tmp2977	%read{6425,6425} %write{6424,6424}
temp	float	$tmp2978	%read{6470,6470} %write{6469,6469}
temp	float	$tmp2979.x	%read{6449,6449} %write{6430,6430}
temp	float	$tmp2979.y	%read{6450,6450} %write{6434,6434}
temp	float	$tmp2979.z	%read{6451,6451} %write{6438,6438}
temp	float	$tmp2979.w	%read{6452,6452} %write{6442,6442}
temp	float	$tmp2980	%read{6428,6428} %write{6427,6427}
temp	int	$tmp2981	%read{6429,6429} %write{6428,6428}
temp	float	$tmp2982	%read{6430,6430} %write{6429,6429}
temp	float	$tmp2983	%read{6432,6432} %write{6431,6431}
temp	int	$tmp2984	%read{6433,6433} %write{6432,6432}
temp	float	$tmp2985	%read{6434,6434} %write{6433,6433}
temp	float	$tmp2986	%read{6436,6436} %write{6435,6435}
temp	int	$tmp2987	%read{6437,6437} %write{6436,6436}
temp	float	$tmp2988	%read{6438,6438} %write{6437,6437}
temp	float	$tmp2989	%read{6440,6440} %write{6439,6439}
temp	int	$tmp2990	%read{6441,6441} %write{6440,6440}
temp	float	$tmp2991	%read{6442,6442} %write{6441,6441}
temp	float	$tmp2992.x	%read{6449,6449} %write{6444,6444}
temp	float	$tmp2992.y	%read{6450,6450} %write{6445,6445}
temp	float	$tmp2992.z	%read{6451,6451} %write{6446,6446}
temp	float	$tmp2992.w	%read{6452,6452} %write{6447,6447}
temp	float	$tmp2993.x	%read{6464,6464} %write{6459,6459}
temp	float	$tmp2993.y	%read{6465,6465} %write{6460,6460}
temp	float	$tmp2993.z	%read{6466,6466} %write{6461,6461}
temp	float	$tmp2993.w	%read{6467,6467} %write{6462,6462}
temp	float	$tmp2994.x	%read{6459,6459} %write{6454,6454}
temp	float	$tmp2994.y	%read{6460,6460} %write{6455,6455}
temp	float	$tmp2994.z	%read{6461,6461} %write{6456,6456}
temp	float	$tmp2994.w	%read{6462,6462} %write{6457,6457}
temp	point	$tmp2995	%read{6469,6469} %write{6468,6468}
temp	float	$tmp2996	%read{6471,6471} %write{6470,6470}
temp	float	$tmp2997	%read{6472,6472} %write{6471,6471}
temp	float	$tmp2998	%read{6474,6474} %write{6473,6473}
const	string	$const44	"Unknown Dimension!"		%read{6482,6482} %write{2147483647,-1}
code ___main___
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:255
#   vector3 p = Vector;
	assign		p Vector 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{255} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:256
#   if (use_mapping)
	if		use_mapping 3 3 	%line{256} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:257
#     p = transform(mapping, p);
	transform	p mapping p 	%line{257} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:259
#   float detail = clamp(Detail, 0.0, 15.0);
	functioncall	$const3 6 	%line{259} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1 Detail $const2 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		detail $tmp1 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:260
#   float roughness = max(Roughness, 0.0);
	max		roughness Roughness $const1 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{260} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:262
#   p *= Scale;
	mul		p p Scale 	%line{262} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:263
#   float w = W * Scale;
	mul		w W Scale 	%line{263} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:265
#   if (dimensions == "1D") {
	eq		$tmp2 dimensions $const4 	%line{265} %argrw{"wrr"}
	if		$tmp2 907 6483 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:266
#     Fac = noise_texture(
	functioncall	$const5 907 	%line{266} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:95
#   float p = co;
	assign		___602_p w 	%line{95} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:96
#   if (distortion != 0.0) {
	neq		$tmp3 Distortion $const1 	%line{96} %argrw{"wrr"}
	if		$tmp3 31 31 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:97
#     p += safe_snoise(p + random_float_offset(0.0)) * distortion;
	functioncall	$const6 19 	%line{97} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:53
#   return 100.0 + noise("hash", seed) * 100.0;
	noise		$tmp6 $const8 $const1 	%line{53} %argrw{"wrr"}
	mul		$tmp7 $tmp6 $const7 	%argrw{"wrr"}
	add		$tmp5 $const7 $tmp7 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:97
#     p += safe_snoise(p + random_float_offset(0.0)) * distortion;
	add		$tmp8 ___602_p $tmp5 	%line{97} %argrw{"wrr"}
	functioncall	$const9 29 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp10 $tmp8 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{61} %argrw{"wr"}
	ge		$tmp11 $tmp10 $const11 	%argrw{"wrr"}
	assign		$tmp12 $tmp11 	%argrw{"wr"}
	assign		$tmp9 $tmp12 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp9 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp13 $tmp8 $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp13 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp4 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:97
#     p += safe_snoise(p + random_float_offset(0.0)) * distortion;
	mul		$tmp14 $tmp4 Distortion 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{97} %argrw{"wrr"}
	add		___602_p ___602_p $tmp14 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:100
#   float value = noise_select(p, detail, roughness, lacunarity, offset, gain, type, use_normalize);
	functioncall	$const14 319 	%line{100} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	eq		$tmp15 type $const15 	%line{79} %argrw{"wrr"}
	if		$tmp15 78 319 	%argrw{"r"}
	functioncall	$const16 77 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:251
# NOISE_MULTI_FRACTAL(float)
	assign		___484_p ___602_p 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{251} %argrw{"wr"}
	assign		___484_value $const17 	%argrw{"wr"}
	assign		___484_pwr $const17 	%argrw{"wr"}
	for		$tmp18 40 43 57 59 	%argrw{"r"}
	assign		___485_i $const18 	%argrw{"wr"}
	assign		$tmp16 detail 	%argrw{"wr"}
	le		$tmp17 ___485_i $tmp16 	%argrw{"wrr"}
	neq		$tmp18 $tmp17 $const18 	%argrw{"wrr"}
	functioncall	$const9 52 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp21 ___484_p 	%line{61} %argrw{"wr"}
	ge		$tmp22 $tmp21 $const11 	%argrw{"wrr"}
	assign		$tmp23 $tmp22 	%argrw{"wr"}
	assign		$tmp20 $tmp23 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp20 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp24 ___484_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp24 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp19 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:251
# NOISE_MULTI_FRACTAL(float)
	mul		$tmp25 ___484_pwr $tmp19 	%line{251} %argrw{"wrr"}
	add		$tmp26 $tmp25 $const17 	%argrw{"wrr"}
	mul		___484_value ___484_value $tmp26 	%argrw{"wrr"}
	mul		___484_pwr ___484_pwr roughness 	%argrw{"wrr"}
	mul		___484_p ___484_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp27 ___485_i 	%argrw{"wr"}
	add		___485_i ___485_i $const19 	%argrw{"wrr"}
	floor		$tmp28 detail 	%argrw{"wr"}
	sub		___484_rmd detail $tmp28 	%argrw{"wrr"}
	neq		$tmp29 ___484_rmd $const1 	%argrw{"wrr"}
	if		$tmp29 76 76 	%argrw{"r"}
	mul		$tmp30 ___484_rmd ___484_pwr 	%argrw{"wrr"}
	functioncall	$const9 73 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp33 ___484_p 	%line{61} %argrw{"wr"}
	ge		$tmp34 $tmp33 $const11 	%argrw{"wrr"}
	assign		$tmp35 $tmp34 	%argrw{"wr"}
	assign		$tmp32 $tmp35 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp32 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp36 ___484_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp36 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp31 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:251
# NOISE_MULTI_FRACTAL(float)
	mul		$tmp37 $tmp30 $tmp31 	%line{251} %argrw{"wrr"}
	add		$tmp38 $tmp37 $const17 	%argrw{"wrr"}
	mul		___484_value ___484_value $tmp38 	%argrw{"wrr"}
	assign		___602_value ___484_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	eq		$tmp39 type $const20 	%argrw{"wrr"}
	if		$tmp39 142 319 	%argrw{"r"}
	functioncall	$const21 141 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:244
# NOISE_FBM(float)
	assign		___464_p ___602_p 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{244} %argrw{"wr"}
	assign		___464_fscale $const17 	%argrw{"wr"}
	assign		___464_amp $const17 	%argrw{"wr"}
	assign		___464_maxamp $const1 	%argrw{"wr"}
	assign		___464_sum $const1 	%argrw{"wr"}
	for		$tmp42 88 91 106 108 	%argrw{"r"}
	assign		___465_i $const18 	%argrw{"wr"}
	assign		$tmp40 detail 	%argrw{"wr"}
	le		$tmp41 ___465_i $tmp40 	%argrw{"wrr"}
	neq		$tmp42 $tmp41 $const18 	%argrw{"wrr"}
	mul		$tmp43 ___464_fscale ___464_p 	%argrw{"wrr"}
	functioncall	$const9 101 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp45 $tmp43 	%line{61} %argrw{"wr"}
	ge		$tmp46 $tmp45 $const11 	%argrw{"wrr"}
	assign		$tmp47 $tmp46 	%argrw{"wr"}
	assign		$tmp44 $tmp47 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp44 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp48 $tmp43 $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp48 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		___466_t $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:244
# NOISE_FBM(float)
	mul		$tmp49 ___466_t ___464_amp 	%line{244} %argrw{"wrr"}
	add		___464_sum ___464_sum $tmp49 	%argrw{"wrr"}
	add		___464_maxamp ___464_maxamp ___464_amp 	%argrw{"wrr"}
	mul		___464_amp ___464_amp roughness 	%argrw{"wrr"}
	mul		___464_fscale ___464_fscale Lacunarity 	%argrw{"wrr"}
	assign		$tmp50 ___465_i 	%argrw{"wr"}
	add		___465_i ___465_i $const19 	%argrw{"wrr"}
	floor		$tmp51 detail 	%argrw{"wr"}
	sub		___464_rmd detail $tmp51 	%argrw{"wrr"}
	neq		$tmp52 ___464_rmd $const1 	%argrw{"wrr"}
	if		$tmp52 135 141 	%argrw{"r"}
	mul		$tmp53 ___464_fscale ___464_p 	%argrw{"wrr"}
	functioncall	$const9 122 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp55 $tmp53 	%line{61} %argrw{"wr"}
	ge		$tmp56 $tmp55 $const11 	%argrw{"wrr"}
	assign		$tmp57 $tmp56 	%argrw{"wr"}
	assign		$tmp54 $tmp57 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp54 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp58 $tmp53 $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp58 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		___467_t $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:244
# NOISE_FBM(float)
	mul		$tmp59 ___467_t ___464_amp 	%line{244} %argrw{"wrr"}
	add		___467_sum2 ___464_sum $tmp59 	%argrw{"wrr"}
	if		use_normalize 133 134 	%argrw{"r"}
	mul		$tmp60 $const10 ___464_sum 	%argrw{"wrr"}
	div		$tmp61 $tmp60 ___464_maxamp 	%argrw{"wrr"}
	add		$tmp62 $tmp61 $const10 	%argrw{"wrr"}
	mul		$tmp63 $const10 ___467_sum2 	%argrw{"wrr"}
	add		$tmp64 ___464_maxamp ___464_amp 	%argrw{"wrr"}
	div		$tmp65 $tmp63 $tmp64 	%argrw{"wrr"}
	add		$tmp66 $tmp65 $const10 	%argrw{"wrr"}
	mix		___602_value $tmp62 $tmp66 ___464_rmd 	%argrw{"wrrr"}
	mix		___602_value ___464_sum ___467_sum2 ___464_rmd 	%argrw{"wrrr"}
	return
	if		use_normalize 139 140 	%argrw{"r"}
	mul		$tmp67 $const10 ___464_sum 	%argrw{"wrr"}
	div		$tmp68 $tmp67 ___464_maxamp 	%argrw{"wrr"}
	add		___602_value $tmp68 $const10 	%argrw{"wrr"}
	assign		___602_value ___464_sum 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	eq		$tmp69 type $const22 	%argrw{"wrr"}
	if		$tmp69 209 319 	%argrw{"r"}
	functioncall	$const23 208 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:265
# NOISE_HYBRID_MULTI_FRACTAL(float)
	assign		___516_p ___602_p 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{265} %argrw{"wr"}
	assign		___516_pwr $const17 	%argrw{"wr"}
	assign		___516_value $const1 	%argrw{"wr"}
	assign		___516_weight $const17 	%argrw{"wr"}
	for		$tmp75 151 159 179 181 	%argrw{"r"}
	assign		___517_i $const18 	%argrw{"wr"}
	gt		$tmp70 ___516_weight $const24 	%argrw{"wrr"}
	neq		$tmp71 $tmp70 $const18 	%argrw{"wrr"}
	if		$tmp71 158 158 	%argrw{"r"}
	assign		$tmp72 detail 	%argrw{"wr"}
	le		$tmp73 ___517_i $tmp72 	%argrw{"wrr"}
	neq		$tmp74 $tmp73 $const18 	%argrw{"wrr"}
	assign		$tmp71 $tmp74 	%argrw{"wr"}
	neq		$tmp75 $tmp71 $const18 	%argrw{"wrr"}
	gt		$tmp76 ___516_weight $const17 	%argrw{"wrr"}
	if		$tmp76 162 162 	%argrw{"r"}
	assign		___516_weight $const17 	%argrw{"wr"}
	functioncall	$const9 171 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp79 ___516_p 	%line{61} %argrw{"wr"}
	ge		$tmp80 $tmp79 $const11 	%argrw{"wrr"}
	assign		$tmp81 $tmp80 	%argrw{"wr"}
	assign		$tmp78 $tmp81 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp78 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp82 ___516_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp82 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp77 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:265
# NOISE_HYBRID_MULTI_FRACTAL(float)
	add		$tmp83 $tmp77 Offset 	%line{265} %argrw{"wrr"}
	mul		___518_signal $tmp83 ___516_pwr 	%argrw{"wrr"}
	mul		___516_pwr ___516_pwr roughness 	%argrw{"wrr"}
	mul		$tmp84 ___516_weight ___518_signal 	%argrw{"wrr"}
	add		___516_value ___516_value $tmp84 	%argrw{"wrr"}
	mul		$tmp85 Gain ___518_signal 	%argrw{"wrr"}
	mul		___516_weight ___516_weight $tmp85 	%argrw{"wrr"}
	mul		___516_p ___516_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp86 ___517_i 	%argrw{"wr"}
	add		___517_i ___517_i $const19 	%argrw{"wrr"}
	floor		$tmp87 detail 	%argrw{"wr"}
	sub		___516_rmd detail $tmp87 	%argrw{"wrr"}
	neq		$tmp88 ___516_rmd $const1 	%argrw{"wrr"}
	neq		$tmp89 $tmp88 $const18 	%argrw{"wrr"}
	if		$tmp89 189 189 	%argrw{"r"}
	gt		$tmp90 ___516_weight $const24 	%argrw{"wrr"}
	neq		$tmp91 $tmp90 $const18 	%argrw{"wrr"}
	assign		$tmp89 $tmp91 	%argrw{"wr"}
	if		$tmp89 207 207 	%argrw{"r"}
	gt		$tmp92 ___516_weight $const17 	%argrw{"wrr"}
	if		$tmp92 193 193 	%argrw{"r"}
	assign		___516_weight $const17 	%argrw{"wr"}
	functioncall	$const9 202 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp95 ___516_p 	%line{61} %argrw{"wr"}
	ge		$tmp96 $tmp95 $const11 	%argrw{"wrr"}
	assign		$tmp97 $tmp96 	%argrw{"wr"}
	assign		$tmp94 $tmp97 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp94 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp98 ___516_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp98 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp93 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:265
# NOISE_HYBRID_MULTI_FRACTAL(float)
	add		$tmp99 $tmp93 Offset 	%line{265} %argrw{"wrr"}
	mul		___520_signal $tmp99 ___516_pwr 	%argrw{"wrr"}
	mul		$tmp100 ___516_rmd ___516_weight 	%argrw{"wrr"}
	mul		$tmp101 $tmp100 ___520_signal 	%argrw{"wrr"}
	add		___516_value ___516_value $tmp101 	%argrw{"wrr"}
	assign		___602_value ___516_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	eq		$tmp102 type $const25 	%argrw{"wrr"}
	if		$tmp102 258 319 	%argrw{"r"}
	functioncall	$const26 257 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:272
# NOISE_RIDGED_MULTI_FRACTAL(float)
	assign		___540_p ___602_p 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{272} %argrw{"wr"}
	assign		___540_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 223 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp106 ___540_p 	%line{61} %argrw{"wr"}
	ge		$tmp107 $tmp106 $const11 	%argrw{"wrr"}
	assign		$tmp108 $tmp107 	%argrw{"wr"}
	assign		$tmp105 $tmp108 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp105 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp109 ___540_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp109 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp104 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:272
# NOISE_RIDGED_MULTI_FRACTAL(float)
	fabs		$tmp103 $tmp104 	%line{272} %argrw{"wr"}
	sub		___540_signal Offset $tmp103 	%argrw{"wrr"}
	mul		___540_signal ___540_signal ___540_signal 	%argrw{"wrr"}
	assign		___540_value ___540_signal 	%argrw{"wr"}
	assign		___540_weight $const17 	%argrw{"wr"}
	for		$tmp112 230 233 254 256 	%argrw{"r"}
	assign		___541_i $const19 	%argrw{"wr"}
	assign		$tmp110 detail 	%argrw{"wr"}
	le		$tmp111 ___541_i $tmp110 	%argrw{"wrr"}
	neq		$tmp112 $tmp111 $const18 	%argrw{"wrr"}
	mul		___540_p ___540_p Lacunarity 	%argrw{"wrr"}
	mul		$tmp113 ___540_signal Gain 	%argrw{"wrr"}
	functioncall	$const3 238 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp114 $tmp113 $const17 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___540_weight $tmp114 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:272
# NOISE_RIDGED_MULTI_FRACTAL(float)
	functioncall	$const9 247 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{272} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp118 ___540_p 	%line{61} %argrw{"wr"}
	ge		$tmp119 $tmp118 $const11 	%argrw{"wrr"}
	assign		$tmp120 $tmp119 	%argrw{"wr"}
	assign		$tmp117 $tmp120 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp117 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp121 ___540_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp121 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp116 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:272
# NOISE_RIDGED_MULTI_FRACTAL(float)
	fabs		$tmp115 $tmp116 	%line{272} %argrw{"wr"}
	sub		___540_signal Offset $tmp115 	%argrw{"wrr"}
	mul		___540_signal ___540_signal ___540_signal 	%argrw{"wrr"}
	mul		___540_signal ___540_signal ___540_weight 	%argrw{"wrr"}
	mul		$tmp122 ___540_signal ___540_pwr 	%argrw{"wrr"}
	add		___540_value ___540_value $tmp122 	%argrw{"wrr"}
	mul		___540_pwr ___540_pwr roughness 	%argrw{"wrr"}
	assign		$tmp123 ___541_i 	%argrw{"wr"}
	add		___541_i ___541_i $const19 	%argrw{"wrr"}
	assign		___602_value ___540_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	eq		$tmp124 type $const27 	%argrw{"wrr"}
	if		$tmp124 316 319 	%argrw{"r"}
	functioncall	$const28 315 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:258
# NOISE_HETERO_TERRAIN(float)
	assign		___500_p ___602_p 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{258} %argrw{"wr"}
	assign		___500_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 272 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp127 ___500_p 	%line{61} %argrw{"wr"}
	ge		$tmp128 $tmp127 $const11 	%argrw{"wrr"}
	assign		$tmp129 $tmp128 	%argrw{"wr"}
	assign		$tmp126 $tmp129 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp126 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp130 ___500_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp130 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp125 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:258
# NOISE_HETERO_TERRAIN(float)
	add		___500_value Offset $tmp125 	%line{258} %argrw{"wrr"}
	mul		___500_p ___500_p Lacunarity 	%argrw{"wrr"}
	for		$tmp133 276 279 294 296 	%argrw{"r"}
	assign		___501_i $const19 	%argrw{"wr"}
	assign		$tmp131 detail 	%argrw{"wr"}
	le		$tmp132 ___501_i $tmp131 	%argrw{"wrr"}
	neq		$tmp133 $tmp132 $const18 	%argrw{"wrr"}
	functioncall	$const9 288 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp136 ___500_p 	%line{61} %argrw{"wr"}
	ge		$tmp137 $tmp136 $const11 	%argrw{"wrr"}
	assign		$tmp138 $tmp137 	%argrw{"wr"}
	assign		$tmp135 $tmp138 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp135 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp139 ___500_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp139 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp134 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:258
# NOISE_HETERO_TERRAIN(float)
	add		$tmp140 $tmp134 Offset 	%line{258} %argrw{"wrr"}
	mul		$tmp141 $tmp140 ___500_pwr 	%argrw{"wrr"}
	mul		___502_increment $tmp141 ___500_value 	%argrw{"wrr"}
	add		___500_value ___500_value ___502_increment 	%argrw{"wrr"}
	mul		___500_pwr ___500_pwr roughness 	%argrw{"wrr"}
	mul		___500_p ___500_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp142 ___501_i 	%argrw{"wr"}
	add		___501_i ___501_i $const19 	%argrw{"wrr"}
	floor		$tmp143 detail 	%argrw{"wr"}
	sub		___500_rmd detail $tmp143 	%argrw{"wrr"}
	neq		$tmp144 ___500_rmd $const1 	%argrw{"wrr"}
	if		$tmp144 314 314 	%argrw{"r"}
	functioncall	$const9 309 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp147 ___500_p 	%line{61} %argrw{"wr"}
	ge		$tmp148 $tmp147 $const11 	%argrw{"wrr"}
	assign		$tmp149 $tmp148 	%argrw{"wr"}
	assign		$tmp146 $tmp149 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp146 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp150 ___500_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp150 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp145 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:258
# NOISE_HETERO_TERRAIN(float)
	add		$tmp151 $tmp145 Offset 	%line{258} %argrw{"wrr"}
	mul		$tmp152 $tmp151 ___500_pwr 	%argrw{"wrr"}
	mul		___503_increment $tmp152 ___500_value 	%argrw{"wrr"}
	mul		$tmp153 ___500_rmd ___503_increment 	%argrw{"wrr"}
	add		___500_value ___500_value $tmp153 	%argrw{"wrr"}
	assign		___602_value ___500_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	error		$const29 	%argrw{"r"}
	assign		___602_value $const1 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:102
#                 noise_select(p + random_float_offset(1.0),
	functioncall	$const6 323 	%line{102} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:53
#   return 100.0 + noise("hash", seed) * 100.0;
	noise		$tmp156 $const8 $const17 	%line{53} %argrw{"wrr"}
	mul		$tmp157 $tmp156 $const7 	%argrw{"wrr"}
	add		$tmp155 $const7 $tmp157 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:102
#                 noise_select(p + random_float_offset(1.0),
	add		$tmp158 ___602_p $tmp155 	%line{102} %argrw{"wrr"}
	functioncall	$const14 612 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	eq		$tmp159 type $const15 	%line{79} %argrw{"wrr"}
	if		$tmp159 371 612 	%argrw{"r"}
	functioncall	$const16 370 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:251
# NOISE_MULTI_FRACTAL(float)
	assign		___484_p $tmp158 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{251} %argrw{"wr"}
	assign		___484_value $const17 	%argrw{"wr"}
	assign		___484_pwr $const17 	%argrw{"wr"}
	for		$tmp162 333 336 350 352 	%argrw{"r"}
	assign		___485_i $const18 	%argrw{"wr"}
	assign		$tmp160 detail 	%argrw{"wr"}
	le		$tmp161 ___485_i $tmp160 	%argrw{"wrr"}
	neq		$tmp162 $tmp161 $const18 	%argrw{"wrr"}
	functioncall	$const9 345 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp165 ___484_p 	%line{61} %argrw{"wr"}
	ge		$tmp166 $tmp165 $const11 	%argrw{"wrr"}
	assign		$tmp167 $tmp166 	%argrw{"wr"}
	assign		$tmp164 $tmp167 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp164 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp168 ___484_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp168 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp163 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:251
# NOISE_MULTI_FRACTAL(float)
	mul		$tmp169 ___484_pwr $tmp163 	%line{251} %argrw{"wrr"}
	add		$tmp170 $tmp169 $const17 	%argrw{"wrr"}
	mul		___484_value ___484_value $tmp170 	%argrw{"wrr"}
	mul		___484_pwr ___484_pwr roughness 	%argrw{"wrr"}
	mul		___484_p ___484_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp171 ___485_i 	%argrw{"wr"}
	add		___485_i ___485_i $const19 	%argrw{"wrr"}
	floor		$tmp172 detail 	%argrw{"wr"}
	sub		___484_rmd detail $tmp172 	%argrw{"wrr"}
	neq		$tmp173 ___484_rmd $const1 	%argrw{"wrr"}
	if		$tmp173 369 369 	%argrw{"r"}
	mul		$tmp174 ___484_rmd ___484_pwr 	%argrw{"wrr"}
	functioncall	$const9 366 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp177 ___484_p 	%line{61} %argrw{"wr"}
	ge		$tmp178 $tmp177 $const11 	%argrw{"wrr"}
	assign		$tmp179 $tmp178 	%argrw{"wr"}
	assign		$tmp176 $tmp179 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp176 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp180 ___484_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp180 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp175 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:251
# NOISE_MULTI_FRACTAL(float)
	mul		$tmp181 $tmp174 $tmp175 	%line{251} %argrw{"wrr"}
	add		$tmp182 $tmp181 $const17 	%argrw{"wrr"}
	mul		___484_value ___484_value $tmp182 	%argrw{"wrr"}
	assign		$tmp154 ___484_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	eq		$tmp183 type $const20 	%argrw{"wrr"}
	if		$tmp183 435 612 	%argrw{"r"}
	functioncall	$const21 434 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:244
# NOISE_FBM(float)
	assign		___464_p $tmp158 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{244} %argrw{"wr"}
	assign		___464_fscale $const17 	%argrw{"wr"}
	assign		___464_amp $const17 	%argrw{"wr"}
	assign		___464_maxamp $const1 	%argrw{"wr"}
	assign		___464_sum $const1 	%argrw{"wr"}
	for		$tmp186 381 384 399 401 	%argrw{"r"}
	assign		___465_i $const18 	%argrw{"wr"}
	assign		$tmp184 detail 	%argrw{"wr"}
	le		$tmp185 ___465_i $tmp184 	%argrw{"wrr"}
	neq		$tmp186 $tmp185 $const18 	%argrw{"wrr"}
	mul		$tmp187 ___464_fscale ___464_p 	%argrw{"wrr"}
	functioncall	$const9 394 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp189 $tmp187 	%line{61} %argrw{"wr"}
	ge		$tmp190 $tmp189 $const11 	%argrw{"wrr"}
	assign		$tmp191 $tmp190 	%argrw{"wr"}
	assign		$tmp188 $tmp191 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp188 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp192 $tmp187 $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp192 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		___466_t $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:244
# NOISE_FBM(float)
	mul		$tmp193 ___466_t ___464_amp 	%line{244} %argrw{"wrr"}
	add		___464_sum ___464_sum $tmp193 	%argrw{"wrr"}
	add		___464_maxamp ___464_maxamp ___464_amp 	%argrw{"wrr"}
	mul		___464_amp ___464_amp roughness 	%argrw{"wrr"}
	mul		___464_fscale ___464_fscale Lacunarity 	%argrw{"wrr"}
	assign		$tmp194 ___465_i 	%argrw{"wr"}
	add		___465_i ___465_i $const19 	%argrw{"wrr"}
	floor		$tmp195 detail 	%argrw{"wr"}
	sub		___464_rmd detail $tmp195 	%argrw{"wrr"}
	neq		$tmp196 ___464_rmd $const1 	%argrw{"wrr"}
	if		$tmp196 428 434 	%argrw{"r"}
	mul		$tmp197 ___464_fscale ___464_p 	%argrw{"wrr"}
	functioncall	$const9 415 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp199 $tmp197 	%line{61} %argrw{"wr"}
	ge		$tmp200 $tmp199 $const11 	%argrw{"wrr"}
	assign		$tmp201 $tmp200 	%argrw{"wr"}
	assign		$tmp198 $tmp201 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp198 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp202 $tmp197 $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp202 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		___467_t $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:244
# NOISE_FBM(float)
	mul		$tmp203 ___467_t ___464_amp 	%line{244} %argrw{"wrr"}
	add		___467_sum2 ___464_sum $tmp203 	%argrw{"wrr"}
	if		use_normalize 426 427 	%argrw{"r"}
	mul		$tmp204 $const10 ___464_sum 	%argrw{"wrr"}
	div		$tmp205 $tmp204 ___464_maxamp 	%argrw{"wrr"}
	add		$tmp206 $tmp205 $const10 	%argrw{"wrr"}
	mul		$tmp207 $const10 ___467_sum2 	%argrw{"wrr"}
	add		$tmp208 ___464_maxamp ___464_amp 	%argrw{"wrr"}
	div		$tmp209 $tmp207 $tmp208 	%argrw{"wrr"}
	add		$tmp210 $tmp209 $const10 	%argrw{"wrr"}
	mix		$tmp154 $tmp206 $tmp210 ___464_rmd 	%argrw{"wrrr"}
	mix		$tmp154 ___464_sum ___467_sum2 ___464_rmd 	%argrw{"wrrr"}
	return
	if		use_normalize 432 433 	%argrw{"r"}
	mul		$tmp211 $const10 ___464_sum 	%argrw{"wrr"}
	div		$tmp212 $tmp211 ___464_maxamp 	%argrw{"wrr"}
	add		$tmp154 $tmp212 $const10 	%argrw{"wrr"}
	assign		$tmp154 ___464_sum 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	eq		$tmp213 type $const22 	%argrw{"wrr"}
	if		$tmp213 502 612 	%argrw{"r"}
	functioncall	$const23 501 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:265
# NOISE_HYBRID_MULTI_FRACTAL(float)
	assign		___516_p $tmp158 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{265} %argrw{"wr"}
	assign		___516_pwr $const17 	%argrw{"wr"}
	assign		___516_value $const1 	%argrw{"wr"}
	assign		___516_weight $const17 	%argrw{"wr"}
	for		$tmp219 444 452 472 474 	%argrw{"r"}
	assign		___517_i $const18 	%argrw{"wr"}
	gt		$tmp214 ___516_weight $const24 	%argrw{"wrr"}
	neq		$tmp215 $tmp214 $const18 	%argrw{"wrr"}
	if		$tmp215 451 451 	%argrw{"r"}
	assign		$tmp216 detail 	%argrw{"wr"}
	le		$tmp217 ___517_i $tmp216 	%argrw{"wrr"}
	neq		$tmp218 $tmp217 $const18 	%argrw{"wrr"}
	assign		$tmp215 $tmp218 	%argrw{"wr"}
	neq		$tmp219 $tmp215 $const18 	%argrw{"wrr"}
	gt		$tmp220 ___516_weight $const17 	%argrw{"wrr"}
	if		$tmp220 455 455 	%argrw{"r"}
	assign		___516_weight $const17 	%argrw{"wr"}
	functioncall	$const9 464 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp223 ___516_p 	%line{61} %argrw{"wr"}
	ge		$tmp224 $tmp223 $const11 	%argrw{"wrr"}
	assign		$tmp225 $tmp224 	%argrw{"wr"}
	assign		$tmp222 $tmp225 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp222 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp226 ___516_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp226 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp221 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:265
# NOISE_HYBRID_MULTI_FRACTAL(float)
	add		$tmp227 $tmp221 Offset 	%line{265} %argrw{"wrr"}
	mul		___518_signal $tmp227 ___516_pwr 	%argrw{"wrr"}
	mul		___516_pwr ___516_pwr roughness 	%argrw{"wrr"}
	mul		$tmp228 ___516_weight ___518_signal 	%argrw{"wrr"}
	add		___516_value ___516_value $tmp228 	%argrw{"wrr"}
	mul		$tmp229 Gain ___518_signal 	%argrw{"wrr"}
	mul		___516_weight ___516_weight $tmp229 	%argrw{"wrr"}
	mul		___516_p ___516_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp230 ___517_i 	%argrw{"wr"}
	add		___517_i ___517_i $const19 	%argrw{"wrr"}
	floor		$tmp231 detail 	%argrw{"wr"}
	sub		___516_rmd detail $tmp231 	%argrw{"wrr"}
	neq		$tmp232 ___516_rmd $const1 	%argrw{"wrr"}
	neq		$tmp233 $tmp232 $const18 	%argrw{"wrr"}
	if		$tmp233 482 482 	%argrw{"r"}
	gt		$tmp234 ___516_weight $const24 	%argrw{"wrr"}
	neq		$tmp235 $tmp234 $const18 	%argrw{"wrr"}
	assign		$tmp233 $tmp235 	%argrw{"wr"}
	if		$tmp233 500 500 	%argrw{"r"}
	gt		$tmp236 ___516_weight $const17 	%argrw{"wrr"}
	if		$tmp236 486 486 	%argrw{"r"}
	assign		___516_weight $const17 	%argrw{"wr"}
	functioncall	$const9 495 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp239 ___516_p 	%line{61} %argrw{"wr"}
	ge		$tmp240 $tmp239 $const11 	%argrw{"wrr"}
	assign		$tmp241 $tmp240 	%argrw{"wr"}
	assign		$tmp238 $tmp241 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp238 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp242 ___516_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp242 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp237 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:265
# NOISE_HYBRID_MULTI_FRACTAL(float)
	add		$tmp243 $tmp237 Offset 	%line{265} %argrw{"wrr"}
	mul		___520_signal $tmp243 ___516_pwr 	%argrw{"wrr"}
	mul		$tmp244 ___516_rmd ___516_weight 	%argrw{"wrr"}
	mul		$tmp245 $tmp244 ___520_signal 	%argrw{"wrr"}
	add		___516_value ___516_value $tmp245 	%argrw{"wrr"}
	assign		$tmp154 ___516_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	eq		$tmp246 type $const25 	%argrw{"wrr"}
	if		$tmp246 551 612 	%argrw{"r"}
	functioncall	$const26 550 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:272
# NOISE_RIDGED_MULTI_FRACTAL(float)
	assign		___540_p $tmp158 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{272} %argrw{"wr"}
	assign		___540_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 516 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp250 ___540_p 	%line{61} %argrw{"wr"}
	ge		$tmp251 $tmp250 $const11 	%argrw{"wrr"}
	assign		$tmp252 $tmp251 	%argrw{"wr"}
	assign		$tmp249 $tmp252 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp249 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp253 ___540_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp253 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp248 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:272
# NOISE_RIDGED_MULTI_FRACTAL(float)
	fabs		$tmp247 $tmp248 	%line{272} %argrw{"wr"}
	sub		___540_signal Offset $tmp247 	%argrw{"wrr"}
	mul		___540_signal ___540_signal ___540_signal 	%argrw{"wrr"}
	assign		___540_value ___540_signal 	%argrw{"wr"}
	assign		___540_weight $const17 	%argrw{"wr"}
	for		$tmp256 523 526 547 549 	%argrw{"r"}
	assign		___541_i $const19 	%argrw{"wr"}
	assign		$tmp254 detail 	%argrw{"wr"}
	le		$tmp255 ___541_i $tmp254 	%argrw{"wrr"}
	neq		$tmp256 $tmp255 $const18 	%argrw{"wrr"}
	mul		___540_p ___540_p Lacunarity 	%argrw{"wrr"}
	mul		$tmp257 ___540_signal Gain 	%argrw{"wrr"}
	functioncall	$const3 531 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp258 $tmp257 $const17 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___540_weight $tmp258 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:272
# NOISE_RIDGED_MULTI_FRACTAL(float)
	functioncall	$const9 540 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{272} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp262 ___540_p 	%line{61} %argrw{"wr"}
	ge		$tmp263 $tmp262 $const11 	%argrw{"wrr"}
	assign		$tmp264 $tmp263 	%argrw{"wr"}
	assign		$tmp261 $tmp264 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp261 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp265 ___540_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp265 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp260 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:272
# NOISE_RIDGED_MULTI_FRACTAL(float)
	fabs		$tmp259 $tmp260 	%line{272} %argrw{"wr"}
	sub		___540_signal Offset $tmp259 	%argrw{"wrr"}
	mul		___540_signal ___540_signal ___540_signal 	%argrw{"wrr"}
	mul		___540_signal ___540_signal ___540_weight 	%argrw{"wrr"}
	mul		$tmp266 ___540_signal ___540_pwr 	%argrw{"wrr"}
	add		___540_value ___540_value $tmp266 	%argrw{"wrr"}
	mul		___540_pwr ___540_pwr roughness 	%argrw{"wrr"}
	assign		$tmp267 ___541_i 	%argrw{"wr"}
	add		___541_i ___541_i $const19 	%argrw{"wrr"}
	assign		$tmp154 ___540_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	eq		$tmp268 type $const27 	%argrw{"wrr"}
	if		$tmp268 609 612 	%argrw{"r"}
	functioncall	$const28 608 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:258
# NOISE_HETERO_TERRAIN(float)
	assign		___500_p $tmp158 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{258} %argrw{"wr"}
	assign		___500_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 565 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp271 ___500_p 	%line{61} %argrw{"wr"}
	ge		$tmp272 $tmp271 $const11 	%argrw{"wrr"}
	assign		$tmp273 $tmp272 	%argrw{"wr"}
	assign		$tmp270 $tmp273 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp270 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp274 ___500_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp274 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp269 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:258
# NOISE_HETERO_TERRAIN(float)
	add		___500_value Offset $tmp269 	%line{258} %argrw{"wrr"}
	mul		___500_p ___500_p Lacunarity 	%argrw{"wrr"}
	for		$tmp277 569 572 587 589 	%argrw{"r"}
	assign		___501_i $const19 	%argrw{"wr"}
	assign		$tmp275 detail 	%argrw{"wr"}
	le		$tmp276 ___501_i $tmp275 	%argrw{"wrr"}
	neq		$tmp277 $tmp276 $const18 	%argrw{"wrr"}
	functioncall	$const9 581 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp280 ___500_p 	%line{61} %argrw{"wr"}
	ge		$tmp281 $tmp280 $const11 	%argrw{"wrr"}
	assign		$tmp282 $tmp281 	%argrw{"wr"}
	assign		$tmp279 $tmp282 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp279 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp283 ___500_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp283 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp278 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:258
# NOISE_HETERO_TERRAIN(float)
	add		$tmp284 $tmp278 Offset 	%line{258} %argrw{"wrr"}
	mul		$tmp285 $tmp284 ___500_pwr 	%argrw{"wrr"}
	mul		___502_increment $tmp285 ___500_value 	%argrw{"wrr"}
	add		___500_value ___500_value ___502_increment 	%argrw{"wrr"}
	mul		___500_pwr ___500_pwr roughness 	%argrw{"wrr"}
	mul		___500_p ___500_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp286 ___501_i 	%argrw{"wr"}
	add		___501_i ___501_i $const19 	%argrw{"wrr"}
	floor		$tmp287 detail 	%argrw{"wr"}
	sub		___500_rmd detail $tmp287 	%argrw{"wrr"}
	neq		$tmp288 ___500_rmd $const1 	%argrw{"wrr"}
	if		$tmp288 607 607 	%argrw{"r"}
	functioncall	$const9 602 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp291 ___500_p 	%line{61} %argrw{"wr"}
	ge		$tmp292 $tmp291 $const11 	%argrw{"wrr"}
	assign		$tmp293 $tmp292 	%argrw{"wr"}
	assign		$tmp290 $tmp293 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp290 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp294 ___500_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp294 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp289 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:258
# NOISE_HETERO_TERRAIN(float)
	add		$tmp295 $tmp289 Offset 	%line{258} %argrw{"wrr"}
	mul		$tmp296 $tmp295 ___500_pwr 	%argrw{"wrr"}
	mul		___503_increment $tmp296 ___500_value 	%argrw{"wrr"}
	mul		$tmp297 ___500_rmd ___503_increment 	%argrw{"wrr"}
	add		___500_value ___500_value $tmp297 	%argrw{"wrr"}
	assign		$tmp154 ___500_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	error		$const29 	%argrw{"r"}
	assign		$tmp154 $const1 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:110
#                 noise_select(p + random_float_offset(2.0),
	functioncall	$const6 616 	%line{110} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:53
#   return 100.0 + noise("hash", seed) * 100.0;
	noise		$tmp300 $const8 $const30 	%line{53} %argrw{"wrr"}
	mul		$tmp301 $tmp300 $const7 	%argrw{"wrr"}
	add		$tmp299 $const7 $tmp301 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:110
#                 noise_select(p + random_float_offset(2.0),
	add		$tmp302 ___602_p $tmp299 	%line{110} %argrw{"wrr"}
	functioncall	$const14 905 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	eq		$tmp303 type $const15 	%line{79} %argrw{"wrr"}
	if		$tmp303 664 905 	%argrw{"r"}
	functioncall	$const16 663 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:251
# NOISE_MULTI_FRACTAL(float)
	assign		___484_p $tmp302 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{251} %argrw{"wr"}
	assign		___484_value $const17 	%argrw{"wr"}
	assign		___484_pwr $const17 	%argrw{"wr"}
	for		$tmp306 626 629 643 645 	%argrw{"r"}
	assign		___485_i $const18 	%argrw{"wr"}
	assign		$tmp304 detail 	%argrw{"wr"}
	le		$tmp305 ___485_i $tmp304 	%argrw{"wrr"}
	neq		$tmp306 $tmp305 $const18 	%argrw{"wrr"}
	functioncall	$const9 638 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp309 ___484_p 	%line{61} %argrw{"wr"}
	ge		$tmp310 $tmp309 $const11 	%argrw{"wrr"}
	assign		$tmp311 $tmp310 	%argrw{"wr"}
	assign		$tmp308 $tmp311 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp308 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp312 ___484_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp312 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp307 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:251
# NOISE_MULTI_FRACTAL(float)
	mul		$tmp313 ___484_pwr $tmp307 	%line{251} %argrw{"wrr"}
	add		$tmp314 $tmp313 $const17 	%argrw{"wrr"}
	mul		___484_value ___484_value $tmp314 	%argrw{"wrr"}
	mul		___484_pwr ___484_pwr roughness 	%argrw{"wrr"}
	mul		___484_p ___484_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp315 ___485_i 	%argrw{"wr"}
	add		___485_i ___485_i $const19 	%argrw{"wrr"}
	floor		$tmp316 detail 	%argrw{"wr"}
	sub		___484_rmd detail $tmp316 	%argrw{"wrr"}
	neq		$tmp317 ___484_rmd $const1 	%argrw{"wrr"}
	if		$tmp317 662 662 	%argrw{"r"}
	mul		$tmp318 ___484_rmd ___484_pwr 	%argrw{"wrr"}
	functioncall	$const9 659 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp321 ___484_p 	%line{61} %argrw{"wr"}
	ge		$tmp322 $tmp321 $const11 	%argrw{"wrr"}
	assign		$tmp323 $tmp322 	%argrw{"wr"}
	assign		$tmp320 $tmp323 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp320 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp324 ___484_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp324 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp319 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:251
# NOISE_MULTI_FRACTAL(float)
	mul		$tmp325 $tmp318 $tmp319 	%line{251} %argrw{"wrr"}
	add		$tmp326 $tmp325 $const17 	%argrw{"wrr"}
	mul		___484_value ___484_value $tmp326 	%argrw{"wrr"}
	assign		$tmp298 ___484_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	eq		$tmp327 type $const20 	%argrw{"wrr"}
	if		$tmp327 728 905 	%argrw{"r"}
	functioncall	$const21 727 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:244
# NOISE_FBM(float)
	assign		___464_p $tmp302 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{244} %argrw{"wr"}
	assign		___464_fscale $const17 	%argrw{"wr"}
	assign		___464_amp $const17 	%argrw{"wr"}
	assign		___464_maxamp $const1 	%argrw{"wr"}
	assign		___464_sum $const1 	%argrw{"wr"}
	for		$tmp330 674 677 692 694 	%argrw{"r"}
	assign		___465_i $const18 	%argrw{"wr"}
	assign		$tmp328 detail 	%argrw{"wr"}
	le		$tmp329 ___465_i $tmp328 	%argrw{"wrr"}
	neq		$tmp330 $tmp329 $const18 	%argrw{"wrr"}
	mul		$tmp331 ___464_fscale ___464_p 	%argrw{"wrr"}
	functioncall	$const9 687 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp333 $tmp331 	%line{61} %argrw{"wr"}
	ge		$tmp334 $tmp333 $const11 	%argrw{"wrr"}
	assign		$tmp335 $tmp334 	%argrw{"wr"}
	assign		$tmp332 $tmp335 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp332 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp336 $tmp331 $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp336 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		___466_t $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:244
# NOISE_FBM(float)
	mul		$tmp337 ___466_t ___464_amp 	%line{244} %argrw{"wrr"}
	add		___464_sum ___464_sum $tmp337 	%argrw{"wrr"}
	add		___464_maxamp ___464_maxamp ___464_amp 	%argrw{"wrr"}
	mul		___464_amp ___464_amp roughness 	%argrw{"wrr"}
	mul		___464_fscale ___464_fscale Lacunarity 	%argrw{"wrr"}
	assign		$tmp338 ___465_i 	%argrw{"wr"}
	add		___465_i ___465_i $const19 	%argrw{"wrr"}
	floor		$tmp339 detail 	%argrw{"wr"}
	sub		___464_rmd detail $tmp339 	%argrw{"wrr"}
	neq		$tmp340 ___464_rmd $const1 	%argrw{"wrr"}
	if		$tmp340 721 727 	%argrw{"r"}
	mul		$tmp341 ___464_fscale ___464_p 	%argrw{"wrr"}
	functioncall	$const9 708 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp343 $tmp341 	%line{61} %argrw{"wr"}
	ge		$tmp344 $tmp343 $const11 	%argrw{"wrr"}
	assign		$tmp345 $tmp344 	%argrw{"wr"}
	assign		$tmp342 $tmp345 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp342 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp346 $tmp341 $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp346 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		___467_t $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:244
# NOISE_FBM(float)
	mul		$tmp347 ___467_t ___464_amp 	%line{244} %argrw{"wrr"}
	add		___467_sum2 ___464_sum $tmp347 	%argrw{"wrr"}
	if		use_normalize 719 720 	%argrw{"r"}
	mul		$tmp348 $const10 ___464_sum 	%argrw{"wrr"}
	div		$tmp349 $tmp348 ___464_maxamp 	%argrw{"wrr"}
	add		$tmp350 $tmp349 $const10 	%argrw{"wrr"}
	mul		$tmp351 $const10 ___467_sum2 	%argrw{"wrr"}
	add		$tmp352 ___464_maxamp ___464_amp 	%argrw{"wrr"}
	div		$tmp353 $tmp351 $tmp352 	%argrw{"wrr"}
	add		$tmp354 $tmp353 $const10 	%argrw{"wrr"}
	mix		$tmp298 $tmp350 $tmp354 ___464_rmd 	%argrw{"wrrr"}
	mix		$tmp298 ___464_sum ___467_sum2 ___464_rmd 	%argrw{"wrrr"}
	return
	if		use_normalize 725 726 	%argrw{"r"}
	mul		$tmp355 $const10 ___464_sum 	%argrw{"wrr"}
	div		$tmp356 $tmp355 ___464_maxamp 	%argrw{"wrr"}
	add		$tmp298 $tmp356 $const10 	%argrw{"wrr"}
	assign		$tmp298 ___464_sum 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	eq		$tmp357 type $const22 	%argrw{"wrr"}
	if		$tmp357 795 905 	%argrw{"r"}
	functioncall	$const23 794 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:265
# NOISE_HYBRID_MULTI_FRACTAL(float)
	assign		___516_p $tmp302 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{265} %argrw{"wr"}
	assign		___516_pwr $const17 	%argrw{"wr"}
	assign		___516_value $const1 	%argrw{"wr"}
	assign		___516_weight $const17 	%argrw{"wr"}
	for		$tmp363 737 745 765 767 	%argrw{"r"}
	assign		___517_i $const18 	%argrw{"wr"}
	gt		$tmp358 ___516_weight $const24 	%argrw{"wrr"}
	neq		$tmp359 $tmp358 $const18 	%argrw{"wrr"}
	if		$tmp359 744 744 	%argrw{"r"}
	assign		$tmp360 detail 	%argrw{"wr"}
	le		$tmp361 ___517_i $tmp360 	%argrw{"wrr"}
	neq		$tmp362 $tmp361 $const18 	%argrw{"wrr"}
	assign		$tmp359 $tmp362 	%argrw{"wr"}
	neq		$tmp363 $tmp359 $const18 	%argrw{"wrr"}
	gt		$tmp364 ___516_weight $const17 	%argrw{"wrr"}
	if		$tmp364 748 748 	%argrw{"r"}
	assign		___516_weight $const17 	%argrw{"wr"}
	functioncall	$const9 757 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp367 ___516_p 	%line{61} %argrw{"wr"}
	ge		$tmp368 $tmp367 $const11 	%argrw{"wrr"}
	assign		$tmp369 $tmp368 	%argrw{"wr"}
	assign		$tmp366 $tmp369 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp366 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp370 ___516_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp370 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp365 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:265
# NOISE_HYBRID_MULTI_FRACTAL(float)
	add		$tmp371 $tmp365 Offset 	%line{265} %argrw{"wrr"}
	mul		___518_signal $tmp371 ___516_pwr 	%argrw{"wrr"}
	mul		___516_pwr ___516_pwr roughness 	%argrw{"wrr"}
	mul		$tmp372 ___516_weight ___518_signal 	%argrw{"wrr"}
	add		___516_value ___516_value $tmp372 	%argrw{"wrr"}
	mul		$tmp373 Gain ___518_signal 	%argrw{"wrr"}
	mul		___516_weight ___516_weight $tmp373 	%argrw{"wrr"}
	mul		___516_p ___516_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp374 ___517_i 	%argrw{"wr"}
	add		___517_i ___517_i $const19 	%argrw{"wrr"}
	floor		$tmp375 detail 	%argrw{"wr"}
	sub		___516_rmd detail $tmp375 	%argrw{"wrr"}
	neq		$tmp376 ___516_rmd $const1 	%argrw{"wrr"}
	neq		$tmp377 $tmp376 $const18 	%argrw{"wrr"}
	if		$tmp377 775 775 	%argrw{"r"}
	gt		$tmp378 ___516_weight $const24 	%argrw{"wrr"}
	neq		$tmp379 $tmp378 $const18 	%argrw{"wrr"}
	assign		$tmp377 $tmp379 	%argrw{"wr"}
	if		$tmp377 793 793 	%argrw{"r"}
	gt		$tmp380 ___516_weight $const17 	%argrw{"wrr"}
	if		$tmp380 779 779 	%argrw{"r"}
	assign		___516_weight $const17 	%argrw{"wr"}
	functioncall	$const9 788 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp383 ___516_p 	%line{61} %argrw{"wr"}
	ge		$tmp384 $tmp383 $const11 	%argrw{"wrr"}
	assign		$tmp385 $tmp384 	%argrw{"wr"}
	assign		$tmp382 $tmp385 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp382 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp386 ___516_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp386 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp381 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:265
# NOISE_HYBRID_MULTI_FRACTAL(float)
	add		$tmp387 $tmp381 Offset 	%line{265} %argrw{"wrr"}
	mul		___520_signal $tmp387 ___516_pwr 	%argrw{"wrr"}
	mul		$tmp388 ___516_rmd ___516_weight 	%argrw{"wrr"}
	mul		$tmp389 $tmp388 ___520_signal 	%argrw{"wrr"}
	add		___516_value ___516_value $tmp389 	%argrw{"wrr"}
	assign		$tmp298 ___516_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	eq		$tmp390 type $const25 	%argrw{"wrr"}
	if		$tmp390 844 905 	%argrw{"r"}
	functioncall	$const26 843 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:272
# NOISE_RIDGED_MULTI_FRACTAL(float)
	assign		___540_p $tmp302 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{272} %argrw{"wr"}
	assign		___540_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 809 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp394 ___540_p 	%line{61} %argrw{"wr"}
	ge		$tmp395 $tmp394 $const11 	%argrw{"wrr"}
	assign		$tmp396 $tmp395 	%argrw{"wr"}
	assign		$tmp393 $tmp396 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp393 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp397 ___540_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp397 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp392 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:272
# NOISE_RIDGED_MULTI_FRACTAL(float)
	fabs		$tmp391 $tmp392 	%line{272} %argrw{"wr"}
	sub		___540_signal Offset $tmp391 	%argrw{"wrr"}
	mul		___540_signal ___540_signal ___540_signal 	%argrw{"wrr"}
	assign		___540_value ___540_signal 	%argrw{"wr"}
	assign		___540_weight $const17 	%argrw{"wr"}
	for		$tmp400 816 819 840 842 	%argrw{"r"}
	assign		___541_i $const19 	%argrw{"wr"}
	assign		$tmp398 detail 	%argrw{"wr"}
	le		$tmp399 ___541_i $tmp398 	%argrw{"wrr"}
	neq		$tmp400 $tmp399 $const18 	%argrw{"wrr"}
	mul		___540_p ___540_p Lacunarity 	%argrw{"wrr"}
	mul		$tmp401 ___540_signal Gain 	%argrw{"wrr"}
	functioncall	$const3 824 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp402 $tmp401 $const17 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___540_weight $tmp402 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:272
# NOISE_RIDGED_MULTI_FRACTAL(float)
	functioncall	$const9 833 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{272} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp406 ___540_p 	%line{61} %argrw{"wr"}
	ge		$tmp407 $tmp406 $const11 	%argrw{"wrr"}
	assign		$tmp408 $tmp407 	%argrw{"wr"}
	assign		$tmp405 $tmp408 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp405 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp409 ___540_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp409 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp404 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:272
# NOISE_RIDGED_MULTI_FRACTAL(float)
	fabs		$tmp403 $tmp404 	%line{272} %argrw{"wr"}
	sub		___540_signal Offset $tmp403 	%argrw{"wrr"}
	mul		___540_signal ___540_signal ___540_signal 	%argrw{"wrr"}
	mul		___540_signal ___540_signal ___540_weight 	%argrw{"wrr"}
	mul		$tmp410 ___540_signal ___540_pwr 	%argrw{"wrr"}
	add		___540_value ___540_value $tmp410 	%argrw{"wrr"}
	mul		___540_pwr ___540_pwr roughness 	%argrw{"wrr"}
	assign		$tmp411 ___541_i 	%argrw{"wr"}
	add		___541_i ___541_i $const19 	%argrw{"wrr"}
	assign		$tmp298 ___540_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	eq		$tmp412 type $const27 	%argrw{"wrr"}
	if		$tmp412 902 905 	%argrw{"r"}
	functioncall	$const28 901 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:258
# NOISE_HETERO_TERRAIN(float)
	assign		___500_p $tmp302 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{258} %argrw{"wr"}
	assign		___500_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 858 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp415 ___500_p 	%line{61} %argrw{"wr"}
	ge		$tmp416 $tmp415 $const11 	%argrw{"wrr"}
	assign		$tmp417 $tmp416 	%argrw{"wr"}
	assign		$tmp414 $tmp417 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp414 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp418 ___500_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp418 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp413 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:258
# NOISE_HETERO_TERRAIN(float)
	add		___500_value Offset $tmp413 	%line{258} %argrw{"wrr"}
	mul		___500_p ___500_p Lacunarity 	%argrw{"wrr"}
	for		$tmp421 862 865 880 882 	%argrw{"r"}
	assign		___501_i $const19 	%argrw{"wr"}
	assign		$tmp419 detail 	%argrw{"wr"}
	le		$tmp420 ___501_i $tmp419 	%argrw{"wrr"}
	neq		$tmp421 $tmp420 $const18 	%argrw{"wrr"}
	functioncall	$const9 874 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp424 ___500_p 	%line{61} %argrw{"wr"}
	ge		$tmp425 $tmp424 $const11 	%argrw{"wrr"}
	assign		$tmp426 $tmp425 	%argrw{"wr"}
	assign		$tmp423 $tmp426 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp423 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp427 ___500_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp427 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp422 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:258
# NOISE_HETERO_TERRAIN(float)
	add		$tmp428 $tmp422 Offset 	%line{258} %argrw{"wrr"}
	mul		$tmp429 $tmp428 ___500_pwr 	%argrw{"wrr"}
	mul		___502_increment $tmp429 ___500_value 	%argrw{"wrr"}
	add		___500_value ___500_value ___502_increment 	%argrw{"wrr"}
	mul		___500_pwr ___500_pwr roughness 	%argrw{"wrr"}
	mul		___500_p ___500_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp430 ___501_i 	%argrw{"wr"}
	add		___501_i ___501_i $const19 	%argrw{"wrr"}
	floor		$tmp431 detail 	%argrw{"wr"}
	sub		___500_rmd detail $tmp431 	%argrw{"wrr"}
	neq		$tmp432 ___500_rmd $const1 	%argrw{"wrr"}
	if		$tmp432 900 900 	%argrw{"r"}
	functioncall	$const9 895 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#   float precision_correction = 0.5 * float(fabs(co) >= 1000000.0);
	fabs		$tmp435 ___500_p 	%line{61} %argrw{"wr"}
	ge		$tmp436 $tmp435 $const11 	%argrw{"wrr"}
	assign		$tmp437 $tmp436 	%argrw{"wr"}
	assign		$tmp434 $tmp437 	%argrw{"wr"}
	mul		___460_precision_correction $const10 $tmp434 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:64
#   float p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp438 ___500_p $const12 	%line{64} %argrw{"wrr"}
	add		___460_p $tmp438 ___460_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:66
#   return noise("snoise", p);
	noise		$tmp433 $const13 ___460_p 	%line{66} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:258
# NOISE_HETERO_TERRAIN(float)
	add		$tmp439 $tmp433 Offset 	%line{258} %argrw{"wrr"}
	mul		$tmp440 $tmp439 ___500_pwr 	%argrw{"wrr"}
	mul		___503_increment $tmp440 ___500_value 	%argrw{"wrr"}
	mul		$tmp441 ___500_rmd ___503_increment 	%argrw{"wrr"}
	add		___500_value ___500_value $tmp441 	%argrw{"wrr"}
	assign		$tmp298 ___500_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:79
# NOISE_SELECT(float)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{79}
	error		$const29 	%argrw{"r"}
	assign		$tmp298 $const1 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:101
#   Color = color(value,
	color		Color ___602_value $tmp154 $tmp298 	%line{101} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:118
#   return value;
	assign		Fac ___602_value 	%line{118} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:269
#   else if (dimensions == "2D") {
	eq		$tmp442 dimensions $const31 	%line{269} %argrw{"wrr"}
	if		$tmp442 2525 6483 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:270
#     Fac = noise_texture(vector2(p[0], p[1]),
	compref		$tmp443.x p $const18 	%line{270} %argrw{"wrr"}
	compref		$tmp443.y p $const19 	%argrw{"wrr"}
	functioncall	$const5 2525 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:132
#   vector2 p = co;
	assign		___604_p.x $tmp443.x 	%line{132} %argrw{"wr"}
	assign		___604_p.y $tmp443.y 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:133
#   if (distortion != 0.0) {
	neq		$tmp444 Distortion $const1 	%line{133} %argrw{"wrr"}
	if		$tmp444 991 991 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:134
#     p += vector2(safe_snoise(p + random_vector2_offset(0.0)) * distortion,
	functioncall	$const32 923 	%line{134} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:58
#   return vector2(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp449 $const8 $const1 $const1 	%line{58} %argrw{"wrrr"}
	mul		$tmp450 $tmp449 $const7 	%argrw{"wrr"}
	add		$tmp448.x $const7 $tmp450 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:59
#                  100.0 + noise("hash", seed, 1.0) * 100.0);
	noise		$tmp451 $const8 $const1 $const17 	%line{59} %argrw{"wrrr"}
	mul		$tmp452 $tmp451 $const7 	%argrw{"wrr"}
	add		$tmp448.y $const7 $tmp452 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 926 	%line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp447.x ___604_p.x $tmp448.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp447.y ___604_p.y $tmp448.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:134
#     p += vector2(safe_snoise(p + random_vector2_offset(0.0)) * distortion,
	functioncall	$const9 951 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{134} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp454 $tmp447.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{71} %argrw{"wr"}
	ge		$tmp455 $tmp454 $const11 	%argrw{"wrr"}
	assign		$tmp456 $tmp455 	%argrw{"wr"}
	assign		$tmp453.x $tmp456 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp457 $tmp447.y 	%line{72} %argrw{"wr"}
	ge		$tmp458 $tmp457 $const11 	%argrw{"wrr"}
	assign		$tmp459 $tmp458 	%argrw{"wr"}
	assign		$tmp453.y $tmp459 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 941 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp460.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp460.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 941 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp453.x $tmp460.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp453.y $tmp460.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 947 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp462.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp462.y $const12 	%argrw{"wr"}
	functioncall	$const35 947 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp461.x $tmp447.x $tmp462.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp461.y $tmp447.y $tmp462.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 950 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp461.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp461.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp446 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:134
#     p += vector2(safe_snoise(p + random_vector2_offset(0.0)) * distortion,
	mul		$tmp445.x $tmp446 Distortion 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{134} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:135
#                  safe_snoise(p + random_vector2_offset(1.0)) * distortion);
	functioncall	$const32 959 	%line{135} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:58
#   return vector2(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp466 $const8 $const17 $const1 	%line{58} %argrw{"wrrr"}
	mul		$tmp467 $tmp466 $const7 	%argrw{"wrr"}
	add		$tmp465.x $const7 $tmp467 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:59
#                  100.0 + noise("hash", seed, 1.0) * 100.0);
	noise		$tmp468 $const8 $const17 $const17 	%line{59} %argrw{"wrrr"}
	mul		$tmp469 $tmp468 $const7 	%argrw{"wrr"}
	add		$tmp465.y $const7 $tmp469 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 962 	%line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp464.x ___604_p.x $tmp465.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp464.y ___604_p.y $tmp465.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:135
#                  safe_snoise(p + random_vector2_offset(1.0)) * distortion);
	functioncall	$const9 987 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{135} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp471 $tmp464.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{71} %argrw{"wr"}
	ge		$tmp472 $tmp471 $const11 	%argrw{"wrr"}
	assign		$tmp473 $tmp472 	%argrw{"wr"}
	assign		$tmp470.x $tmp473 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp474 $tmp464.y 	%line{72} %argrw{"wr"}
	ge		$tmp475 $tmp474 $const11 	%argrw{"wrr"}
	assign		$tmp476 $tmp475 	%argrw{"wr"}
	assign		$tmp470.y $tmp476 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 977 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp477.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp477.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 977 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp470.x $tmp477.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp470.y $tmp477.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 983 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp479.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp479.y $const12 	%argrw{"wr"}
	functioncall	$const35 983 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp478.x $tmp464.x $tmp479.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp478.y $tmp464.y $tmp479.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 986 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp478.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp478.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp463 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:135
#                  safe_snoise(p + random_vector2_offset(1.0)) * distortion);
	mul		$tmp445.y $tmp463 Distortion 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{135} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 991 	%line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___604_p.x ___604_p.x $tmp445.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___604_p.y ___604_p.y $tmp445.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:138
#   float value = noise_select(p, detail, roughness, lacunarity, offset, gain, type, use_normalize);
	functioncall	$const14 1495 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{138} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	eq		$tmp480 type $const15 	%line{80} %argrw{"wrr"}
	if		$tmp480 1076 1495 	%argrw{"r"}
	functioncall	$const16 1075 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:252
# NOISE_MULTI_FRACTAL(vector2)
	assign		___488_p.x ___604_p.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{252} %argrw{"wr"}
	assign		___488_p.y ___604_p.y 	%argrw{"wr"}
	assign		___488_value $const17 	%argrw{"wr"}
	assign		___488_pwr $const17 	%argrw{"wr"}
	for		$tmp483 1001 1004 1039 1041 	%argrw{"r"}
	assign		___489_i $const18 	%argrw{"wr"}
	assign		$tmp481 detail 	%argrw{"wr"}
	le		$tmp482 ___489_i $tmp481 	%argrw{"wrr"}
	neq		$tmp483 $tmp482 $const18 	%argrw{"wrr"}
	functioncall	$const9 1029 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp486 ___488_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp487 $tmp486 $const11 	%argrw{"wrr"}
	assign		$tmp488 $tmp487 	%argrw{"wr"}
	assign		$tmp485.x $tmp488 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp489 ___488_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp490 $tmp489 $const11 	%argrw{"wrr"}
	assign		$tmp491 $tmp490 	%argrw{"wr"}
	assign		$tmp485.y $tmp491 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1019 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp492.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp492.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1019 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp485.x $tmp492.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp485.y $tmp492.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1025 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp494.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp494.y $const12 	%argrw{"wr"}
	functioncall	$const35 1025 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp493.x ___488_p.x $tmp494.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp493.y ___488_p.y $tmp494.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1028 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp493.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp493.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp484 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:252
# NOISE_MULTI_FRACTAL(vector2)
	mul		$tmp495 ___488_pwr $tmp484 	%line{252} %argrw{"wrr"}
	add		$tmp496 $tmp495 $const17 	%argrw{"wrr"}
	mul		___488_value ___488_value $tmp496 	%argrw{"wrr"}
	mul		___488_pwr ___488_pwr roughness 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1039 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp497.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp497.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1039 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___488_p.x ___488_p.x $tmp497.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___488_p.y ___488_p.y $tmp497.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:252
# NOISE_MULTI_FRACTAL(vector2)
	assign		$tmp498 ___489_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{252} %argrw{"wr"}
	add		___489_i ___489_i $const19 	%argrw{"wrr"}
	floor		$tmp499 detail 	%argrw{"wr"}
	sub		___488_rmd detail $tmp499 	%argrw{"wrr"}
	neq		$tmp500 ___488_rmd $const1 	%argrw{"wrr"}
	if		$tmp500 1074 1074 	%argrw{"r"}
	mul		$tmp501 ___488_rmd ___488_pwr 	%argrw{"wrr"}
	functioncall	$const9 1071 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp504 ___488_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp505 $tmp504 $const11 	%argrw{"wrr"}
	assign		$tmp506 $tmp505 	%argrw{"wr"}
	assign		$tmp503.x $tmp506 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp507 ___488_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp508 $tmp507 $const11 	%argrw{"wrr"}
	assign		$tmp509 $tmp508 	%argrw{"wr"}
	assign		$tmp503.y $tmp509 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1061 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp510.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp510.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1061 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp503.x $tmp510.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp503.y $tmp510.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1067 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp512.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp512.y $const12 	%argrw{"wr"}
	functioncall	$const35 1067 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp511.x ___488_p.x $tmp512.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp511.y ___488_p.y $tmp512.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1070 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp511.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp511.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp502 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:252
# NOISE_MULTI_FRACTAL(vector2)
	mul		$tmp513 $tmp501 $tmp502 	%line{252} %argrw{"wrr"}
	add		$tmp514 $tmp513 $const17 	%argrw{"wrr"}
	mul		___488_value ___488_value $tmp514 	%argrw{"wrr"}
	assign		___604_value ___488_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	eq		$tmp515 type $const20 	%argrw{"wrr"}
	if		$tmp515 1183 1495 	%argrw{"r"}
	functioncall	$const21 1182 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	assign		___469_p.x ___604_p.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{245} %argrw{"wr"}
	assign		___469_p.y ___604_p.y 	%argrw{"wr"}
	assign		___469_fscale $const17 	%argrw{"wr"}
	assign		___469_amp $const17 	%argrw{"wr"}
	assign		___469_maxamp $const1 	%argrw{"wr"}
	assign		___469_sum $const1 	%argrw{"wr"}
	for		$tmp518 1087 1090 1126 1128 	%argrw{"r"}
	assign		___470_i $const18 	%argrw{"wr"}
	assign		$tmp516 detail 	%argrw{"wr"}
	le		$tmp517 ___470_i $tmp516 	%argrw{"wrr"}
	neq		$tmp518 $tmp517 $const18 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1096 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp520.x ___469_fscale 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp520.y ___469_fscale 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1096 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp519.x ___469_p.x $tmp520.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp519.y ___469_p.y $tmp520.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	functioncall	$const9 1121 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{245} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp522 $tmp519.x 	%line{71} %argrw{"wr"}
	ge		$tmp523 $tmp522 $const11 	%argrw{"wrr"}
	assign		$tmp524 $tmp523 	%argrw{"wr"}
	assign		$tmp521.x $tmp524 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp525 $tmp519.y 	%line{72} %argrw{"wr"}
	ge		$tmp526 $tmp525 $const11 	%argrw{"wrr"}
	assign		$tmp527 $tmp526 	%argrw{"wr"}
	assign		$tmp521.y $tmp527 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1111 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp528.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp528.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1111 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp521.x $tmp528.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp521.y $tmp528.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1117 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp530.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp530.y $const12 	%argrw{"wr"}
	functioncall	$const35 1117 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp529.x $tmp519.x $tmp530.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp529.y $tmp519.y $tmp530.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1120 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp529.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp529.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		___471_t $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	mul		$tmp531 ___471_t ___469_amp 	%line{245} %argrw{"wrr"}
	add		___469_sum ___469_sum $tmp531 	%argrw{"wrr"}
	add		___469_maxamp ___469_maxamp ___469_amp 	%argrw{"wrr"}
	mul		___469_amp ___469_amp roughness 	%argrw{"wrr"}
	mul		___469_fscale ___469_fscale Lacunarity 	%argrw{"wrr"}
	assign		$tmp532 ___470_i 	%argrw{"wr"}
	add		___470_i ___470_i $const19 	%argrw{"wrr"}
	floor		$tmp533 detail 	%argrw{"wr"}
	sub		___469_rmd detail $tmp533 	%argrw{"wrr"}
	neq		$tmp534 ___469_rmd $const1 	%argrw{"wrr"}
	if		$tmp534 1176 1182 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1138 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp536.x ___469_fscale 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp536.y ___469_fscale 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1138 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp535.x ___469_p.x $tmp536.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp535.y ___469_p.y $tmp536.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	functioncall	$const9 1163 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{245} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp538 $tmp535.x 	%line{71} %argrw{"wr"}
	ge		$tmp539 $tmp538 $const11 	%argrw{"wrr"}
	assign		$tmp540 $tmp539 	%argrw{"wr"}
	assign		$tmp537.x $tmp540 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp541 $tmp535.y 	%line{72} %argrw{"wr"}
	ge		$tmp542 $tmp541 $const11 	%argrw{"wrr"}
	assign		$tmp543 $tmp542 	%argrw{"wr"}
	assign		$tmp537.y $tmp543 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1153 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp544.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp544.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1153 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp537.x $tmp544.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp537.y $tmp544.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1159 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp546.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp546.y $const12 	%argrw{"wr"}
	functioncall	$const35 1159 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp545.x $tmp535.x $tmp546.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp545.y $tmp535.y $tmp546.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1162 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp545.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp545.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		___472_t $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	mul		$tmp547 ___472_t ___469_amp 	%line{245} %argrw{"wrr"}
	add		___472_sum2 ___469_sum $tmp547 	%argrw{"wrr"}
	if		use_normalize 1174 1175 	%argrw{"r"}
	mul		$tmp548 $const10 ___469_sum 	%argrw{"wrr"}
	div		$tmp549 $tmp548 ___469_maxamp 	%argrw{"wrr"}
	add		$tmp550 $tmp549 $const10 	%argrw{"wrr"}
	mul		$tmp551 $const10 ___472_sum2 	%argrw{"wrr"}
	add		$tmp552 ___469_maxamp ___469_amp 	%argrw{"wrr"}
	div		$tmp553 $tmp551 $tmp552 	%argrw{"wrr"}
	add		$tmp554 $tmp553 $const10 	%argrw{"wrr"}
	mix		___604_value $tmp550 $tmp554 ___469_rmd 	%argrw{"wrrr"}
	mix		___604_value ___469_sum ___472_sum2 ___469_rmd 	%argrw{"wrrr"}
	return
	if		use_normalize 1180 1181 	%argrw{"r"}
	mul		$tmp555 $const10 ___469_sum 	%argrw{"wrr"}
	div		$tmp556 $tmp555 ___469_maxamp 	%argrw{"wrr"}
	add		___604_value $tmp556 $const10 	%argrw{"wrr"}
	assign		___604_value ___469_sum 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	eq		$tmp557 type $const22 	%argrw{"wrr"}
	if		$tmp557 1288 1495 	%argrw{"r"}
	functioncall	$const23 1287 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:266
# NOISE_HYBRID_MULTI_FRACTAL(vector2)
	assign		___522_p.x ___604_p.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{266} %argrw{"wr"}
	assign		___522_p.y ___604_p.y 	%argrw{"wr"}
	assign		___522_pwr $const17 	%argrw{"wr"}
	assign		___522_value $const1 	%argrw{"wr"}
	assign		___522_weight $const17 	%argrw{"wr"}
	for		$tmp563 1193 1201 1242 1244 	%argrw{"r"}
	assign		___523_i $const18 	%argrw{"wr"}
	gt		$tmp558 ___522_weight $const24 	%argrw{"wrr"}
	neq		$tmp559 $tmp558 $const18 	%argrw{"wrr"}
	if		$tmp559 1200 1200 	%argrw{"r"}
	assign		$tmp560 detail 	%argrw{"wr"}
	le		$tmp561 ___523_i $tmp560 	%argrw{"wrr"}
	neq		$tmp562 $tmp561 $const18 	%argrw{"wrr"}
	assign		$tmp559 $tmp562 	%argrw{"wr"}
	neq		$tmp563 $tmp559 $const18 	%argrw{"wrr"}
	gt		$tmp564 ___522_weight $const17 	%argrw{"wrr"}
	if		$tmp564 1204 1204 	%argrw{"r"}
	assign		___522_weight $const17 	%argrw{"wr"}
	functioncall	$const9 1229 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp567 ___522_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp568 $tmp567 $const11 	%argrw{"wrr"}
	assign		$tmp569 $tmp568 	%argrw{"wr"}
	assign		$tmp566.x $tmp569 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp570 ___522_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp571 $tmp570 $const11 	%argrw{"wrr"}
	assign		$tmp572 $tmp571 	%argrw{"wr"}
	assign		$tmp566.y $tmp572 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1219 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp573.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp573.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1219 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp566.x $tmp573.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp566.y $tmp573.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1225 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp575.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp575.y $const12 	%argrw{"wr"}
	functioncall	$const35 1225 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp574.x ___522_p.x $tmp575.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp574.y ___522_p.y $tmp575.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1228 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp574.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp574.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp565 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:266
# NOISE_HYBRID_MULTI_FRACTAL(vector2)
	add		$tmp576 $tmp565 Offset 	%line{266} %argrw{"wrr"}
	mul		___524_signal $tmp576 ___522_pwr 	%argrw{"wrr"}
	mul		___522_pwr ___522_pwr roughness 	%argrw{"wrr"}
	mul		$tmp577 ___522_weight ___524_signal 	%argrw{"wrr"}
	add		___522_value ___522_value $tmp577 	%argrw{"wrr"}
	mul		$tmp578 Gain ___524_signal 	%argrw{"wrr"}
	mul		___522_weight ___522_weight $tmp578 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1242 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp579.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp579.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1242 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___522_p.x ___522_p.x $tmp579.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___522_p.y ___522_p.y $tmp579.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:266
# NOISE_HYBRID_MULTI_FRACTAL(vector2)
	assign		$tmp580 ___523_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{266} %argrw{"wr"}
	add		___523_i ___523_i $const19 	%argrw{"wrr"}
	floor		$tmp581 detail 	%argrw{"wr"}
	sub		___522_rmd detail $tmp581 	%argrw{"wrr"}
	neq		$tmp582 ___522_rmd $const1 	%argrw{"wrr"}
	neq		$tmp583 $tmp582 $const18 	%argrw{"wrr"}
	if		$tmp583 1252 1252 	%argrw{"r"}
	gt		$tmp584 ___522_weight $const24 	%argrw{"wrr"}
	neq		$tmp585 $tmp584 $const18 	%argrw{"wrr"}
	assign		$tmp583 $tmp585 	%argrw{"wr"}
	if		$tmp583 1286 1286 	%argrw{"r"}
	gt		$tmp586 ___522_weight $const17 	%argrw{"wrr"}
	if		$tmp586 1256 1256 	%argrw{"r"}
	assign		___522_weight $const17 	%argrw{"wr"}
	functioncall	$const9 1281 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp589 ___522_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp590 $tmp589 $const11 	%argrw{"wrr"}
	assign		$tmp591 $tmp590 	%argrw{"wr"}
	assign		$tmp588.x $tmp591 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp592 ___522_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp593 $tmp592 $const11 	%argrw{"wrr"}
	assign		$tmp594 $tmp593 	%argrw{"wr"}
	assign		$tmp588.y $tmp594 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1271 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp595.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp595.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1271 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp588.x $tmp595.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp588.y $tmp595.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1277 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp597.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp597.y $const12 	%argrw{"wr"}
	functioncall	$const35 1277 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp596.x ___522_p.x $tmp597.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp596.y ___522_p.y $tmp597.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1280 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp596.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp596.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp587 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:266
# NOISE_HYBRID_MULTI_FRACTAL(vector2)
	add		$tmp598 $tmp587 Offset 	%line{266} %argrw{"wrr"}
	mul		___526_signal $tmp598 ___522_pwr 	%argrw{"wrr"}
	mul		$tmp599 ___522_rmd ___522_weight 	%argrw{"wrr"}
	mul		$tmp600 $tmp599 ___526_signal 	%argrw{"wrr"}
	add		___522_value ___522_value $tmp600 	%argrw{"wrr"}
	assign		___604_value ___522_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	eq		$tmp601 type $const25 	%argrw{"wrr"}
	if		$tmp601 1375 1495 	%argrw{"r"}
	functioncall	$const26 1374 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	assign		___543_p.x ___604_p.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{273} %argrw{"wr"}
	assign		___543_p.y ___604_p.y 	%argrw{"wr"}
	assign		___543_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 1319 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp605 ___543_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp606 $tmp605 $const11 	%argrw{"wrr"}
	assign		$tmp607 $tmp606 	%argrw{"wr"}
	assign		$tmp604.x $tmp607 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp608 ___543_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp609 $tmp608 $const11 	%argrw{"wrr"}
	assign		$tmp610 $tmp609 	%argrw{"wr"}
	assign		$tmp604.y $tmp610 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1309 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp611.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp611.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1309 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp604.x $tmp611.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp604.y $tmp611.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1315 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp613.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp613.y $const12 	%argrw{"wr"}
	functioncall	$const35 1315 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp612.x ___543_p.x $tmp613.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp612.y ___543_p.y $tmp613.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1318 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp612.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp612.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp603 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	fabs		$tmp602 $tmp603 	%line{273} %argrw{"wr"}
	sub		___543_signal Offset $tmp602 	%argrw{"wrr"}
	mul		___543_signal ___543_signal ___543_signal 	%argrw{"wrr"}
	assign		___543_value ___543_signal 	%argrw{"wr"}
	assign		___543_weight $const17 	%argrw{"wr"}
	for		$tmp616 1326 1329 1371 1373 	%argrw{"r"}
	assign		___544_i $const19 	%argrw{"wr"}
	assign		$tmp614 detail 	%argrw{"wr"}
	le		$tmp615 ___544_i $tmp614 	%argrw{"wrr"}
	neq		$tmp616 $tmp615 $const18 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1335 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp617.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp617.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1335 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___543_p.x ___543_p.x $tmp617.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___543_p.y ___543_p.y $tmp617.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	mul		$tmp618 ___543_signal Gain 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{273} %argrw{"wrr"}
	functioncall	$const3 1339 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp619 $tmp618 $const17 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___543_weight $tmp619 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	functioncall	$const9 1364 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{273} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp623 ___543_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp624 $tmp623 $const11 	%argrw{"wrr"}
	assign		$tmp625 $tmp624 	%argrw{"wr"}
	assign		$tmp622.x $tmp625 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp626 ___543_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp627 $tmp626 $const11 	%argrw{"wrr"}
	assign		$tmp628 $tmp627 	%argrw{"wr"}
	assign		$tmp622.y $tmp628 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1354 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp629.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp629.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1354 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp622.x $tmp629.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp622.y $tmp629.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1360 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp631.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp631.y $const12 	%argrw{"wr"}
	functioncall	$const35 1360 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp630.x ___543_p.x $tmp631.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp630.y ___543_p.y $tmp631.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1363 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp630.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp630.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp621 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	fabs		$tmp620 $tmp621 	%line{273} %argrw{"wr"}
	sub		___543_signal Offset $tmp620 	%argrw{"wrr"}
	mul		___543_signal ___543_signal ___543_signal 	%argrw{"wrr"}
	mul		___543_signal ___543_signal ___543_weight 	%argrw{"wrr"}
	mul		$tmp632 ___543_signal ___543_pwr 	%argrw{"wrr"}
	add		___543_value ___543_value $tmp632 	%argrw{"wrr"}
	mul		___543_pwr ___543_pwr roughness 	%argrw{"wrr"}
	assign		$tmp633 ___544_i 	%argrw{"wr"}
	add		___544_i ___544_i $const19 	%argrw{"wrr"}
	assign		___604_value ___543_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	eq		$tmp634 type $const27 	%argrw{"wrr"}
	if		$tmp634 1492 1495 	%argrw{"r"}
	functioncall	$const28 1491 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	assign		___504_p.x ___604_p.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{259} %argrw{"wr"}
	assign		___504_p.y ___604_p.y 	%argrw{"wr"}
	assign		___504_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 1406 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp637 ___504_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp638 $tmp637 $const11 	%argrw{"wrr"}
	assign		$tmp639 $tmp638 	%argrw{"wr"}
	assign		$tmp636.x $tmp639 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp640 ___504_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp641 $tmp640 $const11 	%argrw{"wrr"}
	assign		$tmp642 $tmp641 	%argrw{"wr"}
	assign		$tmp636.y $tmp642 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1396 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp643.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp643.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1396 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp636.x $tmp643.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp636.y $tmp643.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1402 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp645.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp645.y $const12 	%argrw{"wr"}
	functioncall	$const35 1402 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp644.x ___504_p.x $tmp645.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp644.y ___504_p.y $tmp645.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1405 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp644.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp644.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp635 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	add		___504_value Offset $tmp635 	%line{259} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1413 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp646.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp646.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1413 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___504_p.x ___504_p.x $tmp646.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___504_p.y ___504_p.y $tmp646.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	for		$tmp649 1415 1418 1454 1456 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{259} %argrw{"r"}
	assign		___505_i $const19 	%argrw{"wr"}
	assign		$tmp647 detail 	%argrw{"wr"}
	le		$tmp648 ___505_i $tmp647 	%argrw{"wrr"}
	neq		$tmp649 $tmp648 $const18 	%argrw{"wrr"}
	functioncall	$const9 1443 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp652 ___504_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp653 $tmp652 $const11 	%argrw{"wrr"}
	assign		$tmp654 $tmp653 	%argrw{"wr"}
	assign		$tmp651.x $tmp654 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp655 ___504_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp656 $tmp655 $const11 	%argrw{"wrr"}
	assign		$tmp657 $tmp656 	%argrw{"wr"}
	assign		$tmp651.y $tmp657 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1433 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp658.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp658.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1433 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp651.x $tmp658.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp651.y $tmp658.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1439 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp660.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp660.y $const12 	%argrw{"wr"}
	functioncall	$const35 1439 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp659.x ___504_p.x $tmp660.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp659.y ___504_p.y $tmp660.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1442 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp659.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp659.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp650 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	add		$tmp661 $tmp650 Offset 	%line{259} %argrw{"wrr"}
	mul		$tmp662 $tmp661 ___504_pwr 	%argrw{"wrr"}
	mul		___506_increment $tmp662 ___504_value 	%argrw{"wrr"}
	add		___504_value ___504_value ___506_increment 	%argrw{"wrr"}
	mul		___504_pwr ___504_pwr roughness 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1454 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp663.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp663.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1454 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___504_p.x ___504_p.x $tmp663.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___504_p.y ___504_p.y $tmp663.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	assign		$tmp664 ___505_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{259} %argrw{"wr"}
	add		___505_i ___505_i $const19 	%argrw{"wrr"}
	floor		$tmp665 detail 	%argrw{"wr"}
	sub		___504_rmd detail $tmp665 	%argrw{"wrr"}
	neq		$tmp666 ___504_rmd $const1 	%argrw{"wrr"}
	if		$tmp666 1490 1490 	%argrw{"r"}
	functioncall	$const9 1485 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp669 ___504_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp670 $tmp669 $const11 	%argrw{"wrr"}
	assign		$tmp671 $tmp670 	%argrw{"wr"}
	assign		$tmp668.x $tmp671 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp672 ___504_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp673 $tmp672 $const11 	%argrw{"wrr"}
	assign		$tmp674 $tmp673 	%argrw{"wr"}
	assign		$tmp668.y $tmp674 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1475 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp675.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp675.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1475 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp668.x $tmp675.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp668.y $tmp675.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1481 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp677.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp677.y $const12 	%argrw{"wr"}
	functioncall	$const35 1481 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp676.x ___504_p.x $tmp677.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp676.y ___504_p.y $tmp677.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1484 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp676.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp676.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp667 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	add		$tmp678 $tmp667 Offset 	%line{259} %argrw{"wrr"}
	mul		$tmp679 $tmp678 ___504_pwr 	%argrw{"wrr"}
	mul		___507_increment $tmp679 ___504_value 	%argrw{"wrr"}
	mul		$tmp680 ___504_rmd ___507_increment 	%argrw{"wrr"}
	add		___504_value ___504_value $tmp680 	%argrw{"wrr"}
	assign		___604_value ___504_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	error		$const29 	%argrw{"r"}
	assign		___604_value $const1 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:140
#                 noise_select(p + random_vector2_offset(2.0),
	functioncall	$const32 1502 	%line{140} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:58
#   return vector2(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp684 $const8 $const30 $const1 	%line{58} %argrw{"wrrr"}
	mul		$tmp685 $tmp684 $const7 	%argrw{"wrr"}
	add		$tmp683.x $const7 $tmp685 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:59
#                  100.0 + noise("hash", seed, 1.0) * 100.0);
	noise		$tmp686 $const8 $const30 $const17 	%line{59} %argrw{"wrrr"}
	mul		$tmp687 $tmp686 $const7 	%argrw{"wrr"}
	add		$tmp683.y $const7 $tmp687 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1505 	%line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp682.x ___604_p.x $tmp683.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp682.y ___604_p.y $tmp683.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:140
#                 noise_select(p + random_vector2_offset(2.0),
	functioncall	$const14 2009 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{140} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	eq		$tmp688 type $const15 	%line{80} %argrw{"wrr"}
	if		$tmp688 1590 2009 	%argrw{"r"}
	functioncall	$const16 1589 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:252
# NOISE_MULTI_FRACTAL(vector2)
	assign		___488_p.x $tmp682.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{252} %argrw{"wr"}
	assign		___488_p.y $tmp682.y 	%argrw{"wr"}
	assign		___488_value $const17 	%argrw{"wr"}
	assign		___488_pwr $const17 	%argrw{"wr"}
	for		$tmp691 1515 1518 1553 1555 	%argrw{"r"}
	assign		___489_i $const18 	%argrw{"wr"}
	assign		$tmp689 detail 	%argrw{"wr"}
	le		$tmp690 ___489_i $tmp689 	%argrw{"wrr"}
	neq		$tmp691 $tmp690 $const18 	%argrw{"wrr"}
	functioncall	$const9 1543 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp694 ___488_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp695 $tmp694 $const11 	%argrw{"wrr"}
	assign		$tmp696 $tmp695 	%argrw{"wr"}
	assign		$tmp693.x $tmp696 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp697 ___488_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp698 $tmp697 $const11 	%argrw{"wrr"}
	assign		$tmp699 $tmp698 	%argrw{"wr"}
	assign		$tmp693.y $tmp699 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1533 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp700.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp700.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1533 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp693.x $tmp700.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp693.y $tmp700.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1539 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp702.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp702.y $const12 	%argrw{"wr"}
	functioncall	$const35 1539 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp701.x ___488_p.x $tmp702.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp701.y ___488_p.y $tmp702.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1542 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp701.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp701.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp692 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:252
# NOISE_MULTI_FRACTAL(vector2)
	mul		$tmp703 ___488_pwr $tmp692 	%line{252} %argrw{"wrr"}
	add		$tmp704 $tmp703 $const17 	%argrw{"wrr"}
	mul		___488_value ___488_value $tmp704 	%argrw{"wrr"}
	mul		___488_pwr ___488_pwr roughness 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1553 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp705.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp705.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1553 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___488_p.x ___488_p.x $tmp705.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___488_p.y ___488_p.y $tmp705.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:252
# NOISE_MULTI_FRACTAL(vector2)
	assign		$tmp706 ___489_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{252} %argrw{"wr"}
	add		___489_i ___489_i $const19 	%argrw{"wrr"}
	floor		$tmp707 detail 	%argrw{"wr"}
	sub		___488_rmd detail $tmp707 	%argrw{"wrr"}
	neq		$tmp708 ___488_rmd $const1 	%argrw{"wrr"}
	if		$tmp708 1588 1588 	%argrw{"r"}
	mul		$tmp709 ___488_rmd ___488_pwr 	%argrw{"wrr"}
	functioncall	$const9 1585 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp712 ___488_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp713 $tmp712 $const11 	%argrw{"wrr"}
	assign		$tmp714 $tmp713 	%argrw{"wr"}
	assign		$tmp711.x $tmp714 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp715 ___488_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp716 $tmp715 $const11 	%argrw{"wrr"}
	assign		$tmp717 $tmp716 	%argrw{"wr"}
	assign		$tmp711.y $tmp717 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1575 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp718.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp718.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1575 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp711.x $tmp718.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp711.y $tmp718.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1581 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp720.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp720.y $const12 	%argrw{"wr"}
	functioncall	$const35 1581 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp719.x ___488_p.x $tmp720.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp719.y ___488_p.y $tmp720.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1584 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp719.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp719.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp710 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:252
# NOISE_MULTI_FRACTAL(vector2)
	mul		$tmp721 $tmp709 $tmp710 	%line{252} %argrw{"wrr"}
	add		$tmp722 $tmp721 $const17 	%argrw{"wrr"}
	mul		___488_value ___488_value $tmp722 	%argrw{"wrr"}
	assign		$tmp681 ___488_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	eq		$tmp723 type $const20 	%argrw{"wrr"}
	if		$tmp723 1697 2009 	%argrw{"r"}
	functioncall	$const21 1696 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	assign		___469_p.x $tmp682.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{245} %argrw{"wr"}
	assign		___469_p.y $tmp682.y 	%argrw{"wr"}
	assign		___469_fscale $const17 	%argrw{"wr"}
	assign		___469_amp $const17 	%argrw{"wr"}
	assign		___469_maxamp $const1 	%argrw{"wr"}
	assign		___469_sum $const1 	%argrw{"wr"}
	for		$tmp726 1601 1604 1640 1642 	%argrw{"r"}
	assign		___470_i $const18 	%argrw{"wr"}
	assign		$tmp724 detail 	%argrw{"wr"}
	le		$tmp725 ___470_i $tmp724 	%argrw{"wrr"}
	neq		$tmp726 $tmp725 $const18 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1610 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp728.x ___469_fscale 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp728.y ___469_fscale 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1610 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp727.x ___469_p.x $tmp728.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp727.y ___469_p.y $tmp728.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	functioncall	$const9 1635 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{245} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp730 $tmp727.x 	%line{71} %argrw{"wr"}
	ge		$tmp731 $tmp730 $const11 	%argrw{"wrr"}
	assign		$tmp732 $tmp731 	%argrw{"wr"}
	assign		$tmp729.x $tmp732 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp733 $tmp727.y 	%line{72} %argrw{"wr"}
	ge		$tmp734 $tmp733 $const11 	%argrw{"wrr"}
	assign		$tmp735 $tmp734 	%argrw{"wr"}
	assign		$tmp729.y $tmp735 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1625 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp736.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp736.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1625 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp729.x $tmp736.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp729.y $tmp736.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1631 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp738.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp738.y $const12 	%argrw{"wr"}
	functioncall	$const35 1631 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp737.x $tmp727.x $tmp738.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp737.y $tmp727.y $tmp738.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1634 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp737.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp737.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		___471_t $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	mul		$tmp739 ___471_t ___469_amp 	%line{245} %argrw{"wrr"}
	add		___469_sum ___469_sum $tmp739 	%argrw{"wrr"}
	add		___469_maxamp ___469_maxamp ___469_amp 	%argrw{"wrr"}
	mul		___469_amp ___469_amp roughness 	%argrw{"wrr"}
	mul		___469_fscale ___469_fscale Lacunarity 	%argrw{"wrr"}
	assign		$tmp740 ___470_i 	%argrw{"wr"}
	add		___470_i ___470_i $const19 	%argrw{"wrr"}
	floor		$tmp741 detail 	%argrw{"wr"}
	sub		___469_rmd detail $tmp741 	%argrw{"wrr"}
	neq		$tmp742 ___469_rmd $const1 	%argrw{"wrr"}
	if		$tmp742 1690 1696 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1652 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp744.x ___469_fscale 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp744.y ___469_fscale 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1652 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp743.x ___469_p.x $tmp744.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp743.y ___469_p.y $tmp744.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	functioncall	$const9 1677 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{245} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp746 $tmp743.x 	%line{71} %argrw{"wr"}
	ge		$tmp747 $tmp746 $const11 	%argrw{"wrr"}
	assign		$tmp748 $tmp747 	%argrw{"wr"}
	assign		$tmp745.x $tmp748 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp749 $tmp743.y 	%line{72} %argrw{"wr"}
	ge		$tmp750 $tmp749 $const11 	%argrw{"wrr"}
	assign		$tmp751 $tmp750 	%argrw{"wr"}
	assign		$tmp745.y $tmp751 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1667 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp752.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp752.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1667 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp745.x $tmp752.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp745.y $tmp752.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1673 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp754.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp754.y $const12 	%argrw{"wr"}
	functioncall	$const35 1673 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp753.x $tmp743.x $tmp754.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp753.y $tmp743.y $tmp754.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1676 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp753.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp753.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		___472_t $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	mul		$tmp755 ___472_t ___469_amp 	%line{245} %argrw{"wrr"}
	add		___472_sum2 ___469_sum $tmp755 	%argrw{"wrr"}
	if		use_normalize 1688 1689 	%argrw{"r"}
	mul		$tmp756 $const10 ___469_sum 	%argrw{"wrr"}
	div		$tmp757 $tmp756 ___469_maxamp 	%argrw{"wrr"}
	add		$tmp758 $tmp757 $const10 	%argrw{"wrr"}
	mul		$tmp759 $const10 ___472_sum2 	%argrw{"wrr"}
	add		$tmp760 ___469_maxamp ___469_amp 	%argrw{"wrr"}
	div		$tmp761 $tmp759 $tmp760 	%argrw{"wrr"}
	add		$tmp762 $tmp761 $const10 	%argrw{"wrr"}
	mix		$tmp681 $tmp758 $tmp762 ___469_rmd 	%argrw{"wrrr"}
	mix		$tmp681 ___469_sum ___472_sum2 ___469_rmd 	%argrw{"wrrr"}
	return
	if		use_normalize 1694 1695 	%argrw{"r"}
	mul		$tmp763 $const10 ___469_sum 	%argrw{"wrr"}
	div		$tmp764 $tmp763 ___469_maxamp 	%argrw{"wrr"}
	add		$tmp681 $tmp764 $const10 	%argrw{"wrr"}
	assign		$tmp681 ___469_sum 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	eq		$tmp765 type $const22 	%argrw{"wrr"}
	if		$tmp765 1802 2009 	%argrw{"r"}
	functioncall	$const23 1801 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:266
# NOISE_HYBRID_MULTI_FRACTAL(vector2)
	assign		___522_p.x $tmp682.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{266} %argrw{"wr"}
	assign		___522_p.y $tmp682.y 	%argrw{"wr"}
	assign		___522_pwr $const17 	%argrw{"wr"}
	assign		___522_value $const1 	%argrw{"wr"}
	assign		___522_weight $const17 	%argrw{"wr"}
	for		$tmp771 1707 1715 1756 1758 	%argrw{"r"}
	assign		___523_i $const18 	%argrw{"wr"}
	gt		$tmp766 ___522_weight $const24 	%argrw{"wrr"}
	neq		$tmp767 $tmp766 $const18 	%argrw{"wrr"}
	if		$tmp767 1714 1714 	%argrw{"r"}
	assign		$tmp768 detail 	%argrw{"wr"}
	le		$tmp769 ___523_i $tmp768 	%argrw{"wrr"}
	neq		$tmp770 $tmp769 $const18 	%argrw{"wrr"}
	assign		$tmp767 $tmp770 	%argrw{"wr"}
	neq		$tmp771 $tmp767 $const18 	%argrw{"wrr"}
	gt		$tmp772 ___522_weight $const17 	%argrw{"wrr"}
	if		$tmp772 1718 1718 	%argrw{"r"}
	assign		___522_weight $const17 	%argrw{"wr"}
	functioncall	$const9 1743 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp775 ___522_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp776 $tmp775 $const11 	%argrw{"wrr"}
	assign		$tmp777 $tmp776 	%argrw{"wr"}
	assign		$tmp774.x $tmp777 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp778 ___522_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp779 $tmp778 $const11 	%argrw{"wrr"}
	assign		$tmp780 $tmp779 	%argrw{"wr"}
	assign		$tmp774.y $tmp780 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1733 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp781.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp781.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1733 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp774.x $tmp781.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp774.y $tmp781.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1739 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp783.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp783.y $const12 	%argrw{"wr"}
	functioncall	$const35 1739 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp782.x ___522_p.x $tmp783.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp782.y ___522_p.y $tmp783.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1742 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp782.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp782.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp773 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:266
# NOISE_HYBRID_MULTI_FRACTAL(vector2)
	add		$tmp784 $tmp773 Offset 	%line{266} %argrw{"wrr"}
	mul		___524_signal $tmp784 ___522_pwr 	%argrw{"wrr"}
	mul		___522_pwr ___522_pwr roughness 	%argrw{"wrr"}
	mul		$tmp785 ___522_weight ___524_signal 	%argrw{"wrr"}
	add		___522_value ___522_value $tmp785 	%argrw{"wrr"}
	mul		$tmp786 Gain ___524_signal 	%argrw{"wrr"}
	mul		___522_weight ___522_weight $tmp786 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1756 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp787.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp787.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1756 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___522_p.x ___522_p.x $tmp787.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___522_p.y ___522_p.y $tmp787.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:266
# NOISE_HYBRID_MULTI_FRACTAL(vector2)
	assign		$tmp788 ___523_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{266} %argrw{"wr"}
	add		___523_i ___523_i $const19 	%argrw{"wrr"}
	floor		$tmp789 detail 	%argrw{"wr"}
	sub		___522_rmd detail $tmp789 	%argrw{"wrr"}
	neq		$tmp790 ___522_rmd $const1 	%argrw{"wrr"}
	neq		$tmp791 $tmp790 $const18 	%argrw{"wrr"}
	if		$tmp791 1766 1766 	%argrw{"r"}
	gt		$tmp792 ___522_weight $const24 	%argrw{"wrr"}
	neq		$tmp793 $tmp792 $const18 	%argrw{"wrr"}
	assign		$tmp791 $tmp793 	%argrw{"wr"}
	if		$tmp791 1800 1800 	%argrw{"r"}
	gt		$tmp794 ___522_weight $const17 	%argrw{"wrr"}
	if		$tmp794 1770 1770 	%argrw{"r"}
	assign		___522_weight $const17 	%argrw{"wr"}
	functioncall	$const9 1795 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp797 ___522_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp798 $tmp797 $const11 	%argrw{"wrr"}
	assign		$tmp799 $tmp798 	%argrw{"wr"}
	assign		$tmp796.x $tmp799 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp800 ___522_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp801 $tmp800 $const11 	%argrw{"wrr"}
	assign		$tmp802 $tmp801 	%argrw{"wr"}
	assign		$tmp796.y $tmp802 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1785 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp803.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp803.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1785 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp796.x $tmp803.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp796.y $tmp803.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1791 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp805.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp805.y $const12 	%argrw{"wr"}
	functioncall	$const35 1791 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp804.x ___522_p.x $tmp805.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp804.y ___522_p.y $tmp805.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1794 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp804.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp804.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp795 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:266
# NOISE_HYBRID_MULTI_FRACTAL(vector2)
	add		$tmp806 $tmp795 Offset 	%line{266} %argrw{"wrr"}
	mul		___526_signal $tmp806 ___522_pwr 	%argrw{"wrr"}
	mul		$tmp807 ___522_rmd ___522_weight 	%argrw{"wrr"}
	mul		$tmp808 $tmp807 ___526_signal 	%argrw{"wrr"}
	add		___522_value ___522_value $tmp808 	%argrw{"wrr"}
	assign		$tmp681 ___522_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	eq		$tmp809 type $const25 	%argrw{"wrr"}
	if		$tmp809 1889 2009 	%argrw{"r"}
	functioncall	$const26 1888 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	assign		___543_p.x $tmp682.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{273} %argrw{"wr"}
	assign		___543_p.y $tmp682.y 	%argrw{"wr"}
	assign		___543_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 1833 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp813 ___543_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp814 $tmp813 $const11 	%argrw{"wrr"}
	assign		$tmp815 $tmp814 	%argrw{"wr"}
	assign		$tmp812.x $tmp815 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp816 ___543_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp817 $tmp816 $const11 	%argrw{"wrr"}
	assign		$tmp818 $tmp817 	%argrw{"wr"}
	assign		$tmp812.y $tmp818 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1823 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp819.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp819.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1823 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp812.x $tmp819.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp812.y $tmp819.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1829 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp821.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp821.y $const12 	%argrw{"wr"}
	functioncall	$const35 1829 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp820.x ___543_p.x $tmp821.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp820.y ___543_p.y $tmp821.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1832 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp820.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp820.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp811 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	fabs		$tmp810 $tmp811 	%line{273} %argrw{"wr"}
	sub		___543_signal Offset $tmp810 	%argrw{"wrr"}
	mul		___543_signal ___543_signal ___543_signal 	%argrw{"wrr"}
	assign		___543_value ___543_signal 	%argrw{"wr"}
	assign		___543_weight $const17 	%argrw{"wr"}
	for		$tmp824 1840 1843 1885 1887 	%argrw{"r"}
	assign		___544_i $const19 	%argrw{"wr"}
	assign		$tmp822 detail 	%argrw{"wr"}
	le		$tmp823 ___544_i $tmp822 	%argrw{"wrr"}
	neq		$tmp824 $tmp823 $const18 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1849 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp825.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp825.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1849 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___543_p.x ___543_p.x $tmp825.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___543_p.y ___543_p.y $tmp825.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	mul		$tmp826 ___543_signal Gain 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{273} %argrw{"wrr"}
	functioncall	$const3 1853 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp827 $tmp826 $const17 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___543_weight $tmp827 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	functioncall	$const9 1878 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{273} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp831 ___543_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp832 $tmp831 $const11 	%argrw{"wrr"}
	assign		$tmp833 $tmp832 	%argrw{"wr"}
	assign		$tmp830.x $tmp833 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp834 ___543_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp835 $tmp834 $const11 	%argrw{"wrr"}
	assign		$tmp836 $tmp835 	%argrw{"wr"}
	assign		$tmp830.y $tmp836 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1868 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp837.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp837.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1868 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp830.x $tmp837.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp830.y $tmp837.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1874 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp839.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp839.y $const12 	%argrw{"wr"}
	functioncall	$const35 1874 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp838.x ___543_p.x $tmp839.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp838.y ___543_p.y $tmp839.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1877 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp838.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp838.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp829 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	fabs		$tmp828 $tmp829 	%line{273} %argrw{"wr"}
	sub		___543_signal Offset $tmp828 	%argrw{"wrr"}
	mul		___543_signal ___543_signal ___543_signal 	%argrw{"wrr"}
	mul		___543_signal ___543_signal ___543_weight 	%argrw{"wrr"}
	mul		$tmp840 ___543_signal ___543_pwr 	%argrw{"wrr"}
	add		___543_value ___543_value $tmp840 	%argrw{"wrr"}
	mul		___543_pwr ___543_pwr roughness 	%argrw{"wrr"}
	assign		$tmp841 ___544_i 	%argrw{"wr"}
	add		___544_i ___544_i $const19 	%argrw{"wrr"}
	assign		$tmp681 ___543_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	eq		$tmp842 type $const27 	%argrw{"wrr"}
	if		$tmp842 2006 2009 	%argrw{"r"}
	functioncall	$const28 2005 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	assign		___504_p.x $tmp682.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{259} %argrw{"wr"}
	assign		___504_p.y $tmp682.y 	%argrw{"wr"}
	assign		___504_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 1920 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp845 ___504_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp846 $tmp845 $const11 	%argrw{"wrr"}
	assign		$tmp847 $tmp846 	%argrw{"wr"}
	assign		$tmp844.x $tmp847 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp848 ___504_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp849 $tmp848 $const11 	%argrw{"wrr"}
	assign		$tmp850 $tmp849 	%argrw{"wr"}
	assign		$tmp844.y $tmp850 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1910 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp851.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp851.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1910 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp844.x $tmp851.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp844.y $tmp851.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1916 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp853.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp853.y $const12 	%argrw{"wr"}
	functioncall	$const35 1916 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp852.x ___504_p.x $tmp853.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp852.y ___504_p.y $tmp853.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1919 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp852.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp852.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp843 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	add		___504_value Offset $tmp843 	%line{259} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1927 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp854.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp854.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1927 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___504_p.x ___504_p.x $tmp854.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___504_p.y ___504_p.y $tmp854.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	for		$tmp857 1929 1932 1968 1970 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{259} %argrw{"r"}
	assign		___505_i $const19 	%argrw{"wr"}
	assign		$tmp855 detail 	%argrw{"wr"}
	le		$tmp856 ___505_i $tmp855 	%argrw{"wrr"}
	neq		$tmp857 $tmp856 $const18 	%argrw{"wrr"}
	functioncall	$const9 1957 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp860 ___504_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp861 $tmp860 $const11 	%argrw{"wrr"}
	assign		$tmp862 $tmp861 	%argrw{"wr"}
	assign		$tmp859.x $tmp862 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp863 ___504_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp864 $tmp863 $const11 	%argrw{"wrr"}
	assign		$tmp865 $tmp864 	%argrw{"wr"}
	assign		$tmp859.y $tmp865 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1947 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp866.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp866.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1947 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp859.x $tmp866.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp859.y $tmp866.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1953 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp868.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp868.y $const12 	%argrw{"wr"}
	functioncall	$const35 1953 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp867.x ___504_p.x $tmp868.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp867.y ___504_p.y $tmp868.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1956 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp867.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp867.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp858 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	add		$tmp869 $tmp858 Offset 	%line{259} %argrw{"wrr"}
	mul		$tmp870 $tmp869 ___504_pwr 	%argrw{"wrr"}
	mul		___506_increment $tmp870 ___504_value 	%argrw{"wrr"}
	add		___504_value ___504_value ___506_increment 	%argrw{"wrr"}
	mul		___504_pwr ___504_pwr roughness 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1968 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp871.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp871.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1968 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___504_p.x ___504_p.x $tmp871.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___504_p.y ___504_p.y $tmp871.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	assign		$tmp872 ___505_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{259} %argrw{"wr"}
	add		___505_i ___505_i $const19 	%argrw{"wrr"}
	floor		$tmp873 detail 	%argrw{"wr"}
	sub		___504_rmd detail $tmp873 	%argrw{"wrr"}
	neq		$tmp874 ___504_rmd $const1 	%argrw{"wrr"}
	if		$tmp874 2004 2004 	%argrw{"r"}
	functioncall	$const9 1999 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp877 ___504_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp878 $tmp877 $const11 	%argrw{"wrr"}
	assign		$tmp879 $tmp878 	%argrw{"wr"}
	assign		$tmp876.x $tmp879 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp880 ___504_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp881 $tmp880 $const11 	%argrw{"wrr"}
	assign		$tmp882 $tmp881 	%argrw{"wr"}
	assign		$tmp876.y $tmp882 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1989 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp883.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp883.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 1989 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp876.x $tmp883.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp876.y $tmp883.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 1995 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp885.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp885.y $const12 	%argrw{"wr"}
	functioncall	$const35 1995 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp884.x ___504_p.x $tmp885.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp884.y ___504_p.y $tmp885.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 1998 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp884.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp884.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp875 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	add		$tmp886 $tmp875 Offset 	%line{259} %argrw{"wrr"}
	mul		$tmp887 $tmp886 ___504_pwr 	%argrw{"wrr"}
	mul		___507_increment $tmp887 ___504_value 	%argrw{"wrr"}
	mul		$tmp888 ___504_rmd ___507_increment 	%argrw{"wrr"}
	add		___504_value ___504_value $tmp888 	%argrw{"wrr"}
	assign		$tmp681 ___504_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	error		$const29 	%argrw{"r"}
	assign		$tmp681 $const1 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:148
#                 noise_select(p + random_vector2_offset(3.0),
	functioncall	$const32 2016 	%line{148} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:58
#   return vector2(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp892 $const8 $const36 $const1 	%line{58} %argrw{"wrrr"}
	mul		$tmp893 $tmp892 $const7 	%argrw{"wrr"}
	add		$tmp891.x $const7 $tmp893 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:59
#                  100.0 + noise("hash", seed, 1.0) * 100.0);
	noise		$tmp894 $const8 $const36 $const17 	%line{59} %argrw{"wrrr"}
	mul		$tmp895 $tmp894 $const7 	%argrw{"wrr"}
	add		$tmp891.y $const7 $tmp895 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 2019 	%line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp890.x ___604_p.x $tmp891.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp890.y ___604_p.y $tmp891.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:148
#                 noise_select(p + random_vector2_offset(3.0),
	functioncall	$const14 2523 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{148} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	eq		$tmp896 type $const15 	%line{80} %argrw{"wrr"}
	if		$tmp896 2104 2523 	%argrw{"r"}
	functioncall	$const16 2103 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:252
# NOISE_MULTI_FRACTAL(vector2)
	assign		___488_p.x $tmp890.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{252} %argrw{"wr"}
	assign		___488_p.y $tmp890.y 	%argrw{"wr"}
	assign		___488_value $const17 	%argrw{"wr"}
	assign		___488_pwr $const17 	%argrw{"wr"}
	for		$tmp899 2029 2032 2067 2069 	%argrw{"r"}
	assign		___489_i $const18 	%argrw{"wr"}
	assign		$tmp897 detail 	%argrw{"wr"}
	le		$tmp898 ___489_i $tmp897 	%argrw{"wrr"}
	neq		$tmp899 $tmp898 $const18 	%argrw{"wrr"}
	functioncall	$const9 2057 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp902 ___488_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp903 $tmp902 $const11 	%argrw{"wrr"}
	assign		$tmp904 $tmp903 	%argrw{"wr"}
	assign		$tmp901.x $tmp904 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp905 ___488_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp906 $tmp905 $const11 	%argrw{"wrr"}
	assign		$tmp907 $tmp906 	%argrw{"wr"}
	assign		$tmp901.y $tmp907 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2047 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp908.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp908.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2047 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp901.x $tmp908.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp901.y $tmp908.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 2053 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp910.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp910.y $const12 	%argrw{"wr"}
	functioncall	$const35 2053 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp909.x ___488_p.x $tmp910.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp909.y ___488_p.y $tmp910.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 2056 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp909.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp909.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp900 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:252
# NOISE_MULTI_FRACTAL(vector2)
	mul		$tmp911 ___488_pwr $tmp900 	%line{252} %argrw{"wrr"}
	add		$tmp912 $tmp911 $const17 	%argrw{"wrr"}
	mul		___488_value ___488_value $tmp912 	%argrw{"wrr"}
	mul		___488_pwr ___488_pwr roughness 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2067 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp913.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp913.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2067 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___488_p.x ___488_p.x $tmp913.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___488_p.y ___488_p.y $tmp913.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:252
# NOISE_MULTI_FRACTAL(vector2)
	assign		$tmp914 ___489_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{252} %argrw{"wr"}
	add		___489_i ___489_i $const19 	%argrw{"wrr"}
	floor		$tmp915 detail 	%argrw{"wr"}
	sub		___488_rmd detail $tmp915 	%argrw{"wrr"}
	neq		$tmp916 ___488_rmd $const1 	%argrw{"wrr"}
	if		$tmp916 2102 2102 	%argrw{"r"}
	mul		$tmp917 ___488_rmd ___488_pwr 	%argrw{"wrr"}
	functioncall	$const9 2099 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp920 ___488_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp921 $tmp920 $const11 	%argrw{"wrr"}
	assign		$tmp922 $tmp921 	%argrw{"wr"}
	assign		$tmp919.x $tmp922 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp923 ___488_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp924 $tmp923 $const11 	%argrw{"wrr"}
	assign		$tmp925 $tmp924 	%argrw{"wr"}
	assign		$tmp919.y $tmp925 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2089 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp926.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp926.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2089 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp919.x $tmp926.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp919.y $tmp926.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 2095 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp928.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp928.y $const12 	%argrw{"wr"}
	functioncall	$const35 2095 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp927.x ___488_p.x $tmp928.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp927.y ___488_p.y $tmp928.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 2098 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp927.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp927.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp918 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:252
# NOISE_MULTI_FRACTAL(vector2)
	mul		$tmp929 $tmp917 $tmp918 	%line{252} %argrw{"wrr"}
	add		$tmp930 $tmp929 $const17 	%argrw{"wrr"}
	mul		___488_value ___488_value $tmp930 	%argrw{"wrr"}
	assign		$tmp889 ___488_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	eq		$tmp931 type $const20 	%argrw{"wrr"}
	if		$tmp931 2211 2523 	%argrw{"r"}
	functioncall	$const21 2210 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	assign		___469_p.x $tmp890.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{245} %argrw{"wr"}
	assign		___469_p.y $tmp890.y 	%argrw{"wr"}
	assign		___469_fscale $const17 	%argrw{"wr"}
	assign		___469_amp $const17 	%argrw{"wr"}
	assign		___469_maxamp $const1 	%argrw{"wr"}
	assign		___469_sum $const1 	%argrw{"wr"}
	for		$tmp934 2115 2118 2154 2156 	%argrw{"r"}
	assign		___470_i $const18 	%argrw{"wr"}
	assign		$tmp932 detail 	%argrw{"wr"}
	le		$tmp933 ___470_i $tmp932 	%argrw{"wrr"}
	neq		$tmp934 $tmp933 $const18 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2124 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp936.x ___469_fscale 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp936.y ___469_fscale 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2124 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp935.x ___469_p.x $tmp936.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp935.y ___469_p.y $tmp936.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	functioncall	$const9 2149 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{245} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp938 $tmp935.x 	%line{71} %argrw{"wr"}
	ge		$tmp939 $tmp938 $const11 	%argrw{"wrr"}
	assign		$tmp940 $tmp939 	%argrw{"wr"}
	assign		$tmp937.x $tmp940 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp941 $tmp935.y 	%line{72} %argrw{"wr"}
	ge		$tmp942 $tmp941 $const11 	%argrw{"wrr"}
	assign		$tmp943 $tmp942 	%argrw{"wr"}
	assign		$tmp937.y $tmp943 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2139 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp944.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp944.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2139 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp937.x $tmp944.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp937.y $tmp944.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 2145 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp946.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp946.y $const12 	%argrw{"wr"}
	functioncall	$const35 2145 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp945.x $tmp935.x $tmp946.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp945.y $tmp935.y $tmp946.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 2148 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp945.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp945.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		___471_t $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	mul		$tmp947 ___471_t ___469_amp 	%line{245} %argrw{"wrr"}
	add		___469_sum ___469_sum $tmp947 	%argrw{"wrr"}
	add		___469_maxamp ___469_maxamp ___469_amp 	%argrw{"wrr"}
	mul		___469_amp ___469_amp roughness 	%argrw{"wrr"}
	mul		___469_fscale ___469_fscale Lacunarity 	%argrw{"wrr"}
	assign		$tmp948 ___470_i 	%argrw{"wr"}
	add		___470_i ___470_i $const19 	%argrw{"wrr"}
	floor		$tmp949 detail 	%argrw{"wr"}
	sub		___469_rmd detail $tmp949 	%argrw{"wrr"}
	neq		$tmp950 ___469_rmd $const1 	%argrw{"wrr"}
	if		$tmp950 2204 2210 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2166 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp952.x ___469_fscale 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp952.y ___469_fscale 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2166 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp951.x ___469_p.x $tmp952.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp951.y ___469_p.y $tmp952.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	functioncall	$const9 2191 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{245} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp954 $tmp951.x 	%line{71} %argrw{"wr"}
	ge		$tmp955 $tmp954 $const11 	%argrw{"wrr"}
	assign		$tmp956 $tmp955 	%argrw{"wr"}
	assign		$tmp953.x $tmp956 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp957 $tmp951.y 	%line{72} %argrw{"wr"}
	ge		$tmp958 $tmp957 $const11 	%argrw{"wrr"}
	assign		$tmp959 $tmp958 	%argrw{"wr"}
	assign		$tmp953.y $tmp959 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2181 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp960.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp960.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2181 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp953.x $tmp960.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp953.y $tmp960.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 2187 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp962.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp962.y $const12 	%argrw{"wr"}
	functioncall	$const35 2187 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp961.x $tmp951.x $tmp962.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp961.y $tmp951.y $tmp962.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 2190 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp961.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp961.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		___472_t $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:245
# NOISE_FBM(vector2)
	mul		$tmp963 ___472_t ___469_amp 	%line{245} %argrw{"wrr"}
	add		___472_sum2 ___469_sum $tmp963 	%argrw{"wrr"}
	if		use_normalize 2202 2203 	%argrw{"r"}
	mul		$tmp964 $const10 ___469_sum 	%argrw{"wrr"}
	div		$tmp965 $tmp964 ___469_maxamp 	%argrw{"wrr"}
	add		$tmp966 $tmp965 $const10 	%argrw{"wrr"}
	mul		$tmp967 $const10 ___472_sum2 	%argrw{"wrr"}
	add		$tmp968 ___469_maxamp ___469_amp 	%argrw{"wrr"}
	div		$tmp969 $tmp967 $tmp968 	%argrw{"wrr"}
	add		$tmp970 $tmp969 $const10 	%argrw{"wrr"}
	mix		$tmp889 $tmp966 $tmp970 ___469_rmd 	%argrw{"wrrr"}
	mix		$tmp889 ___469_sum ___472_sum2 ___469_rmd 	%argrw{"wrrr"}
	return
	if		use_normalize 2208 2209 	%argrw{"r"}
	mul		$tmp971 $const10 ___469_sum 	%argrw{"wrr"}
	div		$tmp972 $tmp971 ___469_maxamp 	%argrw{"wrr"}
	add		$tmp889 $tmp972 $const10 	%argrw{"wrr"}
	assign		$tmp889 ___469_sum 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	eq		$tmp973 type $const22 	%argrw{"wrr"}
	if		$tmp973 2316 2523 	%argrw{"r"}
	functioncall	$const23 2315 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:266
# NOISE_HYBRID_MULTI_FRACTAL(vector2)
	assign		___522_p.x $tmp890.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{266} %argrw{"wr"}
	assign		___522_p.y $tmp890.y 	%argrw{"wr"}
	assign		___522_pwr $const17 	%argrw{"wr"}
	assign		___522_value $const1 	%argrw{"wr"}
	assign		___522_weight $const17 	%argrw{"wr"}
	for		$tmp979 2221 2229 2270 2272 	%argrw{"r"}
	assign		___523_i $const18 	%argrw{"wr"}
	gt		$tmp974 ___522_weight $const24 	%argrw{"wrr"}
	neq		$tmp975 $tmp974 $const18 	%argrw{"wrr"}
	if		$tmp975 2228 2228 	%argrw{"r"}
	assign		$tmp976 detail 	%argrw{"wr"}
	le		$tmp977 ___523_i $tmp976 	%argrw{"wrr"}
	neq		$tmp978 $tmp977 $const18 	%argrw{"wrr"}
	assign		$tmp975 $tmp978 	%argrw{"wr"}
	neq		$tmp979 $tmp975 $const18 	%argrw{"wrr"}
	gt		$tmp980 ___522_weight $const17 	%argrw{"wrr"}
	if		$tmp980 2232 2232 	%argrw{"r"}
	assign		___522_weight $const17 	%argrw{"wr"}
	functioncall	$const9 2257 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp983 ___522_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp984 $tmp983 $const11 	%argrw{"wrr"}
	assign		$tmp985 $tmp984 	%argrw{"wr"}
	assign		$tmp982.x $tmp985 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp986 ___522_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp987 $tmp986 $const11 	%argrw{"wrr"}
	assign		$tmp988 $tmp987 	%argrw{"wr"}
	assign		$tmp982.y $tmp988 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2247 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp989.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp989.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2247 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp982.x $tmp989.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp982.y $tmp989.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 2253 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp991.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp991.y $const12 	%argrw{"wr"}
	functioncall	$const35 2253 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp990.x ___522_p.x $tmp991.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp990.y ___522_p.y $tmp991.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 2256 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp990.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp990.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp981 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:266
# NOISE_HYBRID_MULTI_FRACTAL(vector2)
	add		$tmp992 $tmp981 Offset 	%line{266} %argrw{"wrr"}
	mul		___524_signal $tmp992 ___522_pwr 	%argrw{"wrr"}
	mul		___522_pwr ___522_pwr roughness 	%argrw{"wrr"}
	mul		$tmp993 ___522_weight ___524_signal 	%argrw{"wrr"}
	add		___522_value ___522_value $tmp993 	%argrw{"wrr"}
	mul		$tmp994 Gain ___524_signal 	%argrw{"wrr"}
	mul		___522_weight ___522_weight $tmp994 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2270 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp995.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp995.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2270 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___522_p.x ___522_p.x $tmp995.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___522_p.y ___522_p.y $tmp995.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:266
# NOISE_HYBRID_MULTI_FRACTAL(vector2)
	assign		$tmp996 ___523_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{266} %argrw{"wr"}
	add		___523_i ___523_i $const19 	%argrw{"wrr"}
	floor		$tmp997 detail 	%argrw{"wr"}
	sub		___522_rmd detail $tmp997 	%argrw{"wrr"}
	neq		$tmp998 ___522_rmd $const1 	%argrw{"wrr"}
	neq		$tmp999 $tmp998 $const18 	%argrw{"wrr"}
	if		$tmp999 2280 2280 	%argrw{"r"}
	gt		$tmp1000 ___522_weight $const24 	%argrw{"wrr"}
	neq		$tmp1001 $tmp1000 $const18 	%argrw{"wrr"}
	assign		$tmp999 $tmp1001 	%argrw{"wr"}
	if		$tmp999 2314 2314 	%argrw{"r"}
	gt		$tmp1002 ___522_weight $const17 	%argrw{"wrr"}
	if		$tmp1002 2284 2284 	%argrw{"r"}
	assign		___522_weight $const17 	%argrw{"wr"}
	functioncall	$const9 2309 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp1005 ___522_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp1006 $tmp1005 $const11 	%argrw{"wrr"}
	assign		$tmp1007 $tmp1006 	%argrw{"wr"}
	assign		$tmp1004.x $tmp1007 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp1008 ___522_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp1009 $tmp1008 $const11 	%argrw{"wrr"}
	assign		$tmp1010 $tmp1009 	%argrw{"wr"}
	assign		$tmp1004.y $tmp1010 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2299 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp1011.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp1011.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2299 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp1004.x $tmp1011.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp1004.y $tmp1011.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 2305 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp1013.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp1013.y $const12 	%argrw{"wr"}
	functioncall	$const35 2305 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp1012.x ___522_p.x $tmp1013.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp1012.y ___522_p.y $tmp1013.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 2308 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp1012.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp1012.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp1003 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:266
# NOISE_HYBRID_MULTI_FRACTAL(vector2)
	add		$tmp1014 $tmp1003 Offset 	%line{266} %argrw{"wrr"}
	mul		___526_signal $tmp1014 ___522_pwr 	%argrw{"wrr"}
	mul		$tmp1015 ___522_rmd ___522_weight 	%argrw{"wrr"}
	mul		$tmp1016 $tmp1015 ___526_signal 	%argrw{"wrr"}
	add		___522_value ___522_value $tmp1016 	%argrw{"wrr"}
	assign		$tmp889 ___522_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	eq		$tmp1017 type $const25 	%argrw{"wrr"}
	if		$tmp1017 2403 2523 	%argrw{"r"}
	functioncall	$const26 2402 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	assign		___543_p.x $tmp890.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{273} %argrw{"wr"}
	assign		___543_p.y $tmp890.y 	%argrw{"wr"}
	assign		___543_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 2347 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp1021 ___543_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp1022 $tmp1021 $const11 	%argrw{"wrr"}
	assign		$tmp1023 $tmp1022 	%argrw{"wr"}
	assign		$tmp1020.x $tmp1023 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp1024 ___543_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp1025 $tmp1024 $const11 	%argrw{"wrr"}
	assign		$tmp1026 $tmp1025 	%argrw{"wr"}
	assign		$tmp1020.y $tmp1026 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2337 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp1027.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp1027.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2337 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp1020.x $tmp1027.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp1020.y $tmp1027.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 2343 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp1029.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp1029.y $const12 	%argrw{"wr"}
	functioncall	$const35 2343 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp1028.x ___543_p.x $tmp1029.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp1028.y ___543_p.y $tmp1029.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 2346 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp1028.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp1028.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp1019 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	fabs		$tmp1018 $tmp1019 	%line{273} %argrw{"wr"}
	sub		___543_signal Offset $tmp1018 	%argrw{"wrr"}
	mul		___543_signal ___543_signal ___543_signal 	%argrw{"wrr"}
	assign		___543_value ___543_signal 	%argrw{"wr"}
	assign		___543_weight $const17 	%argrw{"wr"}
	for		$tmp1032 2354 2357 2399 2401 	%argrw{"r"}
	assign		___544_i $const19 	%argrw{"wr"}
	assign		$tmp1030 detail 	%argrw{"wr"}
	le		$tmp1031 ___544_i $tmp1030 	%argrw{"wrr"}
	neq		$tmp1032 $tmp1031 $const18 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2363 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp1033.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp1033.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2363 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___543_p.x ___543_p.x $tmp1033.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___543_p.y ___543_p.y $tmp1033.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	mul		$tmp1034 ___543_signal Gain 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{273} %argrw{"wrr"}
	functioncall	$const3 2367 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1035 $tmp1034 $const17 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___543_weight $tmp1035 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	functioncall	$const9 2392 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{273} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp1039 ___543_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp1040 $tmp1039 $const11 	%argrw{"wrr"}
	assign		$tmp1041 $tmp1040 	%argrw{"wr"}
	assign		$tmp1038.x $tmp1041 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp1042 ___543_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp1043 $tmp1042 $const11 	%argrw{"wrr"}
	assign		$tmp1044 $tmp1043 	%argrw{"wr"}
	assign		$tmp1038.y $tmp1044 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2382 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp1045.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp1045.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2382 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp1038.x $tmp1045.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp1038.y $tmp1045.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 2388 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp1047.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp1047.y $const12 	%argrw{"wr"}
	functioncall	$const35 2388 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp1046.x ___543_p.x $tmp1047.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp1046.y ___543_p.y $tmp1047.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 2391 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp1046.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp1046.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp1037 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:273
# NOISE_RIDGED_MULTI_FRACTAL(vector2)
	fabs		$tmp1036 $tmp1037 	%line{273} %argrw{"wr"}
	sub		___543_signal Offset $tmp1036 	%argrw{"wrr"}
	mul		___543_signal ___543_signal ___543_signal 	%argrw{"wrr"}
	mul		___543_signal ___543_signal ___543_weight 	%argrw{"wrr"}
	mul		$tmp1048 ___543_signal ___543_pwr 	%argrw{"wrr"}
	add		___543_value ___543_value $tmp1048 	%argrw{"wrr"}
	mul		___543_pwr ___543_pwr roughness 	%argrw{"wrr"}
	assign		$tmp1049 ___544_i 	%argrw{"wr"}
	add		___544_i ___544_i $const19 	%argrw{"wrr"}
	assign		$tmp889 ___543_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	eq		$tmp1050 type $const27 	%argrw{"wrr"}
	if		$tmp1050 2520 2523 	%argrw{"r"}
	functioncall	$const28 2519 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	assign		___504_p.x $tmp890.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{259} %argrw{"wr"}
	assign		___504_p.y $tmp890.y 	%argrw{"wr"}
	assign		___504_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 2434 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp1053 ___504_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp1054 $tmp1053 $const11 	%argrw{"wrr"}
	assign		$tmp1055 $tmp1054 	%argrw{"wr"}
	assign		$tmp1052.x $tmp1055 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp1056 ___504_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp1057 $tmp1056 $const11 	%argrw{"wrr"}
	assign		$tmp1058 $tmp1057 	%argrw{"wr"}
	assign		$tmp1052.y $tmp1058 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2424 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp1059.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp1059.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2424 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp1052.x $tmp1059.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp1052.y $tmp1059.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 2430 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp1061.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp1061.y $const12 	%argrw{"wr"}
	functioncall	$const35 2430 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp1060.x ___504_p.x $tmp1061.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp1060.y ___504_p.y $tmp1061.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 2433 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp1060.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp1060.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp1051 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	add		___504_value Offset $tmp1051 	%line{259} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2441 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp1062.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp1062.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2441 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___504_p.x ___504_p.x $tmp1062.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___504_p.y ___504_p.y $tmp1062.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	for		$tmp1065 2443 2446 2482 2484 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{259} %argrw{"r"}
	assign		___505_i $const19 	%argrw{"wr"}
	assign		$tmp1063 detail 	%argrw{"wr"}
	le		$tmp1064 ___505_i $tmp1063 	%argrw{"wrr"}
	neq		$tmp1065 $tmp1064 $const18 	%argrw{"wrr"}
	functioncall	$const9 2471 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp1068 ___504_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp1069 $tmp1068 $const11 	%argrw{"wrr"}
	assign		$tmp1070 $tmp1069 	%argrw{"wr"}
	assign		$tmp1067.x $tmp1070 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp1071 ___504_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp1072 $tmp1071 $const11 	%argrw{"wrr"}
	assign		$tmp1073 $tmp1072 	%argrw{"wr"}
	assign		$tmp1067.y $tmp1073 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2461 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp1074.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp1074.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2461 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp1067.x $tmp1074.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp1067.y $tmp1074.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 2467 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp1076.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp1076.y $const12 	%argrw{"wr"}
	functioncall	$const35 2467 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp1075.x ___504_p.x $tmp1076.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp1075.y ___504_p.y $tmp1076.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 2470 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp1075.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp1075.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp1066 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	add		$tmp1077 $tmp1066 Offset 	%line{259} %argrw{"wrr"}
	mul		$tmp1078 $tmp1077 ___504_pwr 	%argrw{"wrr"}
	mul		___506_increment $tmp1078 ___504_value 	%argrw{"wrr"}
	add		___504_value ___504_value ___506_increment 	%argrw{"wrr"}
	mul		___504_pwr ___504_pwr roughness 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2482 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp1079.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp1079.y Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2482 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___504_p.x ___504_p.x $tmp1079.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___504_p.y ___504_p.y $tmp1079.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	assign		$tmp1080 ___505_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{259} %argrw{"wr"}
	add		___505_i ___505_i $const19 	%argrw{"wrr"}
	floor		$tmp1081 detail 	%argrw{"wr"}
	sub		___504_rmd detail $tmp1081 	%argrw{"wrr"}
	neq		$tmp1082 ___504_rmd $const1 	%argrw{"wrr"}
	if		$tmp1082 2518 2518 	%argrw{"r"}
	functioncall	$const9 2513 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:71
#   vector2 precision_correction = 0.5 * vector2(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp1085 ___504_p.x 	%line{71} %argrw{"wr"}
	ge		$tmp1086 $tmp1085 $const11 	%argrw{"wrr"}
	assign		$tmp1087 $tmp1086 	%argrw{"wr"}
	assign		$tmp1084.x $tmp1087 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:72
#                                                float(fabs(co.y) >= 1000000.0));
	fabs		$tmp1088 ___504_p.y 	%line{72} %argrw{"wr"}
	ge		$tmp1089 $tmp1088 $const11 	%argrw{"wrr"}
	assign		$tmp1090 $tmp1089 	%argrw{"wr"}
	assign		$tmp1084.y $tmp1090 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2503 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:98
#     return b * vector2(a, a);
	assign		$tmp1091.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{98} %argrw{"wr"}
	assign		$tmp1091.y $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 2503 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___461_precision_correction.x $tmp1084.x $tmp1091.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___461_precision_correction.y $tmp1084.y $tmp1091.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:76
#   vector2 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 2509 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{76} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:258
#     return fmod(a, vector2(b, b));
	assign		$tmp1093.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{258} %argrw{"wr"}
	assign		$tmp1093.y $const12 	%argrw{"wr"}
	functioncall	$const35 2509 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:252
#     return vector2 (fmod(a.x, b.x),
	fmod		$tmp1092.x ___504_p.x $tmp1093.x 	%line{252} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:253
#                     fmod(a.y, b.y));
	fmod		$tmp1092.y ___504_p.y $tmp1093.y 	%line{253} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 2512 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___461_p.x $tmp1092.x ___461_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector2.h"} %line{28} %argrw{"wrr"}
	add		___461_p.y $tmp1092.y ___461_precision_correction.y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:78
#   return noise("snoise", p.x, p.y);
	noise		$tmp1083 $const13 ___461_p.x ___461_p.y 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{78} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:259
# NOISE_HETERO_TERRAIN(vector2)
	add		$tmp1094 $tmp1083 Offset 	%line{259} %argrw{"wrr"}
	mul		$tmp1095 $tmp1094 ___504_pwr 	%argrw{"wrr"}
	mul		___507_increment $tmp1095 ___504_value 	%argrw{"wrr"}
	mul		$tmp1096 ___504_rmd ___507_increment 	%argrw{"wrr"}
	add		___504_value ___504_value $tmp1096 	%argrw{"wrr"}
	assign		$tmp889 ___504_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:80
# NOISE_SELECT(vector2)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{80}
	error		$const29 	%argrw{"r"}
	assign		$tmp889 $const1 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:139
#   Color = color(value,
	color		Color ___604_value $tmp681 $tmp889 	%line{139} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:156
#   return value;
	assign		Fac ___604_value 	%line{156} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:281
#   else if (dimensions == "3D") {
	eq		$tmp1097 dimensions $const37 	%line{281} %argrw{"wrr"}
	if		$tmp1097 3921 6483 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:282
#     Fac = noise_texture(
	functioncall	$const5 3921 	%line{282} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:170
#   vector3 p = co;
	assign		___606_p p 	%line{170} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:171
#   if (distortion != 0.0) {
	neq		$tmp1098 Distortion $const1 	%line{171} %argrw{"wrr"}
	if		$tmp1098 2635 2635 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:172
#     p += vector3(safe_snoise(p + random_vector3_offset(0.0)) * distortion,
	functioncall	$const38 2542 	%line{172} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:64
#   return vector3(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp1102 $const8 $const1 $const1 	%line{64} %argrw{"wrrr"}
	mul		$tmp1103 $tmp1102 $const7 	%argrw{"wrr"}
	add		$tmp1104 $const7 $tmp1103 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:65
#                  100.0 + noise("hash", seed, 1.0) * 100.0,
	noise		$tmp1105 $const8 $const1 $const17 	%line{65} %argrw{"wrrr"}
	mul		$tmp1106 $tmp1105 $const7 	%argrw{"wrr"}
	add		$tmp1107 $const7 $tmp1106 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:66
#                  100.0 + noise("hash", seed, 2.0) * 100.0);
	noise		$tmp1108 $const8 $const1 $const30 	%line{66} %argrw{"wrrr"}
	mul		$tmp1109 $tmp1108 $const7 	%argrw{"wrr"}
	add		$tmp1110 $const7 $tmp1109 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:64
#   return vector3(100.0 + noise("hash", seed, 0.0) * 100.0,
	point		$tmp1101 $tmp1104 $tmp1107 $tmp1110 	%line{64} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:172
#     p += vector3(safe_snoise(p + random_vector3_offset(0.0)) * distortion,
	add		$tmp1111 ___606_p $tmp1101 	%line{172} %argrw{"wrr"}
	functioncall	$const9 2564 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1115 $tmp1111 $const18 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{83} %argrw{"wrr"}
	fabs		$tmp1114 $tmp1115 	%argrw{"wr"}
	ge		$tmp1116 $tmp1114 $const11 	%argrw{"wrr"}
	assign		$tmp1117 $tmp1116 	%argrw{"wr"}
	assign		$tmp1113 $tmp1117 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1120 $tmp1111 $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1119 $tmp1120 	%argrw{"wr"}
	ge		$tmp1121 $tmp1119 $const11 	%argrw{"wrr"}
	assign		$tmp1122 $tmp1121 	%argrw{"wr"}
	assign		$tmp1118 $tmp1122 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1125 $tmp1111 $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1124 $tmp1125 	%argrw{"wr"}
	ge		$tmp1126 $tmp1124 $const11 	%argrw{"wrr"}
	assign		$tmp1127 $tmp1126 	%argrw{"wr"}
	assign		$tmp1123 $tmp1127 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1112 $tmp1113 $tmp1118 $tmp1123 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1112 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1128 $tmp1111 $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1128 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1100 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:172
#     p += vector3(safe_snoise(p + random_vector3_offset(0.0)) * distortion,
	mul		$tmp1129 $tmp1100 Distortion 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{172} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:173
#                  safe_snoise(p + random_vector3_offset(1.0)) * distortion,
	functioncall	$const38 2576 	%line{173} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:64
#   return vector3(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp1132 $const8 $const17 $const1 	%line{64} %argrw{"wrrr"}
	mul		$tmp1133 $tmp1132 $const7 	%argrw{"wrr"}
	add		$tmp1134 $const7 $tmp1133 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:65
#                  100.0 + noise("hash", seed, 1.0) * 100.0,
	noise		$tmp1135 $const8 $const17 $const17 	%line{65} %argrw{"wrrr"}
	mul		$tmp1136 $tmp1135 $const7 	%argrw{"wrr"}
	add		$tmp1137 $const7 $tmp1136 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:66
#                  100.0 + noise("hash", seed, 2.0) * 100.0);
	noise		$tmp1138 $const8 $const17 $const30 	%line{66} %argrw{"wrrr"}
	mul		$tmp1139 $tmp1138 $const7 	%argrw{"wrr"}
	add		$tmp1140 $const7 $tmp1139 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:64
#   return vector3(100.0 + noise("hash", seed, 0.0) * 100.0,
	point		$tmp1131 $tmp1134 $tmp1137 $tmp1140 	%line{64} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:173
#                  safe_snoise(p + random_vector3_offset(1.0)) * distortion,
	add		$tmp1141 ___606_p $tmp1131 	%line{173} %argrw{"wrr"}
	functioncall	$const9 2598 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1145 $tmp1141 $const18 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{83} %argrw{"wrr"}
	fabs		$tmp1144 $tmp1145 	%argrw{"wr"}
	ge		$tmp1146 $tmp1144 $const11 	%argrw{"wrr"}
	assign		$tmp1147 $tmp1146 	%argrw{"wr"}
	assign		$tmp1143 $tmp1147 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1150 $tmp1141 $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1149 $tmp1150 	%argrw{"wr"}
	ge		$tmp1151 $tmp1149 $const11 	%argrw{"wrr"}
	assign		$tmp1152 $tmp1151 	%argrw{"wr"}
	assign		$tmp1148 $tmp1152 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1155 $tmp1141 $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1154 $tmp1155 	%argrw{"wr"}
	ge		$tmp1156 $tmp1154 $const11 	%argrw{"wrr"}
	assign		$tmp1157 $tmp1156 	%argrw{"wr"}
	assign		$tmp1153 $tmp1157 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1142 $tmp1143 $tmp1148 $tmp1153 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1142 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1158 $tmp1141 $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1158 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1130 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:173
#                  safe_snoise(p + random_vector3_offset(1.0)) * distortion,
	mul		$tmp1159 $tmp1130 Distortion 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{173} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:174
#                  safe_snoise(p + random_vector3_offset(2.0)) * distortion);
	functioncall	$const38 2610 	%line{174} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:64
#   return vector3(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp1162 $const8 $const30 $const1 	%line{64} %argrw{"wrrr"}
	mul		$tmp1163 $tmp1162 $const7 	%argrw{"wrr"}
	add		$tmp1164 $const7 $tmp1163 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:65
#                  100.0 + noise("hash", seed, 1.0) * 100.0,
	noise		$tmp1165 $const8 $const30 $const17 	%line{65} %argrw{"wrrr"}
	mul		$tmp1166 $tmp1165 $const7 	%argrw{"wrr"}
	add		$tmp1167 $const7 $tmp1166 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:66
#                  100.0 + noise("hash", seed, 2.0) * 100.0);
	noise		$tmp1168 $const8 $const30 $const30 	%line{66} %argrw{"wrrr"}
	mul		$tmp1169 $tmp1168 $const7 	%argrw{"wrr"}
	add		$tmp1170 $const7 $tmp1169 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:64
#   return vector3(100.0 + noise("hash", seed, 0.0) * 100.0,
	point		$tmp1161 $tmp1164 $tmp1167 $tmp1170 	%line{64} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:174
#                  safe_snoise(p + random_vector3_offset(2.0)) * distortion);
	add		$tmp1171 ___606_p $tmp1161 	%line{174} %argrw{"wrr"}
	functioncall	$const9 2632 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1175 $tmp1171 $const18 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{83} %argrw{"wrr"}
	fabs		$tmp1174 $tmp1175 	%argrw{"wr"}
	ge		$tmp1176 $tmp1174 $const11 	%argrw{"wrr"}
	assign		$tmp1177 $tmp1176 	%argrw{"wr"}
	assign		$tmp1173 $tmp1177 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1180 $tmp1171 $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1179 $tmp1180 	%argrw{"wr"}
	ge		$tmp1181 $tmp1179 $const11 	%argrw{"wrr"}
	assign		$tmp1182 $tmp1181 	%argrw{"wr"}
	assign		$tmp1178 $tmp1182 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1185 $tmp1171 $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1184 $tmp1185 	%argrw{"wr"}
	ge		$tmp1186 $tmp1184 $const11 	%argrw{"wrr"}
	assign		$tmp1187 $tmp1186 	%argrw{"wr"}
	assign		$tmp1183 $tmp1187 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1172 $tmp1173 $tmp1178 $tmp1183 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1172 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1188 $tmp1171 $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1188 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1160 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:174
#                  safe_snoise(p + random_vector3_offset(2.0)) * distortion);
	mul		$tmp1189 $tmp1160 Distortion 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{174} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:172
#     p += vector3(safe_snoise(p + random_vector3_offset(0.0)) * distortion,
	point		$tmp1099 $tmp1129 $tmp1159 $tmp1189 	%line{172} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:174
#                  safe_snoise(p + random_vector3_offset(2.0)) * distortion);
	add		___606_p ___606_p $tmp1099 	%line{174} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:177
#   float value = noise_select(p, detail, roughness, lacunarity, offset, gain, type, use_normalize);
	functioncall	$const14 3055 	%line{177} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	eq		$tmp1190 type $const15 	%line{81} %argrw{"wrr"}
	if		$tmp1190 2706 3055 	%argrw{"r"}
	functioncall	$const16 2705 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:253
# NOISE_MULTI_FRACTAL(vector3)
	assign		___492_p ___606_p 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{253} %argrw{"wr"}
	assign		___492_value $const17 	%argrw{"wr"}
	assign		___492_pwr $const17 	%argrw{"wr"}
	for		$tmp1193 2644 2647 2673 2675 	%argrw{"r"}
	assign		___493_i $const18 	%argrw{"wr"}
	assign		$tmp1191 detail 	%argrw{"wr"}
	le		$tmp1192 ___493_i $tmp1191 	%argrw{"wrr"}
	neq		$tmp1193 $tmp1192 $const18 	%argrw{"wrr"}
	functioncall	$const9 2668 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1198 ___492_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1197 $tmp1198 	%argrw{"wr"}
	ge		$tmp1199 $tmp1197 $const11 	%argrw{"wrr"}
	assign		$tmp1200 $tmp1199 	%argrw{"wr"}
	assign		$tmp1196 $tmp1200 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1203 ___492_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1202 $tmp1203 	%argrw{"wr"}
	ge		$tmp1204 $tmp1202 $const11 	%argrw{"wrr"}
	assign		$tmp1205 $tmp1204 	%argrw{"wr"}
	assign		$tmp1201 $tmp1205 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1208 ___492_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1207 $tmp1208 	%argrw{"wr"}
	ge		$tmp1209 $tmp1207 $const11 	%argrw{"wrr"}
	assign		$tmp1210 $tmp1209 	%argrw{"wr"}
	assign		$tmp1206 $tmp1210 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1195 $tmp1196 $tmp1201 $tmp1206 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1195 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1211 ___492_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1211 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1194 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:253
# NOISE_MULTI_FRACTAL(vector3)
	mul		$tmp1212 ___492_pwr $tmp1194 	%line{253} %argrw{"wrr"}
	add		$tmp1213 $tmp1212 $const17 	%argrw{"wrr"}
	mul		___492_value ___492_value $tmp1213 	%argrw{"wrr"}
	mul		___492_pwr ___492_pwr roughness 	%argrw{"wrr"}
	mul		___492_p ___492_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp1214 ___493_i 	%argrw{"wr"}
	add		___493_i ___493_i $const19 	%argrw{"wrr"}
	floor		$tmp1215 detail 	%argrw{"wr"}
	sub		___492_rmd detail $tmp1215 	%argrw{"wrr"}
	neq		$tmp1216 ___492_rmd $const1 	%argrw{"wrr"}
	if		$tmp1216 2704 2704 	%argrw{"r"}
	mul		$tmp1217 ___492_rmd ___492_pwr 	%argrw{"wrr"}
	functioncall	$const9 2701 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1222 ___492_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1221 $tmp1222 	%argrw{"wr"}
	ge		$tmp1223 $tmp1221 $const11 	%argrw{"wrr"}
	assign		$tmp1224 $tmp1223 	%argrw{"wr"}
	assign		$tmp1220 $tmp1224 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1227 ___492_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1226 $tmp1227 	%argrw{"wr"}
	ge		$tmp1228 $tmp1226 $const11 	%argrw{"wrr"}
	assign		$tmp1229 $tmp1228 	%argrw{"wr"}
	assign		$tmp1225 $tmp1229 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1232 ___492_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1231 $tmp1232 	%argrw{"wr"}
	ge		$tmp1233 $tmp1231 $const11 	%argrw{"wrr"}
	assign		$tmp1234 $tmp1233 	%argrw{"wr"}
	assign		$tmp1230 $tmp1234 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1219 $tmp1220 $tmp1225 $tmp1230 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1219 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1235 ___492_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1235 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1218 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:253
# NOISE_MULTI_FRACTAL(vector3)
	mul		$tmp1236 $tmp1217 $tmp1218 	%line{253} %argrw{"wrr"}
	add		$tmp1237 $tmp1236 $const17 	%argrw{"wrr"}
	mul		___492_value ___492_value $tmp1237 	%argrw{"wrr"}
	assign		___606_value ___492_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	eq		$tmp1238 type $const20 	%argrw{"wrr"}
	if		$tmp1238 2794 3055 	%argrw{"r"}
	functioncall	$const21 2793 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:246
# NOISE_FBM(vector3)
	assign		___474_p ___606_p 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{246} %argrw{"wr"}
	assign		___474_fscale $const17 	%argrw{"wr"}
	assign		___474_amp $const17 	%argrw{"wr"}
	assign		___474_maxamp $const1 	%argrw{"wr"}
	assign		___474_sum $const1 	%argrw{"wr"}
	for		$tmp1241 2716 2719 2746 2748 	%argrw{"r"}
	assign		___475_i $const18 	%argrw{"wr"}
	assign		$tmp1239 detail 	%argrw{"wr"}
	le		$tmp1240 ___475_i $tmp1239 	%argrw{"wrr"}
	neq		$tmp1241 $tmp1240 $const18 	%argrw{"wrr"}
	mul		$tmp1242 ___474_fscale ___474_p 	%argrw{"wrr"}
	functioncall	$const9 2741 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1246 $tmp1242 $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1245 $tmp1246 	%argrw{"wr"}
	ge		$tmp1247 $tmp1245 $const11 	%argrw{"wrr"}
	assign		$tmp1248 $tmp1247 	%argrw{"wr"}
	assign		$tmp1244 $tmp1248 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1251 $tmp1242 $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1250 $tmp1251 	%argrw{"wr"}
	ge		$tmp1252 $tmp1250 $const11 	%argrw{"wrr"}
	assign		$tmp1253 $tmp1252 	%argrw{"wr"}
	assign		$tmp1249 $tmp1253 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1256 $tmp1242 $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1255 $tmp1256 	%argrw{"wr"}
	ge		$tmp1257 $tmp1255 $const11 	%argrw{"wrr"}
	assign		$tmp1258 $tmp1257 	%argrw{"wr"}
	assign		$tmp1254 $tmp1258 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1243 $tmp1244 $tmp1249 $tmp1254 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1243 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1259 $tmp1242 $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1259 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		___476_t $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:246
# NOISE_FBM(vector3)
	mul		$tmp1260 ___476_t ___474_amp 	%line{246} %argrw{"wrr"}
	add		___474_sum ___474_sum $tmp1260 	%argrw{"wrr"}
	add		___474_maxamp ___474_maxamp ___474_amp 	%argrw{"wrr"}
	mul		___474_amp ___474_amp roughness 	%argrw{"wrr"}
	mul		___474_fscale ___474_fscale Lacunarity 	%argrw{"wrr"}
	assign		$tmp1261 ___475_i 	%argrw{"wr"}
	add		___475_i ___475_i $const19 	%argrw{"wrr"}
	floor		$tmp1262 detail 	%argrw{"wr"}
	sub		___474_rmd detail $tmp1262 	%argrw{"wrr"}
	neq		$tmp1263 ___474_rmd $const1 	%argrw{"wrr"}
	if		$tmp1263 2787 2793 	%argrw{"r"}
	mul		$tmp1264 ___474_fscale ___474_p 	%argrw{"wrr"}
	functioncall	$const9 2774 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1268 $tmp1264 $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1267 $tmp1268 	%argrw{"wr"}
	ge		$tmp1269 $tmp1267 $const11 	%argrw{"wrr"}
	assign		$tmp1270 $tmp1269 	%argrw{"wr"}
	assign		$tmp1266 $tmp1270 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1273 $tmp1264 $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1272 $tmp1273 	%argrw{"wr"}
	ge		$tmp1274 $tmp1272 $const11 	%argrw{"wrr"}
	assign		$tmp1275 $tmp1274 	%argrw{"wr"}
	assign		$tmp1271 $tmp1275 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1278 $tmp1264 $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1277 $tmp1278 	%argrw{"wr"}
	ge		$tmp1279 $tmp1277 $const11 	%argrw{"wrr"}
	assign		$tmp1280 $tmp1279 	%argrw{"wr"}
	assign		$tmp1276 $tmp1280 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1265 $tmp1266 $tmp1271 $tmp1276 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1265 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1281 $tmp1264 $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1281 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		___477_t $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:246
# NOISE_FBM(vector3)
	mul		$tmp1282 ___477_t ___474_amp 	%line{246} %argrw{"wrr"}
	add		___477_sum2 ___474_sum $tmp1282 	%argrw{"wrr"}
	if		use_normalize 2785 2786 	%argrw{"r"}
	mul		$tmp1283 $const10 ___474_sum 	%argrw{"wrr"}
	div		$tmp1284 $tmp1283 ___474_maxamp 	%argrw{"wrr"}
	add		$tmp1285 $tmp1284 $const10 	%argrw{"wrr"}
	mul		$tmp1286 $const10 ___477_sum2 	%argrw{"wrr"}
	add		$tmp1287 ___474_maxamp ___474_amp 	%argrw{"wrr"}
	div		$tmp1288 $tmp1286 $tmp1287 	%argrw{"wrr"}
	add		$tmp1289 $tmp1288 $const10 	%argrw{"wrr"}
	mix		___606_value $tmp1285 $tmp1289 ___474_rmd 	%argrw{"wrrr"}
	mix		___606_value ___474_sum ___477_sum2 ___474_rmd 	%argrw{"wrrr"}
	return
	if		use_normalize 2791 2792 	%argrw{"r"}
	mul		$tmp1290 $const10 ___474_sum 	%argrw{"wrr"}
	div		$tmp1291 $tmp1290 ___474_maxamp 	%argrw{"wrr"}
	add		___606_value $tmp1291 $const10 	%argrw{"wrr"}
	assign		___606_value ___474_sum 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	eq		$tmp1292 type $const22 	%argrw{"wrr"}
	if		$tmp1292 2885 3055 	%argrw{"r"}
	functioncall	$const23 2884 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:267
# NOISE_HYBRID_MULTI_FRACTAL(vector3)
	assign		___528_p ___606_p 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{267} %argrw{"wr"}
	assign		___528_pwr $const17 	%argrw{"wr"}
	assign		___528_value $const1 	%argrw{"wr"}
	assign		___528_weight $const17 	%argrw{"wr"}
	for		$tmp1298 2803 2811 2843 2845 	%argrw{"r"}
	assign		___529_i $const18 	%argrw{"wr"}
	gt		$tmp1293 ___528_weight $const24 	%argrw{"wrr"}
	neq		$tmp1294 $tmp1293 $const18 	%argrw{"wrr"}
	if		$tmp1294 2810 2810 	%argrw{"r"}
	assign		$tmp1295 detail 	%argrw{"wr"}
	le		$tmp1296 ___529_i $tmp1295 	%argrw{"wrr"}
	neq		$tmp1297 $tmp1296 $const18 	%argrw{"wrr"}
	assign		$tmp1294 $tmp1297 	%argrw{"wr"}
	neq		$tmp1298 $tmp1294 $const18 	%argrw{"wrr"}
	gt		$tmp1299 ___528_weight $const17 	%argrw{"wrr"}
	if		$tmp1299 2814 2814 	%argrw{"r"}
	assign		___528_weight $const17 	%argrw{"wr"}
	functioncall	$const9 2835 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1304 ___528_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1303 $tmp1304 	%argrw{"wr"}
	ge		$tmp1305 $tmp1303 $const11 	%argrw{"wrr"}
	assign		$tmp1306 $tmp1305 	%argrw{"wr"}
	assign		$tmp1302 $tmp1306 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1309 ___528_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1308 $tmp1309 	%argrw{"wr"}
	ge		$tmp1310 $tmp1308 $const11 	%argrw{"wrr"}
	assign		$tmp1311 $tmp1310 	%argrw{"wr"}
	assign		$tmp1307 $tmp1311 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1314 ___528_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1313 $tmp1314 	%argrw{"wr"}
	ge		$tmp1315 $tmp1313 $const11 	%argrw{"wrr"}
	assign		$tmp1316 $tmp1315 	%argrw{"wr"}
	assign		$tmp1312 $tmp1316 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1301 $tmp1302 $tmp1307 $tmp1312 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1301 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1317 ___528_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1317 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1300 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:267
# NOISE_HYBRID_MULTI_FRACTAL(vector3)
	add		$tmp1318 $tmp1300 Offset 	%line{267} %argrw{"wrr"}
	mul		___530_signal $tmp1318 ___528_pwr 	%argrw{"wrr"}
	mul		___528_pwr ___528_pwr roughness 	%argrw{"wrr"}
	mul		$tmp1319 ___528_weight ___530_signal 	%argrw{"wrr"}
	add		___528_value ___528_value $tmp1319 	%argrw{"wrr"}
	mul		$tmp1320 Gain ___530_signal 	%argrw{"wrr"}
	mul		___528_weight ___528_weight $tmp1320 	%argrw{"wrr"}
	mul		___528_p ___528_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp1321 ___529_i 	%argrw{"wr"}
	add		___529_i ___529_i $const19 	%argrw{"wrr"}
	floor		$tmp1322 detail 	%argrw{"wr"}
	sub		___528_rmd detail $tmp1322 	%argrw{"wrr"}
	neq		$tmp1323 ___528_rmd $const1 	%argrw{"wrr"}
	neq		$tmp1324 $tmp1323 $const18 	%argrw{"wrr"}
	if		$tmp1324 2853 2853 	%argrw{"r"}
	gt		$tmp1325 ___528_weight $const24 	%argrw{"wrr"}
	neq		$tmp1326 $tmp1325 $const18 	%argrw{"wrr"}
	assign		$tmp1324 $tmp1326 	%argrw{"wr"}
	if		$tmp1324 2883 2883 	%argrw{"r"}
	gt		$tmp1327 ___528_weight $const17 	%argrw{"wrr"}
	if		$tmp1327 2857 2857 	%argrw{"r"}
	assign		___528_weight $const17 	%argrw{"wr"}
	functioncall	$const9 2878 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1332 ___528_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1331 $tmp1332 	%argrw{"wr"}
	ge		$tmp1333 $tmp1331 $const11 	%argrw{"wrr"}
	assign		$tmp1334 $tmp1333 	%argrw{"wr"}
	assign		$tmp1330 $tmp1334 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1337 ___528_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1336 $tmp1337 	%argrw{"wr"}
	ge		$tmp1338 $tmp1336 $const11 	%argrw{"wrr"}
	assign		$tmp1339 $tmp1338 	%argrw{"wr"}
	assign		$tmp1335 $tmp1339 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1342 ___528_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1341 $tmp1342 	%argrw{"wr"}
	ge		$tmp1343 $tmp1341 $const11 	%argrw{"wrr"}
	assign		$tmp1344 $tmp1343 	%argrw{"wr"}
	assign		$tmp1340 $tmp1344 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1329 $tmp1330 $tmp1335 $tmp1340 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1329 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1345 ___528_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1345 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1328 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:267
# NOISE_HYBRID_MULTI_FRACTAL(vector3)
	add		$tmp1346 $tmp1328 Offset 	%line{267} %argrw{"wrr"}
	mul		___532_signal $tmp1346 ___528_pwr 	%argrw{"wrr"}
	mul		$tmp1347 ___528_rmd ___528_weight 	%argrw{"wrr"}
	mul		$tmp1348 $tmp1347 ___532_signal 	%argrw{"wrr"}
	add		___528_value ___528_value $tmp1348 	%argrw{"wrr"}
	assign		___606_value ___528_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	eq		$tmp1349 type $const25 	%argrw{"wrr"}
	if		$tmp1349 2958 3055 	%argrw{"r"}
	functioncall	$const26 2957 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:274
# NOISE_RIDGED_MULTI_FRACTAL(vector3)
	assign		___546_p ___606_p 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{274} %argrw{"wr"}
	assign		___546_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 2911 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1355 ___546_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1354 $tmp1355 	%argrw{"wr"}
	ge		$tmp1356 $tmp1354 $const11 	%argrw{"wrr"}
	assign		$tmp1357 $tmp1356 	%argrw{"wr"}
	assign		$tmp1353 $tmp1357 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1360 ___546_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1359 $tmp1360 	%argrw{"wr"}
	ge		$tmp1361 $tmp1359 $const11 	%argrw{"wrr"}
	assign		$tmp1362 $tmp1361 	%argrw{"wr"}
	assign		$tmp1358 $tmp1362 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1365 ___546_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1364 $tmp1365 	%argrw{"wr"}
	ge		$tmp1366 $tmp1364 $const11 	%argrw{"wrr"}
	assign		$tmp1367 $tmp1366 	%argrw{"wr"}
	assign		$tmp1363 $tmp1367 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1352 $tmp1353 $tmp1358 $tmp1363 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1352 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1368 ___546_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1368 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1351 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:274
# NOISE_RIDGED_MULTI_FRACTAL(vector3)
	fabs		$tmp1350 $tmp1351 	%line{274} %argrw{"wr"}
	sub		___546_signal Offset $tmp1350 	%argrw{"wrr"}
	mul		___546_signal ___546_signal ___546_signal 	%argrw{"wrr"}
	assign		___546_value ___546_signal 	%argrw{"wr"}
	assign		___546_weight $const17 	%argrw{"wr"}
	for		$tmp1371 2918 2921 2954 2956 	%argrw{"r"}
	assign		___547_i $const19 	%argrw{"wr"}
	assign		$tmp1369 detail 	%argrw{"wr"}
	le		$tmp1370 ___547_i $tmp1369 	%argrw{"wrr"}
	neq		$tmp1371 $tmp1370 $const18 	%argrw{"wrr"}
	mul		___546_p ___546_p Lacunarity 	%argrw{"wrr"}
	mul		$tmp1372 ___546_signal Gain 	%argrw{"wrr"}
	functioncall	$const3 2926 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1373 $tmp1372 $const17 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___546_weight $tmp1373 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:274
# NOISE_RIDGED_MULTI_FRACTAL(vector3)
	functioncall	$const9 2947 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{274} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1379 ___546_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1378 $tmp1379 	%argrw{"wr"}
	ge		$tmp1380 $tmp1378 $const11 	%argrw{"wrr"}
	assign		$tmp1381 $tmp1380 	%argrw{"wr"}
	assign		$tmp1377 $tmp1381 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1384 ___546_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1383 $tmp1384 	%argrw{"wr"}
	ge		$tmp1385 $tmp1383 $const11 	%argrw{"wrr"}
	assign		$tmp1386 $tmp1385 	%argrw{"wr"}
	assign		$tmp1382 $tmp1386 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1389 ___546_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1388 $tmp1389 	%argrw{"wr"}
	ge		$tmp1390 $tmp1388 $const11 	%argrw{"wrr"}
	assign		$tmp1391 $tmp1390 	%argrw{"wr"}
	assign		$tmp1387 $tmp1391 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1376 $tmp1377 $tmp1382 $tmp1387 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1376 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1392 ___546_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1392 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1375 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:274
# NOISE_RIDGED_MULTI_FRACTAL(vector3)
	fabs		$tmp1374 $tmp1375 	%line{274} %argrw{"wr"}
	sub		___546_signal Offset $tmp1374 	%argrw{"wrr"}
	mul		___546_signal ___546_signal ___546_signal 	%argrw{"wrr"}
	mul		___546_signal ___546_signal ___546_weight 	%argrw{"wrr"}
	mul		$tmp1393 ___546_signal ___546_pwr 	%argrw{"wrr"}
	add		___546_value ___546_value $tmp1393 	%argrw{"wrr"}
	mul		___546_pwr ___546_pwr roughness 	%argrw{"wrr"}
	assign		$tmp1394 ___547_i 	%argrw{"wr"}
	add		___547_i ___547_i $const19 	%argrw{"wrr"}
	assign		___606_value ___546_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	eq		$tmp1395 type $const27 	%argrw{"wrr"}
	if		$tmp1395 3052 3055 	%argrw{"r"}
	functioncall	$const28 3051 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:260
# NOISE_HETERO_TERRAIN(vector3)
	assign		___508_p ___606_p 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{260} %argrw{"wr"}
	assign		___508_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 2984 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1400 ___508_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1399 $tmp1400 	%argrw{"wr"}
	ge		$tmp1401 $tmp1399 $const11 	%argrw{"wrr"}
	assign		$tmp1402 $tmp1401 	%argrw{"wr"}
	assign		$tmp1398 $tmp1402 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1405 ___508_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1404 $tmp1405 	%argrw{"wr"}
	ge		$tmp1406 $tmp1404 $const11 	%argrw{"wrr"}
	assign		$tmp1407 $tmp1406 	%argrw{"wr"}
	assign		$tmp1403 $tmp1407 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1410 ___508_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1409 $tmp1410 	%argrw{"wr"}
	ge		$tmp1411 $tmp1409 $const11 	%argrw{"wrr"}
	assign		$tmp1412 $tmp1411 	%argrw{"wr"}
	assign		$tmp1408 $tmp1412 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1397 $tmp1398 $tmp1403 $tmp1408 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1397 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1413 ___508_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1413 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1396 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:260
# NOISE_HETERO_TERRAIN(vector3)
	add		___508_value Offset $tmp1396 	%line{260} %argrw{"wrr"}
	mul		___508_p ___508_p Lacunarity 	%argrw{"wrr"}
	for		$tmp1416 2988 2991 3018 3020 	%argrw{"r"}
	assign		___509_i $const19 	%argrw{"wr"}
	assign		$tmp1414 detail 	%argrw{"wr"}
	le		$tmp1415 ___509_i $tmp1414 	%argrw{"wrr"}
	neq		$tmp1416 $tmp1415 $const18 	%argrw{"wrr"}
	functioncall	$const9 3012 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1421 ___508_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1420 $tmp1421 	%argrw{"wr"}
	ge		$tmp1422 $tmp1420 $const11 	%argrw{"wrr"}
	assign		$tmp1423 $tmp1422 	%argrw{"wr"}
	assign		$tmp1419 $tmp1423 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1426 ___508_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1425 $tmp1426 	%argrw{"wr"}
	ge		$tmp1427 $tmp1425 $const11 	%argrw{"wrr"}
	assign		$tmp1428 $tmp1427 	%argrw{"wr"}
	assign		$tmp1424 $tmp1428 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1431 ___508_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1430 $tmp1431 	%argrw{"wr"}
	ge		$tmp1432 $tmp1430 $const11 	%argrw{"wrr"}
	assign		$tmp1433 $tmp1432 	%argrw{"wr"}
	assign		$tmp1429 $tmp1433 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1418 $tmp1419 $tmp1424 $tmp1429 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1418 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1434 ___508_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1434 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1417 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:260
# NOISE_HETERO_TERRAIN(vector3)
	add		$tmp1435 $tmp1417 Offset 	%line{260} %argrw{"wrr"}
	mul		$tmp1436 $tmp1435 ___508_pwr 	%argrw{"wrr"}
	mul		___510_increment $tmp1436 ___508_value 	%argrw{"wrr"}
	add		___508_value ___508_value ___510_increment 	%argrw{"wrr"}
	mul		___508_pwr ___508_pwr roughness 	%argrw{"wrr"}
	mul		___508_p ___508_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp1437 ___509_i 	%argrw{"wr"}
	add		___509_i ___509_i $const19 	%argrw{"wrr"}
	floor		$tmp1438 detail 	%argrw{"wr"}
	sub		___508_rmd detail $tmp1438 	%argrw{"wrr"}
	neq		$tmp1439 ___508_rmd $const1 	%argrw{"wrr"}
	if		$tmp1439 3050 3050 	%argrw{"r"}
	functioncall	$const9 3045 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1444 ___508_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1443 $tmp1444 	%argrw{"wr"}
	ge		$tmp1445 $tmp1443 $const11 	%argrw{"wrr"}
	assign		$tmp1446 $tmp1445 	%argrw{"wr"}
	assign		$tmp1442 $tmp1446 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1449 ___508_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1448 $tmp1449 	%argrw{"wr"}
	ge		$tmp1450 $tmp1448 $const11 	%argrw{"wrr"}
	assign		$tmp1451 $tmp1450 	%argrw{"wr"}
	assign		$tmp1447 $tmp1451 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1454 ___508_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1453 $tmp1454 	%argrw{"wr"}
	ge		$tmp1455 $tmp1453 $const11 	%argrw{"wrr"}
	assign		$tmp1456 $tmp1455 	%argrw{"wr"}
	assign		$tmp1452 $tmp1456 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1441 $tmp1442 $tmp1447 $tmp1452 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1441 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1457 ___508_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1457 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1440 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:260
# NOISE_HETERO_TERRAIN(vector3)
	add		$tmp1458 $tmp1440 Offset 	%line{260} %argrw{"wrr"}
	mul		$tmp1459 $tmp1458 ___508_pwr 	%argrw{"wrr"}
	mul		___511_increment $tmp1459 ___508_value 	%argrw{"wrr"}
	mul		$tmp1460 ___508_rmd ___511_increment 	%argrw{"wrr"}
	add		___508_value ___508_value $tmp1460 	%argrw{"wrr"}
	assign		___606_value ___508_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	error		$const29 	%argrw{"r"}
	assign		___606_value $const1 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:179
#                 noise_select(p + random_vector3_offset(3.0),
	functioncall	$const38 3066 	%line{179} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:64
#   return vector3(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp1463 $const8 $const36 $const1 	%line{64} %argrw{"wrrr"}
	mul		$tmp1464 $tmp1463 $const7 	%argrw{"wrr"}
	add		$tmp1465 $const7 $tmp1464 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:65
#                  100.0 + noise("hash", seed, 1.0) * 100.0,
	noise		$tmp1466 $const8 $const36 $const17 	%line{65} %argrw{"wrrr"}
	mul		$tmp1467 $tmp1466 $const7 	%argrw{"wrr"}
	add		$tmp1468 $const7 $tmp1467 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:66
#                  100.0 + noise("hash", seed, 2.0) * 100.0);
	noise		$tmp1469 $const8 $const36 $const30 	%line{66} %argrw{"wrrr"}
	mul		$tmp1470 $tmp1469 $const7 	%argrw{"wrr"}
	add		$tmp1471 $const7 $tmp1470 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:64
#   return vector3(100.0 + noise("hash", seed, 0.0) * 100.0,
	point		$tmp1462 $tmp1465 $tmp1468 $tmp1471 	%line{64} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:179
#                 noise_select(p + random_vector3_offset(3.0),
	add		$tmp1472 ___606_p $tmp1462 	%line{179} %argrw{"wrr"}
	functioncall	$const14 3487 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	eq		$tmp1473 type $const15 	%line{81} %argrw{"wrr"}
	if		$tmp1473 3138 3487 	%argrw{"r"}
	functioncall	$const16 3137 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:253
# NOISE_MULTI_FRACTAL(vector3)
	assign		___492_p $tmp1472 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{253} %argrw{"wr"}
	assign		___492_value $const17 	%argrw{"wr"}
	assign		___492_pwr $const17 	%argrw{"wr"}
	for		$tmp1476 3076 3079 3105 3107 	%argrw{"r"}
	assign		___493_i $const18 	%argrw{"wr"}
	assign		$tmp1474 detail 	%argrw{"wr"}
	le		$tmp1475 ___493_i $tmp1474 	%argrw{"wrr"}
	neq		$tmp1476 $tmp1475 $const18 	%argrw{"wrr"}
	functioncall	$const9 3100 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1481 ___492_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1480 $tmp1481 	%argrw{"wr"}
	ge		$tmp1482 $tmp1480 $const11 	%argrw{"wrr"}
	assign		$tmp1483 $tmp1482 	%argrw{"wr"}
	assign		$tmp1479 $tmp1483 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1486 ___492_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1485 $tmp1486 	%argrw{"wr"}
	ge		$tmp1487 $tmp1485 $const11 	%argrw{"wrr"}
	assign		$tmp1488 $tmp1487 	%argrw{"wr"}
	assign		$tmp1484 $tmp1488 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1491 ___492_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1490 $tmp1491 	%argrw{"wr"}
	ge		$tmp1492 $tmp1490 $const11 	%argrw{"wrr"}
	assign		$tmp1493 $tmp1492 	%argrw{"wr"}
	assign		$tmp1489 $tmp1493 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1478 $tmp1479 $tmp1484 $tmp1489 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1478 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1494 ___492_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1494 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1477 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:253
# NOISE_MULTI_FRACTAL(vector3)
	mul		$tmp1495 ___492_pwr $tmp1477 	%line{253} %argrw{"wrr"}
	add		$tmp1496 $tmp1495 $const17 	%argrw{"wrr"}
	mul		___492_value ___492_value $tmp1496 	%argrw{"wrr"}
	mul		___492_pwr ___492_pwr roughness 	%argrw{"wrr"}
	mul		___492_p ___492_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp1497 ___493_i 	%argrw{"wr"}
	add		___493_i ___493_i $const19 	%argrw{"wrr"}
	floor		$tmp1498 detail 	%argrw{"wr"}
	sub		___492_rmd detail $tmp1498 	%argrw{"wrr"}
	neq		$tmp1499 ___492_rmd $const1 	%argrw{"wrr"}
	if		$tmp1499 3136 3136 	%argrw{"r"}
	mul		$tmp1500 ___492_rmd ___492_pwr 	%argrw{"wrr"}
	functioncall	$const9 3133 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1505 ___492_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1504 $tmp1505 	%argrw{"wr"}
	ge		$tmp1506 $tmp1504 $const11 	%argrw{"wrr"}
	assign		$tmp1507 $tmp1506 	%argrw{"wr"}
	assign		$tmp1503 $tmp1507 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1510 ___492_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1509 $tmp1510 	%argrw{"wr"}
	ge		$tmp1511 $tmp1509 $const11 	%argrw{"wrr"}
	assign		$tmp1512 $tmp1511 	%argrw{"wr"}
	assign		$tmp1508 $tmp1512 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1515 ___492_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1514 $tmp1515 	%argrw{"wr"}
	ge		$tmp1516 $tmp1514 $const11 	%argrw{"wrr"}
	assign		$tmp1517 $tmp1516 	%argrw{"wr"}
	assign		$tmp1513 $tmp1517 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1502 $tmp1503 $tmp1508 $tmp1513 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1502 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1518 ___492_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1518 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1501 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:253
# NOISE_MULTI_FRACTAL(vector3)
	mul		$tmp1519 $tmp1500 $tmp1501 	%line{253} %argrw{"wrr"}
	add		$tmp1520 $tmp1519 $const17 	%argrw{"wrr"}
	mul		___492_value ___492_value $tmp1520 	%argrw{"wrr"}
	assign		$tmp1461 ___492_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	eq		$tmp1521 type $const20 	%argrw{"wrr"}
	if		$tmp1521 3226 3487 	%argrw{"r"}
	functioncall	$const21 3225 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:246
# NOISE_FBM(vector3)
	assign		___474_p $tmp1472 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{246} %argrw{"wr"}
	assign		___474_fscale $const17 	%argrw{"wr"}
	assign		___474_amp $const17 	%argrw{"wr"}
	assign		___474_maxamp $const1 	%argrw{"wr"}
	assign		___474_sum $const1 	%argrw{"wr"}
	for		$tmp1524 3148 3151 3178 3180 	%argrw{"r"}
	assign		___475_i $const18 	%argrw{"wr"}
	assign		$tmp1522 detail 	%argrw{"wr"}
	le		$tmp1523 ___475_i $tmp1522 	%argrw{"wrr"}
	neq		$tmp1524 $tmp1523 $const18 	%argrw{"wrr"}
	mul		$tmp1525 ___474_fscale ___474_p 	%argrw{"wrr"}
	functioncall	$const9 3173 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1529 $tmp1525 $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1528 $tmp1529 	%argrw{"wr"}
	ge		$tmp1530 $tmp1528 $const11 	%argrw{"wrr"}
	assign		$tmp1531 $tmp1530 	%argrw{"wr"}
	assign		$tmp1527 $tmp1531 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1534 $tmp1525 $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1533 $tmp1534 	%argrw{"wr"}
	ge		$tmp1535 $tmp1533 $const11 	%argrw{"wrr"}
	assign		$tmp1536 $tmp1535 	%argrw{"wr"}
	assign		$tmp1532 $tmp1536 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1539 $tmp1525 $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1538 $tmp1539 	%argrw{"wr"}
	ge		$tmp1540 $tmp1538 $const11 	%argrw{"wrr"}
	assign		$tmp1541 $tmp1540 	%argrw{"wr"}
	assign		$tmp1537 $tmp1541 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1526 $tmp1527 $tmp1532 $tmp1537 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1526 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1542 $tmp1525 $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1542 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		___476_t $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:246
# NOISE_FBM(vector3)
	mul		$tmp1543 ___476_t ___474_amp 	%line{246} %argrw{"wrr"}
	add		___474_sum ___474_sum $tmp1543 	%argrw{"wrr"}
	add		___474_maxamp ___474_maxamp ___474_amp 	%argrw{"wrr"}
	mul		___474_amp ___474_amp roughness 	%argrw{"wrr"}
	mul		___474_fscale ___474_fscale Lacunarity 	%argrw{"wrr"}
	assign		$tmp1544 ___475_i 	%argrw{"wr"}
	add		___475_i ___475_i $const19 	%argrw{"wrr"}
	floor		$tmp1545 detail 	%argrw{"wr"}
	sub		___474_rmd detail $tmp1545 	%argrw{"wrr"}
	neq		$tmp1546 ___474_rmd $const1 	%argrw{"wrr"}
	if		$tmp1546 3219 3225 	%argrw{"r"}
	mul		$tmp1547 ___474_fscale ___474_p 	%argrw{"wrr"}
	functioncall	$const9 3206 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1551 $tmp1547 $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1550 $tmp1551 	%argrw{"wr"}
	ge		$tmp1552 $tmp1550 $const11 	%argrw{"wrr"}
	assign		$tmp1553 $tmp1552 	%argrw{"wr"}
	assign		$tmp1549 $tmp1553 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1556 $tmp1547 $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1555 $tmp1556 	%argrw{"wr"}
	ge		$tmp1557 $tmp1555 $const11 	%argrw{"wrr"}
	assign		$tmp1558 $tmp1557 	%argrw{"wr"}
	assign		$tmp1554 $tmp1558 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1561 $tmp1547 $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1560 $tmp1561 	%argrw{"wr"}
	ge		$tmp1562 $tmp1560 $const11 	%argrw{"wrr"}
	assign		$tmp1563 $tmp1562 	%argrw{"wr"}
	assign		$tmp1559 $tmp1563 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1548 $tmp1549 $tmp1554 $tmp1559 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1548 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1564 $tmp1547 $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1564 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		___477_t $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:246
# NOISE_FBM(vector3)
	mul		$tmp1565 ___477_t ___474_amp 	%line{246} %argrw{"wrr"}
	add		___477_sum2 ___474_sum $tmp1565 	%argrw{"wrr"}
	if		use_normalize 3217 3218 	%argrw{"r"}
	mul		$tmp1566 $const10 ___474_sum 	%argrw{"wrr"}
	div		$tmp1567 $tmp1566 ___474_maxamp 	%argrw{"wrr"}
	add		$tmp1568 $tmp1567 $const10 	%argrw{"wrr"}
	mul		$tmp1569 $const10 ___477_sum2 	%argrw{"wrr"}
	add		$tmp1570 ___474_maxamp ___474_amp 	%argrw{"wrr"}
	div		$tmp1571 $tmp1569 $tmp1570 	%argrw{"wrr"}
	add		$tmp1572 $tmp1571 $const10 	%argrw{"wrr"}
	mix		$tmp1461 $tmp1568 $tmp1572 ___474_rmd 	%argrw{"wrrr"}
	mix		$tmp1461 ___474_sum ___477_sum2 ___474_rmd 	%argrw{"wrrr"}
	return
	if		use_normalize 3223 3224 	%argrw{"r"}
	mul		$tmp1573 $const10 ___474_sum 	%argrw{"wrr"}
	div		$tmp1574 $tmp1573 ___474_maxamp 	%argrw{"wrr"}
	add		$tmp1461 $tmp1574 $const10 	%argrw{"wrr"}
	assign		$tmp1461 ___474_sum 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	eq		$tmp1575 type $const22 	%argrw{"wrr"}
	if		$tmp1575 3317 3487 	%argrw{"r"}
	functioncall	$const23 3316 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:267
# NOISE_HYBRID_MULTI_FRACTAL(vector3)
	assign		___528_p $tmp1472 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{267} %argrw{"wr"}
	assign		___528_pwr $const17 	%argrw{"wr"}
	assign		___528_value $const1 	%argrw{"wr"}
	assign		___528_weight $const17 	%argrw{"wr"}
	for		$tmp1581 3235 3243 3275 3277 	%argrw{"r"}
	assign		___529_i $const18 	%argrw{"wr"}
	gt		$tmp1576 ___528_weight $const24 	%argrw{"wrr"}
	neq		$tmp1577 $tmp1576 $const18 	%argrw{"wrr"}
	if		$tmp1577 3242 3242 	%argrw{"r"}
	assign		$tmp1578 detail 	%argrw{"wr"}
	le		$tmp1579 ___529_i $tmp1578 	%argrw{"wrr"}
	neq		$tmp1580 $tmp1579 $const18 	%argrw{"wrr"}
	assign		$tmp1577 $tmp1580 	%argrw{"wr"}
	neq		$tmp1581 $tmp1577 $const18 	%argrw{"wrr"}
	gt		$tmp1582 ___528_weight $const17 	%argrw{"wrr"}
	if		$tmp1582 3246 3246 	%argrw{"r"}
	assign		___528_weight $const17 	%argrw{"wr"}
	functioncall	$const9 3267 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1587 ___528_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1586 $tmp1587 	%argrw{"wr"}
	ge		$tmp1588 $tmp1586 $const11 	%argrw{"wrr"}
	assign		$tmp1589 $tmp1588 	%argrw{"wr"}
	assign		$tmp1585 $tmp1589 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1592 ___528_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1591 $tmp1592 	%argrw{"wr"}
	ge		$tmp1593 $tmp1591 $const11 	%argrw{"wrr"}
	assign		$tmp1594 $tmp1593 	%argrw{"wr"}
	assign		$tmp1590 $tmp1594 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1597 ___528_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1596 $tmp1597 	%argrw{"wr"}
	ge		$tmp1598 $tmp1596 $const11 	%argrw{"wrr"}
	assign		$tmp1599 $tmp1598 	%argrw{"wr"}
	assign		$tmp1595 $tmp1599 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1584 $tmp1585 $tmp1590 $tmp1595 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1584 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1600 ___528_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1600 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1583 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:267
# NOISE_HYBRID_MULTI_FRACTAL(vector3)
	add		$tmp1601 $tmp1583 Offset 	%line{267} %argrw{"wrr"}
	mul		___530_signal $tmp1601 ___528_pwr 	%argrw{"wrr"}
	mul		___528_pwr ___528_pwr roughness 	%argrw{"wrr"}
	mul		$tmp1602 ___528_weight ___530_signal 	%argrw{"wrr"}
	add		___528_value ___528_value $tmp1602 	%argrw{"wrr"}
	mul		$tmp1603 Gain ___530_signal 	%argrw{"wrr"}
	mul		___528_weight ___528_weight $tmp1603 	%argrw{"wrr"}
	mul		___528_p ___528_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp1604 ___529_i 	%argrw{"wr"}
	add		___529_i ___529_i $const19 	%argrw{"wrr"}
	floor		$tmp1605 detail 	%argrw{"wr"}
	sub		___528_rmd detail $tmp1605 	%argrw{"wrr"}
	neq		$tmp1606 ___528_rmd $const1 	%argrw{"wrr"}
	neq		$tmp1607 $tmp1606 $const18 	%argrw{"wrr"}
	if		$tmp1607 3285 3285 	%argrw{"r"}
	gt		$tmp1608 ___528_weight $const24 	%argrw{"wrr"}
	neq		$tmp1609 $tmp1608 $const18 	%argrw{"wrr"}
	assign		$tmp1607 $tmp1609 	%argrw{"wr"}
	if		$tmp1607 3315 3315 	%argrw{"r"}
	gt		$tmp1610 ___528_weight $const17 	%argrw{"wrr"}
	if		$tmp1610 3289 3289 	%argrw{"r"}
	assign		___528_weight $const17 	%argrw{"wr"}
	functioncall	$const9 3310 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1615 ___528_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1614 $tmp1615 	%argrw{"wr"}
	ge		$tmp1616 $tmp1614 $const11 	%argrw{"wrr"}
	assign		$tmp1617 $tmp1616 	%argrw{"wr"}
	assign		$tmp1613 $tmp1617 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1620 ___528_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1619 $tmp1620 	%argrw{"wr"}
	ge		$tmp1621 $tmp1619 $const11 	%argrw{"wrr"}
	assign		$tmp1622 $tmp1621 	%argrw{"wr"}
	assign		$tmp1618 $tmp1622 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1625 ___528_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1624 $tmp1625 	%argrw{"wr"}
	ge		$tmp1626 $tmp1624 $const11 	%argrw{"wrr"}
	assign		$tmp1627 $tmp1626 	%argrw{"wr"}
	assign		$tmp1623 $tmp1627 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1612 $tmp1613 $tmp1618 $tmp1623 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1612 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1628 ___528_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1628 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1611 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:267
# NOISE_HYBRID_MULTI_FRACTAL(vector3)
	add		$tmp1629 $tmp1611 Offset 	%line{267} %argrw{"wrr"}
	mul		___532_signal $tmp1629 ___528_pwr 	%argrw{"wrr"}
	mul		$tmp1630 ___528_rmd ___528_weight 	%argrw{"wrr"}
	mul		$tmp1631 $tmp1630 ___532_signal 	%argrw{"wrr"}
	add		___528_value ___528_value $tmp1631 	%argrw{"wrr"}
	assign		$tmp1461 ___528_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	eq		$tmp1632 type $const25 	%argrw{"wrr"}
	if		$tmp1632 3390 3487 	%argrw{"r"}
	functioncall	$const26 3389 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:274
# NOISE_RIDGED_MULTI_FRACTAL(vector3)
	assign		___546_p $tmp1472 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{274} %argrw{"wr"}
	assign		___546_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 3343 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1638 ___546_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1637 $tmp1638 	%argrw{"wr"}
	ge		$tmp1639 $tmp1637 $const11 	%argrw{"wrr"}
	assign		$tmp1640 $tmp1639 	%argrw{"wr"}
	assign		$tmp1636 $tmp1640 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1643 ___546_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1642 $tmp1643 	%argrw{"wr"}
	ge		$tmp1644 $tmp1642 $const11 	%argrw{"wrr"}
	assign		$tmp1645 $tmp1644 	%argrw{"wr"}
	assign		$tmp1641 $tmp1645 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1648 ___546_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1647 $tmp1648 	%argrw{"wr"}
	ge		$tmp1649 $tmp1647 $const11 	%argrw{"wrr"}
	assign		$tmp1650 $tmp1649 	%argrw{"wr"}
	assign		$tmp1646 $tmp1650 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1635 $tmp1636 $tmp1641 $tmp1646 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1635 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1651 ___546_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1651 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1634 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:274
# NOISE_RIDGED_MULTI_FRACTAL(vector3)
	fabs		$tmp1633 $tmp1634 	%line{274} %argrw{"wr"}
	sub		___546_signal Offset $tmp1633 	%argrw{"wrr"}
	mul		___546_signal ___546_signal ___546_signal 	%argrw{"wrr"}
	assign		___546_value ___546_signal 	%argrw{"wr"}
	assign		___546_weight $const17 	%argrw{"wr"}
	for		$tmp1654 3350 3353 3386 3388 	%argrw{"r"}
	assign		___547_i $const19 	%argrw{"wr"}
	assign		$tmp1652 detail 	%argrw{"wr"}
	le		$tmp1653 ___547_i $tmp1652 	%argrw{"wrr"}
	neq		$tmp1654 $tmp1653 $const18 	%argrw{"wrr"}
	mul		___546_p ___546_p Lacunarity 	%argrw{"wrr"}
	mul		$tmp1655 ___546_signal Gain 	%argrw{"wrr"}
	functioncall	$const3 3358 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1656 $tmp1655 $const17 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___546_weight $tmp1656 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:274
# NOISE_RIDGED_MULTI_FRACTAL(vector3)
	functioncall	$const9 3379 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{274} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1662 ___546_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1661 $tmp1662 	%argrw{"wr"}
	ge		$tmp1663 $tmp1661 $const11 	%argrw{"wrr"}
	assign		$tmp1664 $tmp1663 	%argrw{"wr"}
	assign		$tmp1660 $tmp1664 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1667 ___546_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1666 $tmp1667 	%argrw{"wr"}
	ge		$tmp1668 $tmp1666 $const11 	%argrw{"wrr"}
	assign		$tmp1669 $tmp1668 	%argrw{"wr"}
	assign		$tmp1665 $tmp1669 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1672 ___546_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1671 $tmp1672 	%argrw{"wr"}
	ge		$tmp1673 $tmp1671 $const11 	%argrw{"wrr"}
	assign		$tmp1674 $tmp1673 	%argrw{"wr"}
	assign		$tmp1670 $tmp1674 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1659 $tmp1660 $tmp1665 $tmp1670 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1659 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1675 ___546_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1675 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1658 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:274
# NOISE_RIDGED_MULTI_FRACTAL(vector3)
	fabs		$tmp1657 $tmp1658 	%line{274} %argrw{"wr"}
	sub		___546_signal Offset $tmp1657 	%argrw{"wrr"}
	mul		___546_signal ___546_signal ___546_signal 	%argrw{"wrr"}
	mul		___546_signal ___546_signal ___546_weight 	%argrw{"wrr"}
	mul		$tmp1676 ___546_signal ___546_pwr 	%argrw{"wrr"}
	add		___546_value ___546_value $tmp1676 	%argrw{"wrr"}
	mul		___546_pwr ___546_pwr roughness 	%argrw{"wrr"}
	assign		$tmp1677 ___547_i 	%argrw{"wr"}
	add		___547_i ___547_i $const19 	%argrw{"wrr"}
	assign		$tmp1461 ___546_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	eq		$tmp1678 type $const27 	%argrw{"wrr"}
	if		$tmp1678 3484 3487 	%argrw{"r"}
	functioncall	$const28 3483 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:260
# NOISE_HETERO_TERRAIN(vector3)
	assign		___508_p $tmp1472 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{260} %argrw{"wr"}
	assign		___508_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 3416 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1683 ___508_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1682 $tmp1683 	%argrw{"wr"}
	ge		$tmp1684 $tmp1682 $const11 	%argrw{"wrr"}
	assign		$tmp1685 $tmp1684 	%argrw{"wr"}
	assign		$tmp1681 $tmp1685 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1688 ___508_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1687 $tmp1688 	%argrw{"wr"}
	ge		$tmp1689 $tmp1687 $const11 	%argrw{"wrr"}
	assign		$tmp1690 $tmp1689 	%argrw{"wr"}
	assign		$tmp1686 $tmp1690 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1693 ___508_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1692 $tmp1693 	%argrw{"wr"}
	ge		$tmp1694 $tmp1692 $const11 	%argrw{"wrr"}
	assign		$tmp1695 $tmp1694 	%argrw{"wr"}
	assign		$tmp1691 $tmp1695 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1680 $tmp1681 $tmp1686 $tmp1691 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1680 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1696 ___508_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1696 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1679 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:260
# NOISE_HETERO_TERRAIN(vector3)
	add		___508_value Offset $tmp1679 	%line{260} %argrw{"wrr"}
	mul		___508_p ___508_p Lacunarity 	%argrw{"wrr"}
	for		$tmp1699 3420 3423 3450 3452 	%argrw{"r"}
	assign		___509_i $const19 	%argrw{"wr"}
	assign		$tmp1697 detail 	%argrw{"wr"}
	le		$tmp1698 ___509_i $tmp1697 	%argrw{"wrr"}
	neq		$tmp1699 $tmp1698 $const18 	%argrw{"wrr"}
	functioncall	$const9 3444 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1704 ___508_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1703 $tmp1704 	%argrw{"wr"}
	ge		$tmp1705 $tmp1703 $const11 	%argrw{"wrr"}
	assign		$tmp1706 $tmp1705 	%argrw{"wr"}
	assign		$tmp1702 $tmp1706 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1709 ___508_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1708 $tmp1709 	%argrw{"wr"}
	ge		$tmp1710 $tmp1708 $const11 	%argrw{"wrr"}
	assign		$tmp1711 $tmp1710 	%argrw{"wr"}
	assign		$tmp1707 $tmp1711 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1714 ___508_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1713 $tmp1714 	%argrw{"wr"}
	ge		$tmp1715 $tmp1713 $const11 	%argrw{"wrr"}
	assign		$tmp1716 $tmp1715 	%argrw{"wr"}
	assign		$tmp1712 $tmp1716 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1701 $tmp1702 $tmp1707 $tmp1712 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1701 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1717 ___508_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1717 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1700 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:260
# NOISE_HETERO_TERRAIN(vector3)
	add		$tmp1718 $tmp1700 Offset 	%line{260} %argrw{"wrr"}
	mul		$tmp1719 $tmp1718 ___508_pwr 	%argrw{"wrr"}
	mul		___510_increment $tmp1719 ___508_value 	%argrw{"wrr"}
	add		___508_value ___508_value ___510_increment 	%argrw{"wrr"}
	mul		___508_pwr ___508_pwr roughness 	%argrw{"wrr"}
	mul		___508_p ___508_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp1720 ___509_i 	%argrw{"wr"}
	add		___509_i ___509_i $const19 	%argrw{"wrr"}
	floor		$tmp1721 detail 	%argrw{"wr"}
	sub		___508_rmd detail $tmp1721 	%argrw{"wrr"}
	neq		$tmp1722 ___508_rmd $const1 	%argrw{"wrr"}
	if		$tmp1722 3482 3482 	%argrw{"r"}
	functioncall	$const9 3477 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1727 ___508_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1726 $tmp1727 	%argrw{"wr"}
	ge		$tmp1728 $tmp1726 $const11 	%argrw{"wrr"}
	assign		$tmp1729 $tmp1728 	%argrw{"wr"}
	assign		$tmp1725 $tmp1729 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1732 ___508_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1731 $tmp1732 	%argrw{"wr"}
	ge		$tmp1733 $tmp1731 $const11 	%argrw{"wrr"}
	assign		$tmp1734 $tmp1733 	%argrw{"wr"}
	assign		$tmp1730 $tmp1734 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1737 ___508_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1736 $tmp1737 	%argrw{"wr"}
	ge		$tmp1738 $tmp1736 $const11 	%argrw{"wrr"}
	assign		$tmp1739 $tmp1738 	%argrw{"wr"}
	assign		$tmp1735 $tmp1739 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1724 $tmp1725 $tmp1730 $tmp1735 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1724 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1740 ___508_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1740 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1723 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:260
# NOISE_HETERO_TERRAIN(vector3)
	add		$tmp1741 $tmp1723 Offset 	%line{260} %argrw{"wrr"}
	mul		$tmp1742 $tmp1741 ___508_pwr 	%argrw{"wrr"}
	mul		___511_increment $tmp1742 ___508_value 	%argrw{"wrr"}
	mul		$tmp1743 ___508_rmd ___511_increment 	%argrw{"wrr"}
	add		___508_value ___508_value $tmp1743 	%argrw{"wrr"}
	assign		$tmp1461 ___508_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	error		$const29 	%argrw{"r"}
	assign		$tmp1461 $const1 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:187
#                 noise_select(p + random_vector3_offset(4.0),
	functioncall	$const38 3498 	%line{187} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:64
#   return vector3(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp1746 $const8 $const40 $const1 	%line{64} %argrw{"wrrr"}
	mul		$tmp1747 $tmp1746 $const7 	%argrw{"wrr"}
	add		$tmp1748 $const7 $tmp1747 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:65
#                  100.0 + noise("hash", seed, 1.0) * 100.0,
	noise		$tmp1749 $const8 $const40 $const17 	%line{65} %argrw{"wrrr"}
	mul		$tmp1750 $tmp1749 $const7 	%argrw{"wrr"}
	add		$tmp1751 $const7 $tmp1750 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:66
#                  100.0 + noise("hash", seed, 2.0) * 100.0);
	noise		$tmp1752 $const8 $const40 $const30 	%line{66} %argrw{"wrrr"}
	mul		$tmp1753 $tmp1752 $const7 	%argrw{"wrr"}
	add		$tmp1754 $const7 $tmp1753 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:64
#   return vector3(100.0 + noise("hash", seed, 0.0) * 100.0,
	point		$tmp1745 $tmp1748 $tmp1751 $tmp1754 	%line{64} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:187
#                 noise_select(p + random_vector3_offset(4.0),
	add		$tmp1755 ___606_p $tmp1745 	%line{187} %argrw{"wrr"}
	functioncall	$const14 3919 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	eq		$tmp1756 type $const15 	%line{81} %argrw{"wrr"}
	if		$tmp1756 3570 3919 	%argrw{"r"}
	functioncall	$const16 3569 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:253
# NOISE_MULTI_FRACTAL(vector3)
	assign		___492_p $tmp1755 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{253} %argrw{"wr"}
	assign		___492_value $const17 	%argrw{"wr"}
	assign		___492_pwr $const17 	%argrw{"wr"}
	for		$tmp1759 3508 3511 3537 3539 	%argrw{"r"}
	assign		___493_i $const18 	%argrw{"wr"}
	assign		$tmp1757 detail 	%argrw{"wr"}
	le		$tmp1758 ___493_i $tmp1757 	%argrw{"wrr"}
	neq		$tmp1759 $tmp1758 $const18 	%argrw{"wrr"}
	functioncall	$const9 3532 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1764 ___492_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1763 $tmp1764 	%argrw{"wr"}
	ge		$tmp1765 $tmp1763 $const11 	%argrw{"wrr"}
	assign		$tmp1766 $tmp1765 	%argrw{"wr"}
	assign		$tmp1762 $tmp1766 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1769 ___492_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1768 $tmp1769 	%argrw{"wr"}
	ge		$tmp1770 $tmp1768 $const11 	%argrw{"wrr"}
	assign		$tmp1771 $tmp1770 	%argrw{"wr"}
	assign		$tmp1767 $tmp1771 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1774 ___492_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1773 $tmp1774 	%argrw{"wr"}
	ge		$tmp1775 $tmp1773 $const11 	%argrw{"wrr"}
	assign		$tmp1776 $tmp1775 	%argrw{"wr"}
	assign		$tmp1772 $tmp1776 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1761 $tmp1762 $tmp1767 $tmp1772 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1761 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1777 ___492_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1777 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1760 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:253
# NOISE_MULTI_FRACTAL(vector3)
	mul		$tmp1778 ___492_pwr $tmp1760 	%line{253} %argrw{"wrr"}
	add		$tmp1779 $tmp1778 $const17 	%argrw{"wrr"}
	mul		___492_value ___492_value $tmp1779 	%argrw{"wrr"}
	mul		___492_pwr ___492_pwr roughness 	%argrw{"wrr"}
	mul		___492_p ___492_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp1780 ___493_i 	%argrw{"wr"}
	add		___493_i ___493_i $const19 	%argrw{"wrr"}
	floor		$tmp1781 detail 	%argrw{"wr"}
	sub		___492_rmd detail $tmp1781 	%argrw{"wrr"}
	neq		$tmp1782 ___492_rmd $const1 	%argrw{"wrr"}
	if		$tmp1782 3568 3568 	%argrw{"r"}
	mul		$tmp1783 ___492_rmd ___492_pwr 	%argrw{"wrr"}
	functioncall	$const9 3565 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1788 ___492_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1787 $tmp1788 	%argrw{"wr"}
	ge		$tmp1789 $tmp1787 $const11 	%argrw{"wrr"}
	assign		$tmp1790 $tmp1789 	%argrw{"wr"}
	assign		$tmp1786 $tmp1790 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1793 ___492_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1792 $tmp1793 	%argrw{"wr"}
	ge		$tmp1794 $tmp1792 $const11 	%argrw{"wrr"}
	assign		$tmp1795 $tmp1794 	%argrw{"wr"}
	assign		$tmp1791 $tmp1795 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1798 ___492_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1797 $tmp1798 	%argrw{"wr"}
	ge		$tmp1799 $tmp1797 $const11 	%argrw{"wrr"}
	assign		$tmp1800 $tmp1799 	%argrw{"wr"}
	assign		$tmp1796 $tmp1800 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1785 $tmp1786 $tmp1791 $tmp1796 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1785 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1801 ___492_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1801 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1784 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:253
# NOISE_MULTI_FRACTAL(vector3)
	mul		$tmp1802 $tmp1783 $tmp1784 	%line{253} %argrw{"wrr"}
	add		$tmp1803 $tmp1802 $const17 	%argrw{"wrr"}
	mul		___492_value ___492_value $tmp1803 	%argrw{"wrr"}
	assign		$tmp1744 ___492_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	eq		$tmp1804 type $const20 	%argrw{"wrr"}
	if		$tmp1804 3658 3919 	%argrw{"r"}
	functioncall	$const21 3657 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:246
# NOISE_FBM(vector3)
	assign		___474_p $tmp1755 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{246} %argrw{"wr"}
	assign		___474_fscale $const17 	%argrw{"wr"}
	assign		___474_amp $const17 	%argrw{"wr"}
	assign		___474_maxamp $const1 	%argrw{"wr"}
	assign		___474_sum $const1 	%argrw{"wr"}
	for		$tmp1807 3580 3583 3610 3612 	%argrw{"r"}
	assign		___475_i $const18 	%argrw{"wr"}
	assign		$tmp1805 detail 	%argrw{"wr"}
	le		$tmp1806 ___475_i $tmp1805 	%argrw{"wrr"}
	neq		$tmp1807 $tmp1806 $const18 	%argrw{"wrr"}
	mul		$tmp1808 ___474_fscale ___474_p 	%argrw{"wrr"}
	functioncall	$const9 3605 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1812 $tmp1808 $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1811 $tmp1812 	%argrw{"wr"}
	ge		$tmp1813 $tmp1811 $const11 	%argrw{"wrr"}
	assign		$tmp1814 $tmp1813 	%argrw{"wr"}
	assign		$tmp1810 $tmp1814 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1817 $tmp1808 $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1816 $tmp1817 	%argrw{"wr"}
	ge		$tmp1818 $tmp1816 $const11 	%argrw{"wrr"}
	assign		$tmp1819 $tmp1818 	%argrw{"wr"}
	assign		$tmp1815 $tmp1819 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1822 $tmp1808 $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1821 $tmp1822 	%argrw{"wr"}
	ge		$tmp1823 $tmp1821 $const11 	%argrw{"wrr"}
	assign		$tmp1824 $tmp1823 	%argrw{"wr"}
	assign		$tmp1820 $tmp1824 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1809 $tmp1810 $tmp1815 $tmp1820 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1809 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1825 $tmp1808 $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1825 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		___476_t $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:246
# NOISE_FBM(vector3)
	mul		$tmp1826 ___476_t ___474_amp 	%line{246} %argrw{"wrr"}
	add		___474_sum ___474_sum $tmp1826 	%argrw{"wrr"}
	add		___474_maxamp ___474_maxamp ___474_amp 	%argrw{"wrr"}
	mul		___474_amp ___474_amp roughness 	%argrw{"wrr"}
	mul		___474_fscale ___474_fscale Lacunarity 	%argrw{"wrr"}
	assign		$tmp1827 ___475_i 	%argrw{"wr"}
	add		___475_i ___475_i $const19 	%argrw{"wrr"}
	floor		$tmp1828 detail 	%argrw{"wr"}
	sub		___474_rmd detail $tmp1828 	%argrw{"wrr"}
	neq		$tmp1829 ___474_rmd $const1 	%argrw{"wrr"}
	if		$tmp1829 3651 3657 	%argrw{"r"}
	mul		$tmp1830 ___474_fscale ___474_p 	%argrw{"wrr"}
	functioncall	$const9 3638 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1834 $tmp1830 $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1833 $tmp1834 	%argrw{"wr"}
	ge		$tmp1835 $tmp1833 $const11 	%argrw{"wrr"}
	assign		$tmp1836 $tmp1835 	%argrw{"wr"}
	assign		$tmp1832 $tmp1836 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1839 $tmp1830 $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1838 $tmp1839 	%argrw{"wr"}
	ge		$tmp1840 $tmp1838 $const11 	%argrw{"wrr"}
	assign		$tmp1841 $tmp1840 	%argrw{"wr"}
	assign		$tmp1837 $tmp1841 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1844 $tmp1830 $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1843 $tmp1844 	%argrw{"wr"}
	ge		$tmp1845 $tmp1843 $const11 	%argrw{"wrr"}
	assign		$tmp1846 $tmp1845 	%argrw{"wr"}
	assign		$tmp1842 $tmp1846 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1831 $tmp1832 $tmp1837 $tmp1842 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1831 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1847 $tmp1830 $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1847 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		___477_t $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:246
# NOISE_FBM(vector3)
	mul		$tmp1848 ___477_t ___474_amp 	%line{246} %argrw{"wrr"}
	add		___477_sum2 ___474_sum $tmp1848 	%argrw{"wrr"}
	if		use_normalize 3649 3650 	%argrw{"r"}
	mul		$tmp1849 $const10 ___474_sum 	%argrw{"wrr"}
	div		$tmp1850 $tmp1849 ___474_maxamp 	%argrw{"wrr"}
	add		$tmp1851 $tmp1850 $const10 	%argrw{"wrr"}
	mul		$tmp1852 $const10 ___477_sum2 	%argrw{"wrr"}
	add		$tmp1853 ___474_maxamp ___474_amp 	%argrw{"wrr"}
	div		$tmp1854 $tmp1852 $tmp1853 	%argrw{"wrr"}
	add		$tmp1855 $tmp1854 $const10 	%argrw{"wrr"}
	mix		$tmp1744 $tmp1851 $tmp1855 ___474_rmd 	%argrw{"wrrr"}
	mix		$tmp1744 ___474_sum ___477_sum2 ___474_rmd 	%argrw{"wrrr"}
	return
	if		use_normalize 3655 3656 	%argrw{"r"}
	mul		$tmp1856 $const10 ___474_sum 	%argrw{"wrr"}
	div		$tmp1857 $tmp1856 ___474_maxamp 	%argrw{"wrr"}
	add		$tmp1744 $tmp1857 $const10 	%argrw{"wrr"}
	assign		$tmp1744 ___474_sum 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	eq		$tmp1858 type $const22 	%argrw{"wrr"}
	if		$tmp1858 3749 3919 	%argrw{"r"}
	functioncall	$const23 3748 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:267
# NOISE_HYBRID_MULTI_FRACTAL(vector3)
	assign		___528_p $tmp1755 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{267} %argrw{"wr"}
	assign		___528_pwr $const17 	%argrw{"wr"}
	assign		___528_value $const1 	%argrw{"wr"}
	assign		___528_weight $const17 	%argrw{"wr"}
	for		$tmp1864 3667 3675 3707 3709 	%argrw{"r"}
	assign		___529_i $const18 	%argrw{"wr"}
	gt		$tmp1859 ___528_weight $const24 	%argrw{"wrr"}
	neq		$tmp1860 $tmp1859 $const18 	%argrw{"wrr"}
	if		$tmp1860 3674 3674 	%argrw{"r"}
	assign		$tmp1861 detail 	%argrw{"wr"}
	le		$tmp1862 ___529_i $tmp1861 	%argrw{"wrr"}
	neq		$tmp1863 $tmp1862 $const18 	%argrw{"wrr"}
	assign		$tmp1860 $tmp1863 	%argrw{"wr"}
	neq		$tmp1864 $tmp1860 $const18 	%argrw{"wrr"}
	gt		$tmp1865 ___528_weight $const17 	%argrw{"wrr"}
	if		$tmp1865 3678 3678 	%argrw{"r"}
	assign		___528_weight $const17 	%argrw{"wr"}
	functioncall	$const9 3699 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1870 ___528_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1869 $tmp1870 	%argrw{"wr"}
	ge		$tmp1871 $tmp1869 $const11 	%argrw{"wrr"}
	assign		$tmp1872 $tmp1871 	%argrw{"wr"}
	assign		$tmp1868 $tmp1872 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1875 ___528_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1874 $tmp1875 	%argrw{"wr"}
	ge		$tmp1876 $tmp1874 $const11 	%argrw{"wrr"}
	assign		$tmp1877 $tmp1876 	%argrw{"wr"}
	assign		$tmp1873 $tmp1877 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1880 ___528_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1879 $tmp1880 	%argrw{"wr"}
	ge		$tmp1881 $tmp1879 $const11 	%argrw{"wrr"}
	assign		$tmp1882 $tmp1881 	%argrw{"wr"}
	assign		$tmp1878 $tmp1882 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1867 $tmp1868 $tmp1873 $tmp1878 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1867 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1883 ___528_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1883 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1866 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:267
# NOISE_HYBRID_MULTI_FRACTAL(vector3)
	add		$tmp1884 $tmp1866 Offset 	%line{267} %argrw{"wrr"}
	mul		___530_signal $tmp1884 ___528_pwr 	%argrw{"wrr"}
	mul		___528_pwr ___528_pwr roughness 	%argrw{"wrr"}
	mul		$tmp1885 ___528_weight ___530_signal 	%argrw{"wrr"}
	add		___528_value ___528_value $tmp1885 	%argrw{"wrr"}
	mul		$tmp1886 Gain ___530_signal 	%argrw{"wrr"}
	mul		___528_weight ___528_weight $tmp1886 	%argrw{"wrr"}
	mul		___528_p ___528_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp1887 ___529_i 	%argrw{"wr"}
	add		___529_i ___529_i $const19 	%argrw{"wrr"}
	floor		$tmp1888 detail 	%argrw{"wr"}
	sub		___528_rmd detail $tmp1888 	%argrw{"wrr"}
	neq		$tmp1889 ___528_rmd $const1 	%argrw{"wrr"}
	neq		$tmp1890 $tmp1889 $const18 	%argrw{"wrr"}
	if		$tmp1890 3717 3717 	%argrw{"r"}
	gt		$tmp1891 ___528_weight $const24 	%argrw{"wrr"}
	neq		$tmp1892 $tmp1891 $const18 	%argrw{"wrr"}
	assign		$tmp1890 $tmp1892 	%argrw{"wr"}
	if		$tmp1890 3747 3747 	%argrw{"r"}
	gt		$tmp1893 ___528_weight $const17 	%argrw{"wrr"}
	if		$tmp1893 3721 3721 	%argrw{"r"}
	assign		___528_weight $const17 	%argrw{"wr"}
	functioncall	$const9 3742 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1898 ___528_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1897 $tmp1898 	%argrw{"wr"}
	ge		$tmp1899 $tmp1897 $const11 	%argrw{"wrr"}
	assign		$tmp1900 $tmp1899 	%argrw{"wr"}
	assign		$tmp1896 $tmp1900 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1903 ___528_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1902 $tmp1903 	%argrw{"wr"}
	ge		$tmp1904 $tmp1902 $const11 	%argrw{"wrr"}
	assign		$tmp1905 $tmp1904 	%argrw{"wr"}
	assign		$tmp1901 $tmp1905 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1908 ___528_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1907 $tmp1908 	%argrw{"wr"}
	ge		$tmp1909 $tmp1907 $const11 	%argrw{"wrr"}
	assign		$tmp1910 $tmp1909 	%argrw{"wr"}
	assign		$tmp1906 $tmp1910 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1895 $tmp1896 $tmp1901 $tmp1906 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1895 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1911 ___528_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1911 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1894 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:267
# NOISE_HYBRID_MULTI_FRACTAL(vector3)
	add		$tmp1912 $tmp1894 Offset 	%line{267} %argrw{"wrr"}
	mul		___532_signal $tmp1912 ___528_pwr 	%argrw{"wrr"}
	mul		$tmp1913 ___528_rmd ___528_weight 	%argrw{"wrr"}
	mul		$tmp1914 $tmp1913 ___532_signal 	%argrw{"wrr"}
	add		___528_value ___528_value $tmp1914 	%argrw{"wrr"}
	assign		$tmp1744 ___528_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	eq		$tmp1915 type $const25 	%argrw{"wrr"}
	if		$tmp1915 3822 3919 	%argrw{"r"}
	functioncall	$const26 3821 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:274
# NOISE_RIDGED_MULTI_FRACTAL(vector3)
	assign		___546_p $tmp1755 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{274} %argrw{"wr"}
	assign		___546_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 3775 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1921 ___546_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1920 $tmp1921 	%argrw{"wr"}
	ge		$tmp1922 $tmp1920 $const11 	%argrw{"wrr"}
	assign		$tmp1923 $tmp1922 	%argrw{"wr"}
	assign		$tmp1919 $tmp1923 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1926 ___546_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1925 $tmp1926 	%argrw{"wr"}
	ge		$tmp1927 $tmp1925 $const11 	%argrw{"wrr"}
	assign		$tmp1928 $tmp1927 	%argrw{"wr"}
	assign		$tmp1924 $tmp1928 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1931 ___546_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1930 $tmp1931 	%argrw{"wr"}
	ge		$tmp1932 $tmp1930 $const11 	%argrw{"wrr"}
	assign		$tmp1933 $tmp1932 	%argrw{"wr"}
	assign		$tmp1929 $tmp1933 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1918 $tmp1919 $tmp1924 $tmp1929 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1918 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1934 ___546_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1934 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1917 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:274
# NOISE_RIDGED_MULTI_FRACTAL(vector3)
	fabs		$tmp1916 $tmp1917 	%line{274} %argrw{"wr"}
	sub		___546_signal Offset $tmp1916 	%argrw{"wrr"}
	mul		___546_signal ___546_signal ___546_signal 	%argrw{"wrr"}
	assign		___546_value ___546_signal 	%argrw{"wr"}
	assign		___546_weight $const17 	%argrw{"wr"}
	for		$tmp1937 3782 3785 3818 3820 	%argrw{"r"}
	assign		___547_i $const19 	%argrw{"wr"}
	assign		$tmp1935 detail 	%argrw{"wr"}
	le		$tmp1936 ___547_i $tmp1935 	%argrw{"wrr"}
	neq		$tmp1937 $tmp1936 $const18 	%argrw{"wrr"}
	mul		___546_p ___546_p Lacunarity 	%argrw{"wrr"}
	mul		$tmp1938 ___546_signal Gain 	%argrw{"wrr"}
	functioncall	$const3 3790 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1939 $tmp1938 $const17 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___546_weight $tmp1939 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:274
# NOISE_RIDGED_MULTI_FRACTAL(vector3)
	functioncall	$const9 3811 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{274} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1945 ___546_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1944 $tmp1945 	%argrw{"wr"}
	ge		$tmp1946 $tmp1944 $const11 	%argrw{"wrr"}
	assign		$tmp1947 $tmp1946 	%argrw{"wr"}
	assign		$tmp1943 $tmp1947 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1950 ___546_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1949 $tmp1950 	%argrw{"wr"}
	ge		$tmp1951 $tmp1949 $const11 	%argrw{"wrr"}
	assign		$tmp1952 $tmp1951 	%argrw{"wr"}
	assign		$tmp1948 $tmp1952 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1955 ___546_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1954 $tmp1955 	%argrw{"wr"}
	ge		$tmp1956 $tmp1954 $const11 	%argrw{"wrr"}
	assign		$tmp1957 $tmp1956 	%argrw{"wr"}
	assign		$tmp1953 $tmp1957 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1942 $tmp1943 $tmp1948 $tmp1953 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1942 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1958 ___546_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1958 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1941 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:274
# NOISE_RIDGED_MULTI_FRACTAL(vector3)
	fabs		$tmp1940 $tmp1941 	%line{274} %argrw{"wr"}
	sub		___546_signal Offset $tmp1940 	%argrw{"wrr"}
	mul		___546_signal ___546_signal ___546_signal 	%argrw{"wrr"}
	mul		___546_signal ___546_signal ___546_weight 	%argrw{"wrr"}
	mul		$tmp1959 ___546_signal ___546_pwr 	%argrw{"wrr"}
	add		___546_value ___546_value $tmp1959 	%argrw{"wrr"}
	mul		___546_pwr ___546_pwr roughness 	%argrw{"wrr"}
	assign		$tmp1960 ___547_i 	%argrw{"wr"}
	add		___547_i ___547_i $const19 	%argrw{"wrr"}
	assign		$tmp1744 ___546_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	eq		$tmp1961 type $const27 	%argrw{"wrr"}
	if		$tmp1961 3916 3919 	%argrw{"r"}
	functioncall	$const28 3915 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:260
# NOISE_HETERO_TERRAIN(vector3)
	assign		___508_p $tmp1755 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{260} %argrw{"wr"}
	assign		___508_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 3848 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1966 ___508_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1965 $tmp1966 	%argrw{"wr"}
	ge		$tmp1967 $tmp1965 $const11 	%argrw{"wrr"}
	assign		$tmp1968 $tmp1967 	%argrw{"wr"}
	assign		$tmp1964 $tmp1968 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1971 ___508_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1970 $tmp1971 	%argrw{"wr"}
	ge		$tmp1972 $tmp1970 $const11 	%argrw{"wrr"}
	assign		$tmp1973 $tmp1972 	%argrw{"wr"}
	assign		$tmp1969 $tmp1973 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1976 ___508_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1975 $tmp1976 	%argrw{"wr"}
	ge		$tmp1977 $tmp1975 $const11 	%argrw{"wrr"}
	assign		$tmp1978 $tmp1977 	%argrw{"wr"}
	assign		$tmp1974 $tmp1978 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1963 $tmp1964 $tmp1969 $tmp1974 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1963 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp1979 ___508_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp1979 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1962 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:260
# NOISE_HETERO_TERRAIN(vector3)
	add		___508_value Offset $tmp1962 	%line{260} %argrw{"wrr"}
	mul		___508_p ___508_p Lacunarity 	%argrw{"wrr"}
	for		$tmp1982 3852 3855 3882 3884 	%argrw{"r"}
	assign		___509_i $const19 	%argrw{"wr"}
	assign		$tmp1980 detail 	%argrw{"wr"}
	le		$tmp1981 ___509_i $tmp1980 	%argrw{"wrr"}
	neq		$tmp1982 $tmp1981 $const18 	%argrw{"wrr"}
	functioncall	$const9 3876 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp1987 ___508_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp1986 $tmp1987 	%argrw{"wr"}
	ge		$tmp1988 $tmp1986 $const11 	%argrw{"wrr"}
	assign		$tmp1989 $tmp1988 	%argrw{"wr"}
	assign		$tmp1985 $tmp1989 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp1992 ___508_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp1991 $tmp1992 	%argrw{"wr"}
	ge		$tmp1993 $tmp1991 $const11 	%argrw{"wrr"}
	assign		$tmp1994 $tmp1993 	%argrw{"wr"}
	assign		$tmp1990 $tmp1994 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp1997 ___508_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp1996 $tmp1997 	%argrw{"wr"}
	ge		$tmp1998 $tmp1996 $const11 	%argrw{"wrr"}
	assign		$tmp1999 $tmp1998 	%argrw{"wr"}
	assign		$tmp1995 $tmp1999 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp1984 $tmp1985 $tmp1990 $tmp1995 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp1984 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp2000 ___508_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp2000 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp1983 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:260
# NOISE_HETERO_TERRAIN(vector3)
	add		$tmp2001 $tmp1983 Offset 	%line{260} %argrw{"wrr"}
	mul		$tmp2002 $tmp2001 ___508_pwr 	%argrw{"wrr"}
	mul		___510_increment $tmp2002 ___508_value 	%argrw{"wrr"}
	add		___508_value ___508_value ___510_increment 	%argrw{"wrr"}
	mul		___508_pwr ___508_pwr roughness 	%argrw{"wrr"}
	mul		___508_p ___508_p Lacunarity 	%argrw{"wrr"}
	assign		$tmp2003 ___509_i 	%argrw{"wr"}
	add		___509_i ___509_i $const19 	%argrw{"wrr"}
	floor		$tmp2004 detail 	%argrw{"wr"}
	sub		___508_rmd detail $tmp2004 	%argrw{"wrr"}
	neq		$tmp2005 ___508_rmd $const1 	%argrw{"wrr"}
	if		$tmp2005 3914 3914 	%argrw{"r"}
	functioncall	$const9 3909 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	compref		$tmp2010 ___508_p $const18 	%line{83} %argrw{"wrr"}
	fabs		$tmp2009 $tmp2010 	%argrw{"wr"}
	ge		$tmp2011 $tmp2009 $const11 	%argrw{"wrr"}
	assign		$tmp2012 $tmp2011 	%argrw{"wr"}
	assign		$tmp2008 $tmp2012 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:84
#                                                float(fabs(co.y) >= 1000000.0),
	compref		$tmp2015 ___508_p $const19 	%line{84} %argrw{"wrr"}
	fabs		$tmp2014 $tmp2015 	%argrw{"wr"}
	ge		$tmp2016 $tmp2014 $const11 	%argrw{"wrr"}
	assign		$tmp2017 $tmp2016 	%argrw{"wr"}
	assign		$tmp2013 $tmp2017 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:85
#                                                float(fabs(co.z) >= 1000000.0));
	compref		$tmp2020 ___508_p $const39 	%line{85} %argrw{"wrr"}
	fabs		$tmp2019 $tmp2020 	%argrw{"wr"}
	ge		$tmp2021 $tmp2019 $const11 	%argrw{"wrr"}
	assign		$tmp2022 $tmp2021 	%argrw{"wr"}
	assign		$tmp2018 $tmp2022 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:83
#   vector3 precision_correction = 0.5 * vector3(float(fabs(co.x) >= 1000000.0),
	point		$tmp2007 $tmp2008 $tmp2013 $tmp2018 	%line{83} %argrw{"wrrr"}
	mul		___462_precision_correction $const10 $tmp2007 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:89
#   vector3 p = fmod(co, 100000.0) + precision_correction;
	fmod		$tmp2023 ___508_p $const12 	%line{89} %argrw{"wrr"}
	add		___462_p $tmp2023 ___462_precision_correction 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:91
#   return noise("snoise", p);
	noise		$tmp2006 $const13 ___462_p 	%line{91} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:260
# NOISE_HETERO_TERRAIN(vector3)
	add		$tmp2024 $tmp2006 Offset 	%line{260} %argrw{"wrr"}
	mul		$tmp2025 $tmp2024 ___508_pwr 	%argrw{"wrr"}
	mul		___511_increment $tmp2025 ___508_value 	%argrw{"wrr"}
	mul		$tmp2026 ___508_rmd ___511_increment 	%argrw{"wrr"}
	add		___508_value ___508_value $tmp2026 	%argrw{"wrr"}
	assign		$tmp1744 ___508_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:81
# NOISE_SELECT(vector3)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{81}
	error		$const29 	%argrw{"r"}
	assign		$tmp1744 $const1 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:178
#   Color = color(value,
	color		Color ___606_value $tmp1461 $tmp1744 	%line{178} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:195
#   return value;
	assign		Fac ___606_value 	%line{195} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:285
#   else if (dimensions == "4D") {
	eq		$tmp2027 dimensions $const41 	%line{285} %argrw{"wrr"}
	if		$tmp2027 6482 6483 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:286
#     Fac = noise_texture(vector4(p[0], p[1], p[2], w),
	compref		$tmp2028.x p $const18 	%line{286} %argrw{"wrr"}
	compref		$tmp2028.y p $const19 	%argrw{"wrr"}
	compref		$tmp2028.z p $const39 	%argrw{"wrr"}
	assign		$tmp2028.w w 	%argrw{"wr"}
	functioncall	$const5 6482 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:209
#   vector4 p = co;
	assign		___608_p.x $tmp2028.x 	%line{209} %argrw{"wr"}
	assign		___608_p.y $tmp2028.y 	%argrw{"wr"}
	assign		___608_p.z $tmp2028.z 	%argrw{"wr"}
	assign		___608_p.w $tmp2028.w 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:210
#   if (distortion != 0.0) {
	neq		$tmp2029 Distortion $const1 	%line{210} %argrw{"wrr"}
	if		$tmp2029 4191 4191 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:211
#     p += vector4(safe_snoise(p + random_vector4_offset(0.0)) * distortion,
	functioncall	$const42 3947 	%line{211} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:71
#   return vector4(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp2034 $const8 $const1 $const1 	%line{71} %argrw{"wrrr"}
	mul		$tmp2035 $tmp2034 $const7 	%argrw{"wrr"}
	add		$tmp2033.x $const7 $tmp2035 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:72
#                  100.0 + noise("hash", seed, 1.0) * 100.0,
	noise		$tmp2036 $const8 $const1 $const17 	%line{72} %argrw{"wrrr"}
	mul		$tmp2037 $tmp2036 $const7 	%argrw{"wrr"}
	add		$tmp2033.y $const7 $tmp2037 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:73
#                  100.0 + noise("hash", seed, 2.0) * 100.0,
	noise		$tmp2038 $const8 $const1 $const30 	%line{73} %argrw{"wrrr"}
	mul		$tmp2039 $tmp2038 $const7 	%argrw{"wrr"}
	add		$tmp2033.z $const7 $tmp2039 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:74
#                  100.0 + noise("hash", seed, 3.0) * 100.0);
	noise		$tmp2040 $const8 $const1 $const36 	%line{74} %argrw{"wrrr"}
	mul		$tmp2041 $tmp2040 $const7 	%argrw{"wrr"}
	add		$tmp2033.w $const7 $tmp2041 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 3952 	%line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp2032.x ___608_p.x $tmp2033.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp2032.y ___608_p.y $tmp2033.y 	%argrw{"wrr"}
	add		$tmp2032.z ___608_p.z $tmp2033.z 	%argrw{"wrr"}
	add		$tmp2032.w ___608_p.w $tmp2033.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:211
#     p += vector4(safe_snoise(p + random_vector4_offset(0.0)) * distortion,
	functioncall	$const9 3996 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{211} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2043 $tmp2032.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{96} %argrw{"wr"}
	ge		$tmp2044 $tmp2043 $const11 	%argrw{"wrr"}
	assign		$tmp2045 $tmp2044 	%argrw{"wr"}
	assign		$tmp2042.x $tmp2045 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2046 $tmp2032.y 	%line{97} %argrw{"wr"}
	ge		$tmp2047 $tmp2046 $const11 	%argrw{"wrr"}
	assign		$tmp2048 $tmp2047 	%argrw{"wr"}
	assign		$tmp2042.y $tmp2048 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2049 $tmp2032.z 	%line{98} %argrw{"wr"}
	ge		$tmp2050 $tmp2049 $const11 	%argrw{"wrr"}
	assign		$tmp2051 $tmp2050 	%argrw{"wr"}
	assign		$tmp2042.z $tmp2051 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2052 $tmp2032.w 	%line{99} %argrw{"wr"}
	ge		$tmp2053 $tmp2052 $const11 	%argrw{"wrr"}
	assign		$tmp2054 $tmp2053 	%argrw{"wr"}
	assign		$tmp2042.w $tmp2054 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 3979 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2055.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2055.y $const10 	%argrw{"wr"}
	assign		$tmp2055.z $const10 	%argrw{"wr"}
	assign		$tmp2055.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 3979 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2055.x $tmp2042.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2055.y $tmp2042.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2055.z $tmp2042.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2055.w $tmp2042.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 3989 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2057.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2057.y $const12 	%argrw{"wr"}
	assign		$tmp2057.z $const12 	%argrw{"wr"}
	assign		$tmp2057.w $const12 	%argrw{"wr"}
	functioncall	$const35 3989 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2056.x $tmp2032.x $tmp2057.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2056.y $tmp2032.y $tmp2057.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2056.z $tmp2032.z $tmp2057.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2056.w $tmp2032.w $tmp2057.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 3994 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2056.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2056.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2056.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2056.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2058 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2031 $const13 $tmp2058 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:211
#     p += vector4(safe_snoise(p + random_vector4_offset(0.0)) * distortion,
	mul		$tmp2030.x $tmp2031 Distortion 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{211} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:212
#                  safe_snoise(p + random_vector4_offset(1.0)) * distortion,
	functioncall	$const42 4010 	%line{212} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:71
#   return vector4(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp2062 $const8 $const17 $const1 	%line{71} %argrw{"wrrr"}
	mul		$tmp2063 $tmp2062 $const7 	%argrw{"wrr"}
	add		$tmp2061.x $const7 $tmp2063 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:72
#                  100.0 + noise("hash", seed, 1.0) * 100.0,
	noise		$tmp2064 $const8 $const17 $const17 	%line{72} %argrw{"wrrr"}
	mul		$tmp2065 $tmp2064 $const7 	%argrw{"wrr"}
	add		$tmp2061.y $const7 $tmp2065 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:73
#                  100.0 + noise("hash", seed, 2.0) * 100.0,
	noise		$tmp2066 $const8 $const17 $const30 	%line{73} %argrw{"wrrr"}
	mul		$tmp2067 $tmp2066 $const7 	%argrw{"wrr"}
	add		$tmp2061.z $const7 $tmp2067 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:74
#                  100.0 + noise("hash", seed, 3.0) * 100.0);
	noise		$tmp2068 $const8 $const17 $const36 	%line{74} %argrw{"wrrr"}
	mul		$tmp2069 $tmp2068 $const7 	%argrw{"wrr"}
	add		$tmp2061.w $const7 $tmp2069 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4015 	%line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp2060.x ___608_p.x $tmp2061.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp2060.y ___608_p.y $tmp2061.y 	%argrw{"wrr"}
	add		$tmp2060.z ___608_p.z $tmp2061.z 	%argrw{"wrr"}
	add		$tmp2060.w ___608_p.w $tmp2061.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:212
#                  safe_snoise(p + random_vector4_offset(1.0)) * distortion,
	functioncall	$const9 4059 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{212} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2071 $tmp2060.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{96} %argrw{"wr"}
	ge		$tmp2072 $tmp2071 $const11 	%argrw{"wrr"}
	assign		$tmp2073 $tmp2072 	%argrw{"wr"}
	assign		$tmp2070.x $tmp2073 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2074 $tmp2060.y 	%line{97} %argrw{"wr"}
	ge		$tmp2075 $tmp2074 $const11 	%argrw{"wrr"}
	assign		$tmp2076 $tmp2075 	%argrw{"wr"}
	assign		$tmp2070.y $tmp2076 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2077 $tmp2060.z 	%line{98} %argrw{"wr"}
	ge		$tmp2078 $tmp2077 $const11 	%argrw{"wrr"}
	assign		$tmp2079 $tmp2078 	%argrw{"wr"}
	assign		$tmp2070.z $tmp2079 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2080 $tmp2060.w 	%line{99} %argrw{"wr"}
	ge		$tmp2081 $tmp2080 $const11 	%argrw{"wrr"}
	assign		$tmp2082 $tmp2081 	%argrw{"wr"}
	assign		$tmp2070.w $tmp2082 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4042 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2083.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2083.y $const10 	%argrw{"wr"}
	assign		$tmp2083.z $const10 	%argrw{"wr"}
	assign		$tmp2083.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4042 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2083.x $tmp2070.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2083.y $tmp2070.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2083.z $tmp2070.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2083.w $tmp2070.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4052 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2085.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2085.y $const12 	%argrw{"wr"}
	assign		$tmp2085.z $const12 	%argrw{"wr"}
	assign		$tmp2085.w $const12 	%argrw{"wr"}
	functioncall	$const35 4052 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2084.x $tmp2060.x $tmp2085.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2084.y $tmp2060.y $tmp2085.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2084.z $tmp2060.z $tmp2085.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2084.w $tmp2060.w $tmp2085.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4057 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2084.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2084.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2084.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2084.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2086 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2059 $const13 $tmp2086 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:212
#                  safe_snoise(p + random_vector4_offset(1.0)) * distortion,
	mul		$tmp2030.y $tmp2059 Distortion 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{212} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:213
#                  safe_snoise(p + random_vector4_offset(2.0)) * distortion,
	functioncall	$const42 4073 	%line{213} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:71
#   return vector4(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp2090 $const8 $const30 $const1 	%line{71} %argrw{"wrrr"}
	mul		$tmp2091 $tmp2090 $const7 	%argrw{"wrr"}
	add		$tmp2089.x $const7 $tmp2091 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:72
#                  100.0 + noise("hash", seed, 1.0) * 100.0,
	noise		$tmp2092 $const8 $const30 $const17 	%line{72} %argrw{"wrrr"}
	mul		$tmp2093 $tmp2092 $const7 	%argrw{"wrr"}
	add		$tmp2089.y $const7 $tmp2093 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:73
#                  100.0 + noise("hash", seed, 2.0) * 100.0,
	noise		$tmp2094 $const8 $const30 $const30 	%line{73} %argrw{"wrrr"}
	mul		$tmp2095 $tmp2094 $const7 	%argrw{"wrr"}
	add		$tmp2089.z $const7 $tmp2095 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:74
#                  100.0 + noise("hash", seed, 3.0) * 100.0);
	noise		$tmp2096 $const8 $const30 $const36 	%line{74} %argrw{"wrrr"}
	mul		$tmp2097 $tmp2096 $const7 	%argrw{"wrr"}
	add		$tmp2089.w $const7 $tmp2097 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4078 	%line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp2088.x ___608_p.x $tmp2089.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp2088.y ___608_p.y $tmp2089.y 	%argrw{"wrr"}
	add		$tmp2088.z ___608_p.z $tmp2089.z 	%argrw{"wrr"}
	add		$tmp2088.w ___608_p.w $tmp2089.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:213
#                  safe_snoise(p + random_vector4_offset(2.0)) * distortion,
	functioncall	$const9 4122 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{213} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2099 $tmp2088.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{96} %argrw{"wr"}
	ge		$tmp2100 $tmp2099 $const11 	%argrw{"wrr"}
	assign		$tmp2101 $tmp2100 	%argrw{"wr"}
	assign		$tmp2098.x $tmp2101 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2102 $tmp2088.y 	%line{97} %argrw{"wr"}
	ge		$tmp2103 $tmp2102 $const11 	%argrw{"wrr"}
	assign		$tmp2104 $tmp2103 	%argrw{"wr"}
	assign		$tmp2098.y $tmp2104 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2105 $tmp2088.z 	%line{98} %argrw{"wr"}
	ge		$tmp2106 $tmp2105 $const11 	%argrw{"wrr"}
	assign		$tmp2107 $tmp2106 	%argrw{"wr"}
	assign		$tmp2098.z $tmp2107 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2108 $tmp2088.w 	%line{99} %argrw{"wr"}
	ge		$tmp2109 $tmp2108 $const11 	%argrw{"wrr"}
	assign		$tmp2110 $tmp2109 	%argrw{"wr"}
	assign		$tmp2098.w $tmp2110 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4105 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2111.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2111.y $const10 	%argrw{"wr"}
	assign		$tmp2111.z $const10 	%argrw{"wr"}
	assign		$tmp2111.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4105 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2111.x $tmp2098.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2111.y $tmp2098.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2111.z $tmp2098.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2111.w $tmp2098.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4115 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2113.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2113.y $const12 	%argrw{"wr"}
	assign		$tmp2113.z $const12 	%argrw{"wr"}
	assign		$tmp2113.w $const12 	%argrw{"wr"}
	functioncall	$const35 4115 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2112.x $tmp2088.x $tmp2113.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2112.y $tmp2088.y $tmp2113.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2112.z $tmp2088.z $tmp2113.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2112.w $tmp2088.w $tmp2113.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4120 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2112.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2112.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2112.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2112.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2114 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2087 $const13 $tmp2114 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:213
#                  safe_snoise(p + random_vector4_offset(2.0)) * distortion,
	mul		$tmp2030.z $tmp2087 Distortion 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{213} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:214
#                  safe_snoise(p + random_vector4_offset(3.0)) * distortion);
	functioncall	$const42 4136 	%line{214} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:71
#   return vector4(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp2118 $const8 $const36 $const1 	%line{71} %argrw{"wrrr"}
	mul		$tmp2119 $tmp2118 $const7 	%argrw{"wrr"}
	add		$tmp2117.x $const7 $tmp2119 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:72
#                  100.0 + noise("hash", seed, 1.0) * 100.0,
	noise		$tmp2120 $const8 $const36 $const17 	%line{72} %argrw{"wrrr"}
	mul		$tmp2121 $tmp2120 $const7 	%argrw{"wrr"}
	add		$tmp2117.y $const7 $tmp2121 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:73
#                  100.0 + noise("hash", seed, 2.0) * 100.0,
	noise		$tmp2122 $const8 $const36 $const30 	%line{73} %argrw{"wrrr"}
	mul		$tmp2123 $tmp2122 $const7 	%argrw{"wrr"}
	add		$tmp2117.z $const7 $tmp2123 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:74
#                  100.0 + noise("hash", seed, 3.0) * 100.0);
	noise		$tmp2124 $const8 $const36 $const36 	%line{74} %argrw{"wrrr"}
	mul		$tmp2125 $tmp2124 $const7 	%argrw{"wrr"}
	add		$tmp2117.w $const7 $tmp2125 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4141 	%line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp2116.x ___608_p.x $tmp2117.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp2116.y ___608_p.y $tmp2117.y 	%argrw{"wrr"}
	add		$tmp2116.z ___608_p.z $tmp2117.z 	%argrw{"wrr"}
	add		$tmp2116.w ___608_p.w $tmp2117.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:214
#                  safe_snoise(p + random_vector4_offset(3.0)) * distortion);
	functioncall	$const9 4185 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{214} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2127 $tmp2116.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{96} %argrw{"wr"}
	ge		$tmp2128 $tmp2127 $const11 	%argrw{"wrr"}
	assign		$tmp2129 $tmp2128 	%argrw{"wr"}
	assign		$tmp2126.x $tmp2129 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2130 $tmp2116.y 	%line{97} %argrw{"wr"}
	ge		$tmp2131 $tmp2130 $const11 	%argrw{"wrr"}
	assign		$tmp2132 $tmp2131 	%argrw{"wr"}
	assign		$tmp2126.y $tmp2132 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2133 $tmp2116.z 	%line{98} %argrw{"wr"}
	ge		$tmp2134 $tmp2133 $const11 	%argrw{"wrr"}
	assign		$tmp2135 $tmp2134 	%argrw{"wr"}
	assign		$tmp2126.z $tmp2135 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2136 $tmp2116.w 	%line{99} %argrw{"wr"}
	ge		$tmp2137 $tmp2136 $const11 	%argrw{"wrr"}
	assign		$tmp2138 $tmp2137 	%argrw{"wr"}
	assign		$tmp2126.w $tmp2138 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4168 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2139.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2139.y $const10 	%argrw{"wr"}
	assign		$tmp2139.z $const10 	%argrw{"wr"}
	assign		$tmp2139.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4168 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2139.x $tmp2126.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2139.y $tmp2126.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2139.z $tmp2126.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2139.w $tmp2126.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4178 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2141.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2141.y $const12 	%argrw{"wr"}
	assign		$tmp2141.z $const12 	%argrw{"wr"}
	assign		$tmp2141.w $const12 	%argrw{"wr"}
	functioncall	$const35 4178 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2140.x $tmp2116.x $tmp2141.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2140.y $tmp2116.y $tmp2141.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2140.z $tmp2116.z $tmp2141.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2140.w $tmp2116.w $tmp2141.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4183 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2140.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2140.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2140.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2140.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2142 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2115 $const13 $tmp2142 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:214
#                  safe_snoise(p + random_vector4_offset(3.0)) * distortion);
	mul		$tmp2030.w $tmp2115 Distortion 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{214} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4191 	%line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___608_p.x ___608_p.x $tmp2030.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___608_p.y ___608_p.y $tmp2030.y 	%argrw{"wrr"}
	add		___608_p.z ___608_p.z $tmp2030.z 	%argrw{"wrr"}
	add		___608_p.w ___608_p.w $tmp2030.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:217
#   float value = noise_select(p, detail, roughness, lacunarity, offset, gain, type, use_normalize);
	functioncall	$const14 4942 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{217} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	eq		$tmp2143 type $const15 	%line{82} %argrw{"wrr"}
	if		$tmp2143 4320 4942 	%argrw{"r"}
	functioncall	$const16 4319 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:254
# NOISE_MULTI_FRACTAL(vector4)
	assign		___496_p.x ___608_p.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{254} %argrw{"wr"}
	assign		___496_p.y ___608_p.y 	%argrw{"wr"}
	assign		___496_p.z ___608_p.z 	%argrw{"wr"}
	assign		___496_p.w ___608_p.w 	%argrw{"wr"}
	assign		___496_value $const17 	%argrw{"wr"}
	assign		___496_pwr $const17 	%argrw{"wr"}
	for		$tmp2146 4203 4206 4264 4266 	%argrw{"r"}
	assign		___497_i $const18 	%argrw{"wr"}
	assign		$tmp2144 detail 	%argrw{"wr"}
	le		$tmp2145 ___497_i $tmp2144 	%argrw{"wrr"}
	neq		$tmp2146 $tmp2145 $const18 	%argrw{"wrr"}
	functioncall	$const9 4250 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2149 ___496_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2150 $tmp2149 $const11 	%argrw{"wrr"}
	assign		$tmp2151 $tmp2150 	%argrw{"wr"}
	assign		$tmp2148.x $tmp2151 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2152 ___496_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2153 $tmp2152 $const11 	%argrw{"wrr"}
	assign		$tmp2154 $tmp2153 	%argrw{"wr"}
	assign		$tmp2148.y $tmp2154 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2155 ___496_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2156 $tmp2155 $const11 	%argrw{"wrr"}
	assign		$tmp2157 $tmp2156 	%argrw{"wr"}
	assign		$tmp2148.z $tmp2157 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2158 ___496_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2159 $tmp2158 $const11 	%argrw{"wrr"}
	assign		$tmp2160 $tmp2159 	%argrw{"wr"}
	assign		$tmp2148.w $tmp2160 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4233 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2161.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2161.y $const10 	%argrw{"wr"}
	assign		$tmp2161.z $const10 	%argrw{"wr"}
	assign		$tmp2161.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4233 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2161.x $tmp2148.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2161.y $tmp2148.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2161.z $tmp2148.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2161.w $tmp2148.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4243 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2163.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2163.y $const12 	%argrw{"wr"}
	assign		$tmp2163.z $const12 	%argrw{"wr"}
	assign		$tmp2163.w $const12 	%argrw{"wr"}
	functioncall	$const35 4243 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2162.x ___496_p.x $tmp2163.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2162.y ___496_p.y $tmp2163.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2162.z ___496_p.z $tmp2163.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2162.w ___496_p.w $tmp2163.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4248 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2162.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2162.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2162.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2162.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2164 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2147 $const13 $tmp2164 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:254
# NOISE_MULTI_FRACTAL(vector4)
	mul		$tmp2165 ___496_pwr $tmp2147 	%line{254} %argrw{"wrr"}
	add		$tmp2166 $tmp2165 $const17 	%argrw{"wrr"}
	mul		___496_value ___496_value $tmp2166 	%argrw{"wrr"}
	mul		___496_pwr ___496_pwr roughness 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4264 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2167.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2167.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2167.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2167.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4264 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___496_p.x ___496_p.x $tmp2167.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___496_p.y ___496_p.y $tmp2167.y 	%argrw{"wrr"}
	mul		___496_p.z ___496_p.z $tmp2167.z 	%argrw{"wrr"}
	mul		___496_p.w ___496_p.w $tmp2167.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:254
# NOISE_MULTI_FRACTAL(vector4)
	assign		$tmp2168 ___497_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{254} %argrw{"wr"}
	add		___497_i ___497_i $const19 	%argrw{"wrr"}
	floor		$tmp2169 detail 	%argrw{"wr"}
	sub		___496_rmd detail $tmp2169 	%argrw{"wrr"}
	neq		$tmp2170 ___496_rmd $const1 	%argrw{"wrr"}
	if		$tmp2170 4318 4318 	%argrw{"r"}
	mul		$tmp2171 ___496_rmd ___496_pwr 	%argrw{"wrr"}
	functioncall	$const9 4315 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2174 ___496_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2175 $tmp2174 $const11 	%argrw{"wrr"}
	assign		$tmp2176 $tmp2175 	%argrw{"wr"}
	assign		$tmp2173.x $tmp2176 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2177 ___496_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2178 $tmp2177 $const11 	%argrw{"wrr"}
	assign		$tmp2179 $tmp2178 	%argrw{"wr"}
	assign		$tmp2173.y $tmp2179 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2180 ___496_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2181 $tmp2180 $const11 	%argrw{"wrr"}
	assign		$tmp2182 $tmp2181 	%argrw{"wr"}
	assign		$tmp2173.z $tmp2182 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2183 ___496_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2184 $tmp2183 $const11 	%argrw{"wrr"}
	assign		$tmp2185 $tmp2184 	%argrw{"wr"}
	assign		$tmp2173.w $tmp2185 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4298 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2186.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2186.y $const10 	%argrw{"wr"}
	assign		$tmp2186.z $const10 	%argrw{"wr"}
	assign		$tmp2186.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4298 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2186.x $tmp2173.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2186.y $tmp2173.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2186.z $tmp2173.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2186.w $tmp2173.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4308 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2188.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2188.y $const12 	%argrw{"wr"}
	assign		$tmp2188.z $const12 	%argrw{"wr"}
	assign		$tmp2188.w $const12 	%argrw{"wr"}
	functioncall	$const35 4308 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2187.x ___496_p.x $tmp2188.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2187.y ___496_p.y $tmp2188.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2187.z ___496_p.z $tmp2188.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2187.w ___496_p.w $tmp2188.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4313 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2187.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2187.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2187.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2187.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2189 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2172 $const13 $tmp2189 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:254
# NOISE_MULTI_FRACTAL(vector4)
	mul		$tmp2190 $tmp2171 $tmp2172 	%line{254} %argrw{"wrr"}
	add		$tmp2191 $tmp2190 $const17 	%argrw{"wrr"}
	mul		___496_value ___496_value $tmp2191 	%argrw{"wrr"}
	assign		___608_value ___496_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	eq		$tmp2192 type $const20 	%argrw{"wrr"}
	if		$tmp2192 4475 4942 	%argrw{"r"}
	functioncall	$const21 4474 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	assign		___479_p.x ___608_p.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{247} %argrw{"wr"}
	assign		___479_p.y ___608_p.y 	%argrw{"wr"}
	assign		___479_p.z ___608_p.z 	%argrw{"wr"}
	assign		___479_p.w ___608_p.w 	%argrw{"wr"}
	assign		___479_fscale $const17 	%argrw{"wr"}
	assign		___479_amp $const17 	%argrw{"wr"}
	assign		___479_maxamp $const1 	%argrw{"wr"}
	assign		___479_sum $const1 	%argrw{"wr"}
	for		$tmp2195 4333 4336 4395 4397 	%argrw{"r"}
	assign		___480_i $const18 	%argrw{"wr"}
	assign		$tmp2193 detail 	%argrw{"wr"}
	le		$tmp2194 ___480_i $tmp2193 	%argrw{"wrr"}
	neq		$tmp2195 $tmp2194 $const18 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4346 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2197.x ___479_fscale 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2197.y ___479_fscale 	%argrw{"wr"}
	assign		$tmp2197.z ___479_fscale 	%argrw{"wr"}
	assign		$tmp2197.w ___479_fscale 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4346 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp2196.x $tmp2197.x ___479_p.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp2196.y $tmp2197.y ___479_p.y 	%argrw{"wrr"}
	mul		$tmp2196.z $tmp2197.z ___479_p.z 	%argrw{"wrr"}
	mul		$tmp2196.w $tmp2197.w ___479_p.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	functioncall	$const9 4390 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{247} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2199 $tmp2196.x 	%line{96} %argrw{"wr"}
	ge		$tmp2200 $tmp2199 $const11 	%argrw{"wrr"}
	assign		$tmp2201 $tmp2200 	%argrw{"wr"}
	assign		$tmp2198.x $tmp2201 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2202 $tmp2196.y 	%line{97} %argrw{"wr"}
	ge		$tmp2203 $tmp2202 $const11 	%argrw{"wrr"}
	assign		$tmp2204 $tmp2203 	%argrw{"wr"}
	assign		$tmp2198.y $tmp2204 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2205 $tmp2196.z 	%line{98} %argrw{"wr"}
	ge		$tmp2206 $tmp2205 $const11 	%argrw{"wrr"}
	assign		$tmp2207 $tmp2206 	%argrw{"wr"}
	assign		$tmp2198.z $tmp2207 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2208 $tmp2196.w 	%line{99} %argrw{"wr"}
	ge		$tmp2209 $tmp2208 $const11 	%argrw{"wrr"}
	assign		$tmp2210 $tmp2209 	%argrw{"wr"}
	assign		$tmp2198.w $tmp2210 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4373 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2211.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2211.y $const10 	%argrw{"wr"}
	assign		$tmp2211.z $const10 	%argrw{"wr"}
	assign		$tmp2211.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4373 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2211.x $tmp2198.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2211.y $tmp2198.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2211.z $tmp2198.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2211.w $tmp2198.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4383 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2213.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2213.y $const12 	%argrw{"wr"}
	assign		$tmp2213.z $const12 	%argrw{"wr"}
	assign		$tmp2213.w $const12 	%argrw{"wr"}
	functioncall	$const35 4383 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2212.x $tmp2196.x $tmp2213.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2212.y $tmp2196.y $tmp2213.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2212.z $tmp2196.z $tmp2213.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2212.w $tmp2196.w $tmp2213.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4388 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2212.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2212.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2212.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2212.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2214 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		___481_t $const13 $tmp2214 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	mul		$tmp2215 ___481_t ___479_amp 	%line{247} %argrw{"wrr"}
	add		___479_sum ___479_sum $tmp2215 	%argrw{"wrr"}
	add		___479_maxamp ___479_maxamp ___479_amp 	%argrw{"wrr"}
	mul		___479_amp ___479_amp roughness 	%argrw{"wrr"}
	mul		___479_fscale ___479_fscale Lacunarity 	%argrw{"wrr"}
	assign		$tmp2216 ___480_i 	%argrw{"wr"}
	add		___480_i ___480_i $const19 	%argrw{"wrr"}
	floor		$tmp2217 detail 	%argrw{"wr"}
	sub		___479_rmd detail $tmp2217 	%argrw{"wrr"}
	neq		$tmp2218 ___479_rmd $const1 	%argrw{"wrr"}
	if		$tmp2218 4468 4474 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4411 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2220.x ___479_fscale 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2220.y ___479_fscale 	%argrw{"wr"}
	assign		$tmp2220.z ___479_fscale 	%argrw{"wr"}
	assign		$tmp2220.w ___479_fscale 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4411 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp2219.x $tmp2220.x ___479_p.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp2219.y $tmp2220.y ___479_p.y 	%argrw{"wrr"}
	mul		$tmp2219.z $tmp2220.z ___479_p.z 	%argrw{"wrr"}
	mul		$tmp2219.w $tmp2220.w ___479_p.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	functioncall	$const9 4455 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{247} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2222 $tmp2219.x 	%line{96} %argrw{"wr"}
	ge		$tmp2223 $tmp2222 $const11 	%argrw{"wrr"}
	assign		$tmp2224 $tmp2223 	%argrw{"wr"}
	assign		$tmp2221.x $tmp2224 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2225 $tmp2219.y 	%line{97} %argrw{"wr"}
	ge		$tmp2226 $tmp2225 $const11 	%argrw{"wrr"}
	assign		$tmp2227 $tmp2226 	%argrw{"wr"}
	assign		$tmp2221.y $tmp2227 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2228 $tmp2219.z 	%line{98} %argrw{"wr"}
	ge		$tmp2229 $tmp2228 $const11 	%argrw{"wrr"}
	assign		$tmp2230 $tmp2229 	%argrw{"wr"}
	assign		$tmp2221.z $tmp2230 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2231 $tmp2219.w 	%line{99} %argrw{"wr"}
	ge		$tmp2232 $tmp2231 $const11 	%argrw{"wrr"}
	assign		$tmp2233 $tmp2232 	%argrw{"wr"}
	assign		$tmp2221.w $tmp2233 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4438 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2234.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2234.y $const10 	%argrw{"wr"}
	assign		$tmp2234.z $const10 	%argrw{"wr"}
	assign		$tmp2234.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4438 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2234.x $tmp2221.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2234.y $tmp2221.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2234.z $tmp2221.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2234.w $tmp2221.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4448 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2236.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2236.y $const12 	%argrw{"wr"}
	assign		$tmp2236.z $const12 	%argrw{"wr"}
	assign		$tmp2236.w $const12 	%argrw{"wr"}
	functioncall	$const35 4448 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2235.x $tmp2219.x $tmp2236.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2235.y $tmp2219.y $tmp2236.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2235.z $tmp2219.z $tmp2236.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2235.w $tmp2219.w $tmp2236.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4453 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2235.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2235.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2235.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2235.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2237 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		___482_t $const13 $tmp2237 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	mul		$tmp2238 ___482_t ___479_amp 	%line{247} %argrw{"wrr"}
	add		___482_sum2 ___479_sum $tmp2238 	%argrw{"wrr"}
	if		use_normalize 4466 4467 	%argrw{"r"}
	mul		$tmp2239 $const10 ___479_sum 	%argrw{"wrr"}
	div		$tmp2240 $tmp2239 ___479_maxamp 	%argrw{"wrr"}
	add		$tmp2241 $tmp2240 $const10 	%argrw{"wrr"}
	mul		$tmp2242 $const10 ___482_sum2 	%argrw{"wrr"}
	add		$tmp2243 ___479_maxamp ___479_amp 	%argrw{"wrr"}
	div		$tmp2244 $tmp2242 $tmp2243 	%argrw{"wrr"}
	add		$tmp2245 $tmp2244 $const10 	%argrw{"wrr"}
	mix		___608_value $tmp2241 $tmp2245 ___479_rmd 	%argrw{"wrrr"}
	mix		___608_value ___479_sum ___482_sum2 ___479_rmd 	%argrw{"wrrr"}
	return
	if		use_normalize 4472 4473 	%argrw{"r"}
	mul		$tmp2246 $const10 ___479_sum 	%argrw{"wrr"}
	div		$tmp2247 $tmp2246 ___479_maxamp 	%argrw{"wrr"}
	add		___608_value $tmp2247 $const10 	%argrw{"wrr"}
	assign		___608_value ___479_sum 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	eq		$tmp2248 type $const22 	%argrw{"wrr"}
	if		$tmp2248 4624 4942 	%argrw{"r"}
	functioncall	$const23 4623 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:268
# NOISE_HYBRID_MULTI_FRACTAL(vector4)
	assign		___534_p.x ___608_p.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{268} %argrw{"wr"}
	assign		___534_p.y ___608_p.y 	%argrw{"wr"}
	assign		___534_p.z ___608_p.z 	%argrw{"wr"}
	assign		___534_p.w ___608_p.w 	%argrw{"wr"}
	assign		___534_pwr $const17 	%argrw{"wr"}
	assign		___534_value $const1 	%argrw{"wr"}
	assign		___534_weight $const17 	%argrw{"wr"}
	for		$tmp2254 4487 4495 4559 4561 	%argrw{"r"}
	assign		___535_i $const18 	%argrw{"wr"}
	gt		$tmp2249 ___534_weight $const24 	%argrw{"wrr"}
	neq		$tmp2250 $tmp2249 $const18 	%argrw{"wrr"}
	if		$tmp2250 4494 4494 	%argrw{"r"}
	assign		$tmp2251 detail 	%argrw{"wr"}
	le		$tmp2252 ___535_i $tmp2251 	%argrw{"wrr"}
	neq		$tmp2253 $tmp2252 $const18 	%argrw{"wrr"}
	assign		$tmp2250 $tmp2253 	%argrw{"wr"}
	neq		$tmp2254 $tmp2250 $const18 	%argrw{"wrr"}
	gt		$tmp2255 ___534_weight $const17 	%argrw{"wrr"}
	if		$tmp2255 4498 4498 	%argrw{"r"}
	assign		___534_weight $const17 	%argrw{"wr"}
	functioncall	$const9 4542 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2258 ___534_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2259 $tmp2258 $const11 	%argrw{"wrr"}
	assign		$tmp2260 $tmp2259 	%argrw{"wr"}
	assign		$tmp2257.x $tmp2260 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2261 ___534_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2262 $tmp2261 $const11 	%argrw{"wrr"}
	assign		$tmp2263 $tmp2262 	%argrw{"wr"}
	assign		$tmp2257.y $tmp2263 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2264 ___534_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2265 $tmp2264 $const11 	%argrw{"wrr"}
	assign		$tmp2266 $tmp2265 	%argrw{"wr"}
	assign		$tmp2257.z $tmp2266 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2267 ___534_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2268 $tmp2267 $const11 	%argrw{"wrr"}
	assign		$tmp2269 $tmp2268 	%argrw{"wr"}
	assign		$tmp2257.w $tmp2269 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4525 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2270.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2270.y $const10 	%argrw{"wr"}
	assign		$tmp2270.z $const10 	%argrw{"wr"}
	assign		$tmp2270.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4525 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2270.x $tmp2257.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2270.y $tmp2257.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2270.z $tmp2257.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2270.w $tmp2257.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4535 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2272.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2272.y $const12 	%argrw{"wr"}
	assign		$tmp2272.z $const12 	%argrw{"wr"}
	assign		$tmp2272.w $const12 	%argrw{"wr"}
	functioncall	$const35 4535 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2271.x ___534_p.x $tmp2272.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2271.y ___534_p.y $tmp2272.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2271.z ___534_p.z $tmp2272.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2271.w ___534_p.w $tmp2272.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4540 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2271.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2271.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2271.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2271.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2273 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2256 $const13 $tmp2273 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:268
# NOISE_HYBRID_MULTI_FRACTAL(vector4)
	add		$tmp2274 $tmp2256 Offset 	%line{268} %argrw{"wrr"}
	mul		___536_signal $tmp2274 ___534_pwr 	%argrw{"wrr"}
	mul		___534_pwr ___534_pwr roughness 	%argrw{"wrr"}
	mul		$tmp2275 ___534_weight ___536_signal 	%argrw{"wrr"}
	add		___534_value ___534_value $tmp2275 	%argrw{"wrr"}
	mul		$tmp2276 Gain ___536_signal 	%argrw{"wrr"}
	mul		___534_weight ___534_weight $tmp2276 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4559 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2277.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2277.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2277.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2277.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4559 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___534_p.x ___534_p.x $tmp2277.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___534_p.y ___534_p.y $tmp2277.y 	%argrw{"wrr"}
	mul		___534_p.z ___534_p.z $tmp2277.z 	%argrw{"wrr"}
	mul		___534_p.w ___534_p.w $tmp2277.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:268
# NOISE_HYBRID_MULTI_FRACTAL(vector4)
	assign		$tmp2278 ___535_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{268} %argrw{"wr"}
	add		___535_i ___535_i $const19 	%argrw{"wrr"}
	floor		$tmp2279 detail 	%argrw{"wr"}
	sub		___534_rmd detail $tmp2279 	%argrw{"wrr"}
	neq		$tmp2280 ___534_rmd $const1 	%argrw{"wrr"}
	neq		$tmp2281 $tmp2280 $const18 	%argrw{"wrr"}
	if		$tmp2281 4569 4569 	%argrw{"r"}
	gt		$tmp2282 ___534_weight $const24 	%argrw{"wrr"}
	neq		$tmp2283 $tmp2282 $const18 	%argrw{"wrr"}
	assign		$tmp2281 $tmp2283 	%argrw{"wr"}
	if		$tmp2281 4622 4622 	%argrw{"r"}
	gt		$tmp2284 ___534_weight $const17 	%argrw{"wrr"}
	if		$tmp2284 4573 4573 	%argrw{"r"}
	assign		___534_weight $const17 	%argrw{"wr"}
	functioncall	$const9 4617 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2287 ___534_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2288 $tmp2287 $const11 	%argrw{"wrr"}
	assign		$tmp2289 $tmp2288 	%argrw{"wr"}
	assign		$tmp2286.x $tmp2289 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2290 ___534_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2291 $tmp2290 $const11 	%argrw{"wrr"}
	assign		$tmp2292 $tmp2291 	%argrw{"wr"}
	assign		$tmp2286.y $tmp2292 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2293 ___534_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2294 $tmp2293 $const11 	%argrw{"wrr"}
	assign		$tmp2295 $tmp2294 	%argrw{"wr"}
	assign		$tmp2286.z $tmp2295 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2296 ___534_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2297 $tmp2296 $const11 	%argrw{"wrr"}
	assign		$tmp2298 $tmp2297 	%argrw{"wr"}
	assign		$tmp2286.w $tmp2298 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4600 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2299.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2299.y $const10 	%argrw{"wr"}
	assign		$tmp2299.z $const10 	%argrw{"wr"}
	assign		$tmp2299.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4600 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2299.x $tmp2286.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2299.y $tmp2286.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2299.z $tmp2286.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2299.w $tmp2286.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4610 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2301.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2301.y $const12 	%argrw{"wr"}
	assign		$tmp2301.z $const12 	%argrw{"wr"}
	assign		$tmp2301.w $const12 	%argrw{"wr"}
	functioncall	$const35 4610 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2300.x ___534_p.x $tmp2301.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2300.y ___534_p.y $tmp2301.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2300.z ___534_p.z $tmp2301.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2300.w ___534_p.w $tmp2301.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4615 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2300.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2300.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2300.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2300.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2302 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2285 $const13 $tmp2302 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:268
# NOISE_HYBRID_MULTI_FRACTAL(vector4)
	add		$tmp2303 $tmp2285 Offset 	%line{268} %argrw{"wrr"}
	mul		___538_signal $tmp2303 ___534_pwr 	%argrw{"wrr"}
	mul		$tmp2304 ___534_rmd ___534_weight 	%argrw{"wrr"}
	mul		$tmp2305 $tmp2304 ___538_signal 	%argrw{"wrr"}
	add		___534_value ___534_value $tmp2305 	%argrw{"wrr"}
	assign		___608_value ___534_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	eq		$tmp2306 type $const25 	%argrw{"wrr"}
	if		$tmp2306 4755 4942 	%argrw{"r"}
	functioncall	$const26 4754 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	assign		___549_p.x ___608_p.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{275} %argrw{"wr"}
	assign		___549_p.y ___608_p.y 	%argrw{"wr"}
	assign		___549_p.z ___608_p.z 	%argrw{"wr"}
	assign		___549_p.w ___608_p.w 	%argrw{"wr"}
	assign		___549_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 4676 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2310 ___549_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2311 $tmp2310 $const11 	%argrw{"wrr"}
	assign		$tmp2312 $tmp2311 	%argrw{"wr"}
	assign		$tmp2309.x $tmp2312 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2313 ___549_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2314 $tmp2313 $const11 	%argrw{"wrr"}
	assign		$tmp2315 $tmp2314 	%argrw{"wr"}
	assign		$tmp2309.y $tmp2315 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2316 ___549_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2317 $tmp2316 $const11 	%argrw{"wrr"}
	assign		$tmp2318 $tmp2317 	%argrw{"wr"}
	assign		$tmp2309.z $tmp2318 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2319 ___549_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2320 $tmp2319 $const11 	%argrw{"wrr"}
	assign		$tmp2321 $tmp2320 	%argrw{"wr"}
	assign		$tmp2309.w $tmp2321 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4659 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2322.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2322.y $const10 	%argrw{"wr"}
	assign		$tmp2322.z $const10 	%argrw{"wr"}
	assign		$tmp2322.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4659 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2322.x $tmp2309.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2322.y $tmp2309.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2322.z $tmp2309.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2322.w $tmp2309.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4669 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2324.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2324.y $const12 	%argrw{"wr"}
	assign		$tmp2324.z $const12 	%argrw{"wr"}
	assign		$tmp2324.w $const12 	%argrw{"wr"}
	functioncall	$const35 4669 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2323.x ___549_p.x $tmp2324.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2323.y ___549_p.y $tmp2324.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2323.z ___549_p.z $tmp2324.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2323.w ___549_p.w $tmp2324.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4674 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2323.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2323.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2323.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2323.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2325 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2308 $const13 $tmp2325 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	fabs		$tmp2307 $tmp2308 	%line{275} %argrw{"wr"}
	sub		___549_signal Offset $tmp2307 	%argrw{"wrr"}
	mul		___549_signal ___549_signal ___549_signal 	%argrw{"wrr"}
	assign		___549_value ___549_signal 	%argrw{"wr"}
	assign		___549_weight $const17 	%argrw{"wr"}
	for		$tmp2328 4683 4686 4751 4753 	%argrw{"r"}
	assign		___550_i $const19 	%argrw{"wr"}
	assign		$tmp2326 detail 	%argrw{"wr"}
	le		$tmp2327 ___550_i $tmp2326 	%argrw{"wrr"}
	neq		$tmp2328 $tmp2327 $const18 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4696 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2329.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2329.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2329.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2329.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4696 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___549_p.x ___549_p.x $tmp2329.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___549_p.y ___549_p.y $tmp2329.y 	%argrw{"wrr"}
	mul		___549_p.z ___549_p.z $tmp2329.z 	%argrw{"wrr"}
	mul		___549_p.w ___549_p.w $tmp2329.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	mul		$tmp2330 ___549_signal Gain 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{275} %argrw{"wrr"}
	functioncall	$const3 4700 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp2331 $tmp2330 $const17 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___549_weight $tmp2331 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	functioncall	$const9 4744 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{275} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2335 ___549_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2336 $tmp2335 $const11 	%argrw{"wrr"}
	assign		$tmp2337 $tmp2336 	%argrw{"wr"}
	assign		$tmp2334.x $tmp2337 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2338 ___549_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2339 $tmp2338 $const11 	%argrw{"wrr"}
	assign		$tmp2340 $tmp2339 	%argrw{"wr"}
	assign		$tmp2334.y $tmp2340 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2341 ___549_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2342 $tmp2341 $const11 	%argrw{"wrr"}
	assign		$tmp2343 $tmp2342 	%argrw{"wr"}
	assign		$tmp2334.z $tmp2343 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2344 ___549_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2345 $tmp2344 $const11 	%argrw{"wrr"}
	assign		$tmp2346 $tmp2345 	%argrw{"wr"}
	assign		$tmp2334.w $tmp2346 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4727 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2347.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2347.y $const10 	%argrw{"wr"}
	assign		$tmp2347.z $const10 	%argrw{"wr"}
	assign		$tmp2347.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4727 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2347.x $tmp2334.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2347.y $tmp2334.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2347.z $tmp2334.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2347.w $tmp2334.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4737 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2349.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2349.y $const12 	%argrw{"wr"}
	assign		$tmp2349.z $const12 	%argrw{"wr"}
	assign		$tmp2349.w $const12 	%argrw{"wr"}
	functioncall	$const35 4737 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2348.x ___549_p.x $tmp2349.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2348.y ___549_p.y $tmp2349.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2348.z ___549_p.z $tmp2349.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2348.w ___549_p.w $tmp2349.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4742 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2348.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2348.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2348.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2348.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2350 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2333 $const13 $tmp2350 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	fabs		$tmp2332 $tmp2333 	%line{275} %argrw{"wr"}
	sub		___549_signal Offset $tmp2332 	%argrw{"wrr"}
	mul		___549_signal ___549_signal ___549_signal 	%argrw{"wrr"}
	mul		___549_signal ___549_signal ___549_weight 	%argrw{"wrr"}
	mul		$tmp2351 ___549_signal ___549_pwr 	%argrw{"wrr"}
	add		___549_value ___549_value $tmp2351 	%argrw{"wrr"}
	mul		___549_pwr ___549_pwr roughness 	%argrw{"wrr"}
	assign		$tmp2352 ___550_i 	%argrw{"wr"}
	add		___550_i ___550_i $const19 	%argrw{"wrr"}
	assign		___608_value ___549_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	eq		$tmp2353 type $const27 	%argrw{"wrr"}
	if		$tmp2353 4939 4942 	%argrw{"r"}
	functioncall	$const28 4938 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	assign		___512_p.x ___608_p.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{261} %argrw{"wr"}
	assign		___512_p.y ___608_p.y 	%argrw{"wr"}
	assign		___512_p.z ___608_p.z 	%argrw{"wr"}
	assign		___512_p.w ___608_p.w 	%argrw{"wr"}
	assign		___512_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 4807 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2356 ___512_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2357 $tmp2356 $const11 	%argrw{"wrr"}
	assign		$tmp2358 $tmp2357 	%argrw{"wr"}
	assign		$tmp2355.x $tmp2358 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2359 ___512_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2360 $tmp2359 $const11 	%argrw{"wrr"}
	assign		$tmp2361 $tmp2360 	%argrw{"wr"}
	assign		$tmp2355.y $tmp2361 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2362 ___512_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2363 $tmp2362 $const11 	%argrw{"wrr"}
	assign		$tmp2364 $tmp2363 	%argrw{"wr"}
	assign		$tmp2355.z $tmp2364 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2365 ___512_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2366 $tmp2365 $const11 	%argrw{"wrr"}
	assign		$tmp2367 $tmp2366 	%argrw{"wr"}
	assign		$tmp2355.w $tmp2367 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4790 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2368.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2368.y $const10 	%argrw{"wr"}
	assign		$tmp2368.z $const10 	%argrw{"wr"}
	assign		$tmp2368.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4790 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2368.x $tmp2355.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2368.y $tmp2355.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2368.z $tmp2355.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2368.w $tmp2355.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4800 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2370.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2370.y $const12 	%argrw{"wr"}
	assign		$tmp2370.z $const12 	%argrw{"wr"}
	assign		$tmp2370.w $const12 	%argrw{"wr"}
	functioncall	$const35 4800 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2369.x ___512_p.x $tmp2370.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2369.y ___512_p.y $tmp2370.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2369.z ___512_p.z $tmp2370.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2369.w ___512_p.w $tmp2370.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4805 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2369.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2369.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2369.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2369.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2371 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2354 $const13 $tmp2371 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	add		___512_value Offset $tmp2354 	%line{261} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4818 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2372.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2372.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2372.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2372.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4818 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___512_p.x ___512_p.x $tmp2372.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___512_p.y ___512_p.y $tmp2372.y 	%argrw{"wrr"}
	mul		___512_p.z ___512_p.z $tmp2372.z 	%argrw{"wrr"}
	mul		___512_p.w ___512_p.w $tmp2372.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	for		$tmp2375 4820 4823 4882 4884 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{261} %argrw{"r"}
	assign		___513_i $const19 	%argrw{"wr"}
	assign		$tmp2373 detail 	%argrw{"wr"}
	le		$tmp2374 ___513_i $tmp2373 	%argrw{"wrr"}
	neq		$tmp2375 $tmp2374 $const18 	%argrw{"wrr"}
	functioncall	$const9 4867 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2378 ___512_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2379 $tmp2378 $const11 	%argrw{"wrr"}
	assign		$tmp2380 $tmp2379 	%argrw{"wr"}
	assign		$tmp2377.x $tmp2380 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2381 ___512_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2382 $tmp2381 $const11 	%argrw{"wrr"}
	assign		$tmp2383 $tmp2382 	%argrw{"wr"}
	assign		$tmp2377.y $tmp2383 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2384 ___512_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2385 $tmp2384 $const11 	%argrw{"wrr"}
	assign		$tmp2386 $tmp2385 	%argrw{"wr"}
	assign		$tmp2377.z $tmp2386 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2387 ___512_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2388 $tmp2387 $const11 	%argrw{"wrr"}
	assign		$tmp2389 $tmp2388 	%argrw{"wr"}
	assign		$tmp2377.w $tmp2389 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4850 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2390.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2390.y $const10 	%argrw{"wr"}
	assign		$tmp2390.z $const10 	%argrw{"wr"}
	assign		$tmp2390.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4850 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2390.x $tmp2377.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2390.y $tmp2377.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2390.z $tmp2377.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2390.w $tmp2377.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4860 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2392.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2392.y $const12 	%argrw{"wr"}
	assign		$tmp2392.z $const12 	%argrw{"wr"}
	assign		$tmp2392.w $const12 	%argrw{"wr"}
	functioncall	$const35 4860 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2391.x ___512_p.x $tmp2392.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2391.y ___512_p.y $tmp2392.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2391.z ___512_p.z $tmp2392.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2391.w ___512_p.w $tmp2392.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4865 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2391.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2391.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2391.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2391.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2393 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2376 $const13 $tmp2393 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	add		$tmp2394 $tmp2376 Offset 	%line{261} %argrw{"wrr"}
	mul		$tmp2395 $tmp2394 ___512_pwr 	%argrw{"wrr"}
	mul		___514_increment $tmp2395 ___512_value 	%argrw{"wrr"}
	add		___512_value ___512_value ___514_increment 	%argrw{"wrr"}
	mul		___512_pwr ___512_pwr roughness 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4882 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2396.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2396.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2396.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2396.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4882 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___512_p.x ___512_p.x $tmp2396.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___512_p.y ___512_p.y $tmp2396.y 	%argrw{"wrr"}
	mul		___512_p.z ___512_p.z $tmp2396.z 	%argrw{"wrr"}
	mul		___512_p.w ___512_p.w $tmp2396.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	assign		$tmp2397 ___513_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{261} %argrw{"wr"}
	add		___513_i ___513_i $const19 	%argrw{"wrr"}
	floor		$tmp2398 detail 	%argrw{"wr"}
	sub		___512_rmd detail $tmp2398 	%argrw{"wrr"}
	neq		$tmp2399 ___512_rmd $const1 	%argrw{"wrr"}
	if		$tmp2399 4937 4937 	%argrw{"r"}
	functioncall	$const9 4932 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2402 ___512_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2403 $tmp2402 $const11 	%argrw{"wrr"}
	assign		$tmp2404 $tmp2403 	%argrw{"wr"}
	assign		$tmp2401.x $tmp2404 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2405 ___512_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2406 $tmp2405 $const11 	%argrw{"wrr"}
	assign		$tmp2407 $tmp2406 	%argrw{"wr"}
	assign		$tmp2401.y $tmp2407 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2408 ___512_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2409 $tmp2408 $const11 	%argrw{"wrr"}
	assign		$tmp2410 $tmp2409 	%argrw{"wr"}
	assign		$tmp2401.z $tmp2410 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2411 ___512_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2412 $tmp2411 $const11 	%argrw{"wrr"}
	assign		$tmp2413 $tmp2412 	%argrw{"wr"}
	assign		$tmp2401.w $tmp2413 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4915 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2414.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2414.y $const10 	%argrw{"wr"}
	assign		$tmp2414.z $const10 	%argrw{"wr"}
	assign		$tmp2414.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 4915 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2414.x $tmp2401.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2414.y $tmp2401.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2414.z $tmp2401.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2414.w $tmp2401.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 4925 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2416.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2416.y $const12 	%argrw{"wr"}
	assign		$tmp2416.z $const12 	%argrw{"wr"}
	assign		$tmp2416.w $const12 	%argrw{"wr"}
	functioncall	$const35 4925 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2415.x ___512_p.x $tmp2416.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2415.y ___512_p.y $tmp2416.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2415.z ___512_p.z $tmp2416.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2415.w ___512_p.w $tmp2416.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4930 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2415.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2415.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2415.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2415.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2417 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2400 $const13 $tmp2417 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	add		$tmp2418 $tmp2400 Offset 	%line{261} %argrw{"wrr"}
	mul		$tmp2419 $tmp2418 ___512_pwr 	%argrw{"wrr"}
	mul		___515_increment $tmp2419 ___512_value 	%argrw{"wrr"}
	mul		$tmp2420 ___512_rmd ___515_increment 	%argrw{"wrr"}
	add		___512_value ___512_value $tmp2420 	%argrw{"wrr"}
	assign		___608_value ___512_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	error		$const29 	%argrw{"r"}
	assign		___608_value $const1 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:219
#                 noise_select(p + random_vector4_offset(4.0),
	functioncall	$const42 4955 	%line{219} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:71
#   return vector4(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp2424 $const8 $const40 $const1 	%line{71} %argrw{"wrrr"}
	mul		$tmp2425 $tmp2424 $const7 	%argrw{"wrr"}
	add		$tmp2423.x $const7 $tmp2425 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:72
#                  100.0 + noise("hash", seed, 1.0) * 100.0,
	noise		$tmp2426 $const8 $const40 $const17 	%line{72} %argrw{"wrrr"}
	mul		$tmp2427 $tmp2426 $const7 	%argrw{"wrr"}
	add		$tmp2423.y $const7 $tmp2427 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:73
#                  100.0 + noise("hash", seed, 2.0) * 100.0,
	noise		$tmp2428 $const8 $const40 $const30 	%line{73} %argrw{"wrrr"}
	mul		$tmp2429 $tmp2428 $const7 	%argrw{"wrr"}
	add		$tmp2423.z $const7 $tmp2429 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:74
#                  100.0 + noise("hash", seed, 3.0) * 100.0);
	noise		$tmp2430 $const8 $const40 $const36 	%line{74} %argrw{"wrrr"}
	mul		$tmp2431 $tmp2430 $const7 	%argrw{"wrr"}
	add		$tmp2423.w $const7 $tmp2431 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 4960 	%line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp2422.x ___608_p.x $tmp2423.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp2422.y ___608_p.y $tmp2423.y 	%argrw{"wrr"}
	add		$tmp2422.z ___608_p.z $tmp2423.z 	%argrw{"wrr"}
	add		$tmp2422.w ___608_p.w $tmp2423.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:219
#                 noise_select(p + random_vector4_offset(4.0),
	functioncall	$const14 5711 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{219} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	eq		$tmp2432 type $const15 	%line{82} %argrw{"wrr"}
	if		$tmp2432 5089 5711 	%argrw{"r"}
	functioncall	$const16 5088 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:254
# NOISE_MULTI_FRACTAL(vector4)
	assign		___496_p.x $tmp2422.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{254} %argrw{"wr"}
	assign		___496_p.y $tmp2422.y 	%argrw{"wr"}
	assign		___496_p.z $tmp2422.z 	%argrw{"wr"}
	assign		___496_p.w $tmp2422.w 	%argrw{"wr"}
	assign		___496_value $const17 	%argrw{"wr"}
	assign		___496_pwr $const17 	%argrw{"wr"}
	for		$tmp2435 4972 4975 5033 5035 	%argrw{"r"}
	assign		___497_i $const18 	%argrw{"wr"}
	assign		$tmp2433 detail 	%argrw{"wr"}
	le		$tmp2434 ___497_i $tmp2433 	%argrw{"wrr"}
	neq		$tmp2435 $tmp2434 $const18 	%argrw{"wrr"}
	functioncall	$const9 5019 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2438 ___496_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2439 $tmp2438 $const11 	%argrw{"wrr"}
	assign		$tmp2440 $tmp2439 	%argrw{"wr"}
	assign		$tmp2437.x $tmp2440 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2441 ___496_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2442 $tmp2441 $const11 	%argrw{"wrr"}
	assign		$tmp2443 $tmp2442 	%argrw{"wr"}
	assign		$tmp2437.y $tmp2443 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2444 ___496_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2445 $tmp2444 $const11 	%argrw{"wrr"}
	assign		$tmp2446 $tmp2445 	%argrw{"wr"}
	assign		$tmp2437.z $tmp2446 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2447 ___496_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2448 $tmp2447 $const11 	%argrw{"wrr"}
	assign		$tmp2449 $tmp2448 	%argrw{"wr"}
	assign		$tmp2437.w $tmp2449 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5002 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2450.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2450.y $const10 	%argrw{"wr"}
	assign		$tmp2450.z $const10 	%argrw{"wr"}
	assign		$tmp2450.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5002 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2450.x $tmp2437.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2450.y $tmp2437.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2450.z $tmp2437.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2450.w $tmp2437.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5012 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2452.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2452.y $const12 	%argrw{"wr"}
	assign		$tmp2452.z $const12 	%argrw{"wr"}
	assign		$tmp2452.w $const12 	%argrw{"wr"}
	functioncall	$const35 5012 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2451.x ___496_p.x $tmp2452.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2451.y ___496_p.y $tmp2452.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2451.z ___496_p.z $tmp2452.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2451.w ___496_p.w $tmp2452.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5017 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2451.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2451.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2451.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2451.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2453 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2436 $const13 $tmp2453 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:254
# NOISE_MULTI_FRACTAL(vector4)
	mul		$tmp2454 ___496_pwr $tmp2436 	%line{254} %argrw{"wrr"}
	add		$tmp2455 $tmp2454 $const17 	%argrw{"wrr"}
	mul		___496_value ___496_value $tmp2455 	%argrw{"wrr"}
	mul		___496_pwr ___496_pwr roughness 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5033 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2456.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2456.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2456.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2456.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5033 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___496_p.x ___496_p.x $tmp2456.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___496_p.y ___496_p.y $tmp2456.y 	%argrw{"wrr"}
	mul		___496_p.z ___496_p.z $tmp2456.z 	%argrw{"wrr"}
	mul		___496_p.w ___496_p.w $tmp2456.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:254
# NOISE_MULTI_FRACTAL(vector4)
	assign		$tmp2457 ___497_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{254} %argrw{"wr"}
	add		___497_i ___497_i $const19 	%argrw{"wrr"}
	floor		$tmp2458 detail 	%argrw{"wr"}
	sub		___496_rmd detail $tmp2458 	%argrw{"wrr"}
	neq		$tmp2459 ___496_rmd $const1 	%argrw{"wrr"}
	if		$tmp2459 5087 5087 	%argrw{"r"}
	mul		$tmp2460 ___496_rmd ___496_pwr 	%argrw{"wrr"}
	functioncall	$const9 5084 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2463 ___496_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2464 $tmp2463 $const11 	%argrw{"wrr"}
	assign		$tmp2465 $tmp2464 	%argrw{"wr"}
	assign		$tmp2462.x $tmp2465 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2466 ___496_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2467 $tmp2466 $const11 	%argrw{"wrr"}
	assign		$tmp2468 $tmp2467 	%argrw{"wr"}
	assign		$tmp2462.y $tmp2468 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2469 ___496_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2470 $tmp2469 $const11 	%argrw{"wrr"}
	assign		$tmp2471 $tmp2470 	%argrw{"wr"}
	assign		$tmp2462.z $tmp2471 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2472 ___496_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2473 $tmp2472 $const11 	%argrw{"wrr"}
	assign		$tmp2474 $tmp2473 	%argrw{"wr"}
	assign		$tmp2462.w $tmp2474 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5067 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2475.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2475.y $const10 	%argrw{"wr"}
	assign		$tmp2475.z $const10 	%argrw{"wr"}
	assign		$tmp2475.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5067 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2475.x $tmp2462.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2475.y $tmp2462.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2475.z $tmp2462.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2475.w $tmp2462.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5077 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2477.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2477.y $const12 	%argrw{"wr"}
	assign		$tmp2477.z $const12 	%argrw{"wr"}
	assign		$tmp2477.w $const12 	%argrw{"wr"}
	functioncall	$const35 5077 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2476.x ___496_p.x $tmp2477.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2476.y ___496_p.y $tmp2477.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2476.z ___496_p.z $tmp2477.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2476.w ___496_p.w $tmp2477.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5082 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2476.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2476.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2476.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2476.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2478 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2461 $const13 $tmp2478 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:254
# NOISE_MULTI_FRACTAL(vector4)
	mul		$tmp2479 $tmp2460 $tmp2461 	%line{254} %argrw{"wrr"}
	add		$tmp2480 $tmp2479 $const17 	%argrw{"wrr"}
	mul		___496_value ___496_value $tmp2480 	%argrw{"wrr"}
	assign		$tmp2421 ___496_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	eq		$tmp2481 type $const20 	%argrw{"wrr"}
	if		$tmp2481 5244 5711 	%argrw{"r"}
	functioncall	$const21 5243 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	assign		___479_p.x $tmp2422.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{247} %argrw{"wr"}
	assign		___479_p.y $tmp2422.y 	%argrw{"wr"}
	assign		___479_p.z $tmp2422.z 	%argrw{"wr"}
	assign		___479_p.w $tmp2422.w 	%argrw{"wr"}
	assign		___479_fscale $const17 	%argrw{"wr"}
	assign		___479_amp $const17 	%argrw{"wr"}
	assign		___479_maxamp $const1 	%argrw{"wr"}
	assign		___479_sum $const1 	%argrw{"wr"}
	for		$tmp2484 5102 5105 5164 5166 	%argrw{"r"}
	assign		___480_i $const18 	%argrw{"wr"}
	assign		$tmp2482 detail 	%argrw{"wr"}
	le		$tmp2483 ___480_i $tmp2482 	%argrw{"wrr"}
	neq		$tmp2484 $tmp2483 $const18 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5115 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2486.x ___479_fscale 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2486.y ___479_fscale 	%argrw{"wr"}
	assign		$tmp2486.z ___479_fscale 	%argrw{"wr"}
	assign		$tmp2486.w ___479_fscale 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5115 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp2485.x $tmp2486.x ___479_p.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp2485.y $tmp2486.y ___479_p.y 	%argrw{"wrr"}
	mul		$tmp2485.z $tmp2486.z ___479_p.z 	%argrw{"wrr"}
	mul		$tmp2485.w $tmp2486.w ___479_p.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	functioncall	$const9 5159 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{247} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2488 $tmp2485.x 	%line{96} %argrw{"wr"}
	ge		$tmp2489 $tmp2488 $const11 	%argrw{"wrr"}
	assign		$tmp2490 $tmp2489 	%argrw{"wr"}
	assign		$tmp2487.x $tmp2490 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2491 $tmp2485.y 	%line{97} %argrw{"wr"}
	ge		$tmp2492 $tmp2491 $const11 	%argrw{"wrr"}
	assign		$tmp2493 $tmp2492 	%argrw{"wr"}
	assign		$tmp2487.y $tmp2493 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2494 $tmp2485.z 	%line{98} %argrw{"wr"}
	ge		$tmp2495 $tmp2494 $const11 	%argrw{"wrr"}
	assign		$tmp2496 $tmp2495 	%argrw{"wr"}
	assign		$tmp2487.z $tmp2496 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2497 $tmp2485.w 	%line{99} %argrw{"wr"}
	ge		$tmp2498 $tmp2497 $const11 	%argrw{"wrr"}
	assign		$tmp2499 $tmp2498 	%argrw{"wr"}
	assign		$tmp2487.w $tmp2499 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5142 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2500.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2500.y $const10 	%argrw{"wr"}
	assign		$tmp2500.z $const10 	%argrw{"wr"}
	assign		$tmp2500.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5142 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2500.x $tmp2487.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2500.y $tmp2487.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2500.z $tmp2487.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2500.w $tmp2487.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5152 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2502.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2502.y $const12 	%argrw{"wr"}
	assign		$tmp2502.z $const12 	%argrw{"wr"}
	assign		$tmp2502.w $const12 	%argrw{"wr"}
	functioncall	$const35 5152 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2501.x $tmp2485.x $tmp2502.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2501.y $tmp2485.y $tmp2502.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2501.z $tmp2485.z $tmp2502.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2501.w $tmp2485.w $tmp2502.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5157 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2501.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2501.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2501.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2501.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2503 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		___481_t $const13 $tmp2503 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	mul		$tmp2504 ___481_t ___479_amp 	%line{247} %argrw{"wrr"}
	add		___479_sum ___479_sum $tmp2504 	%argrw{"wrr"}
	add		___479_maxamp ___479_maxamp ___479_amp 	%argrw{"wrr"}
	mul		___479_amp ___479_amp roughness 	%argrw{"wrr"}
	mul		___479_fscale ___479_fscale Lacunarity 	%argrw{"wrr"}
	assign		$tmp2505 ___480_i 	%argrw{"wr"}
	add		___480_i ___480_i $const19 	%argrw{"wrr"}
	floor		$tmp2506 detail 	%argrw{"wr"}
	sub		___479_rmd detail $tmp2506 	%argrw{"wrr"}
	neq		$tmp2507 ___479_rmd $const1 	%argrw{"wrr"}
	if		$tmp2507 5237 5243 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5180 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2509.x ___479_fscale 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2509.y ___479_fscale 	%argrw{"wr"}
	assign		$tmp2509.z ___479_fscale 	%argrw{"wr"}
	assign		$tmp2509.w ___479_fscale 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5180 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp2508.x $tmp2509.x ___479_p.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp2508.y $tmp2509.y ___479_p.y 	%argrw{"wrr"}
	mul		$tmp2508.z $tmp2509.z ___479_p.z 	%argrw{"wrr"}
	mul		$tmp2508.w $tmp2509.w ___479_p.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	functioncall	$const9 5224 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{247} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2511 $tmp2508.x 	%line{96} %argrw{"wr"}
	ge		$tmp2512 $tmp2511 $const11 	%argrw{"wrr"}
	assign		$tmp2513 $tmp2512 	%argrw{"wr"}
	assign		$tmp2510.x $tmp2513 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2514 $tmp2508.y 	%line{97} %argrw{"wr"}
	ge		$tmp2515 $tmp2514 $const11 	%argrw{"wrr"}
	assign		$tmp2516 $tmp2515 	%argrw{"wr"}
	assign		$tmp2510.y $tmp2516 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2517 $tmp2508.z 	%line{98} %argrw{"wr"}
	ge		$tmp2518 $tmp2517 $const11 	%argrw{"wrr"}
	assign		$tmp2519 $tmp2518 	%argrw{"wr"}
	assign		$tmp2510.z $tmp2519 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2520 $tmp2508.w 	%line{99} %argrw{"wr"}
	ge		$tmp2521 $tmp2520 $const11 	%argrw{"wrr"}
	assign		$tmp2522 $tmp2521 	%argrw{"wr"}
	assign		$tmp2510.w $tmp2522 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5207 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2523.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2523.y $const10 	%argrw{"wr"}
	assign		$tmp2523.z $const10 	%argrw{"wr"}
	assign		$tmp2523.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5207 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2523.x $tmp2510.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2523.y $tmp2510.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2523.z $tmp2510.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2523.w $tmp2510.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5217 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2525.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2525.y $const12 	%argrw{"wr"}
	assign		$tmp2525.z $const12 	%argrw{"wr"}
	assign		$tmp2525.w $const12 	%argrw{"wr"}
	functioncall	$const35 5217 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2524.x $tmp2508.x $tmp2525.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2524.y $tmp2508.y $tmp2525.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2524.z $tmp2508.z $tmp2525.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2524.w $tmp2508.w $tmp2525.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5222 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2524.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2524.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2524.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2524.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2526 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		___482_t $const13 $tmp2526 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	mul		$tmp2527 ___482_t ___479_amp 	%line{247} %argrw{"wrr"}
	add		___482_sum2 ___479_sum $tmp2527 	%argrw{"wrr"}
	if		use_normalize 5235 5236 	%argrw{"r"}
	mul		$tmp2528 $const10 ___479_sum 	%argrw{"wrr"}
	div		$tmp2529 $tmp2528 ___479_maxamp 	%argrw{"wrr"}
	add		$tmp2530 $tmp2529 $const10 	%argrw{"wrr"}
	mul		$tmp2531 $const10 ___482_sum2 	%argrw{"wrr"}
	add		$tmp2532 ___479_maxamp ___479_amp 	%argrw{"wrr"}
	div		$tmp2533 $tmp2531 $tmp2532 	%argrw{"wrr"}
	add		$tmp2534 $tmp2533 $const10 	%argrw{"wrr"}
	mix		$tmp2421 $tmp2530 $tmp2534 ___479_rmd 	%argrw{"wrrr"}
	mix		$tmp2421 ___479_sum ___482_sum2 ___479_rmd 	%argrw{"wrrr"}
	return
	if		use_normalize 5241 5242 	%argrw{"r"}
	mul		$tmp2535 $const10 ___479_sum 	%argrw{"wrr"}
	div		$tmp2536 $tmp2535 ___479_maxamp 	%argrw{"wrr"}
	add		$tmp2421 $tmp2536 $const10 	%argrw{"wrr"}
	assign		$tmp2421 ___479_sum 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	eq		$tmp2537 type $const22 	%argrw{"wrr"}
	if		$tmp2537 5393 5711 	%argrw{"r"}
	functioncall	$const23 5392 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:268
# NOISE_HYBRID_MULTI_FRACTAL(vector4)
	assign		___534_p.x $tmp2422.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{268} %argrw{"wr"}
	assign		___534_p.y $tmp2422.y 	%argrw{"wr"}
	assign		___534_p.z $tmp2422.z 	%argrw{"wr"}
	assign		___534_p.w $tmp2422.w 	%argrw{"wr"}
	assign		___534_pwr $const17 	%argrw{"wr"}
	assign		___534_value $const1 	%argrw{"wr"}
	assign		___534_weight $const17 	%argrw{"wr"}
	for		$tmp2543 5256 5264 5328 5330 	%argrw{"r"}
	assign		___535_i $const18 	%argrw{"wr"}
	gt		$tmp2538 ___534_weight $const24 	%argrw{"wrr"}
	neq		$tmp2539 $tmp2538 $const18 	%argrw{"wrr"}
	if		$tmp2539 5263 5263 	%argrw{"r"}
	assign		$tmp2540 detail 	%argrw{"wr"}
	le		$tmp2541 ___535_i $tmp2540 	%argrw{"wrr"}
	neq		$tmp2542 $tmp2541 $const18 	%argrw{"wrr"}
	assign		$tmp2539 $tmp2542 	%argrw{"wr"}
	neq		$tmp2543 $tmp2539 $const18 	%argrw{"wrr"}
	gt		$tmp2544 ___534_weight $const17 	%argrw{"wrr"}
	if		$tmp2544 5267 5267 	%argrw{"r"}
	assign		___534_weight $const17 	%argrw{"wr"}
	functioncall	$const9 5311 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2547 ___534_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2548 $tmp2547 $const11 	%argrw{"wrr"}
	assign		$tmp2549 $tmp2548 	%argrw{"wr"}
	assign		$tmp2546.x $tmp2549 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2550 ___534_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2551 $tmp2550 $const11 	%argrw{"wrr"}
	assign		$tmp2552 $tmp2551 	%argrw{"wr"}
	assign		$tmp2546.y $tmp2552 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2553 ___534_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2554 $tmp2553 $const11 	%argrw{"wrr"}
	assign		$tmp2555 $tmp2554 	%argrw{"wr"}
	assign		$tmp2546.z $tmp2555 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2556 ___534_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2557 $tmp2556 $const11 	%argrw{"wrr"}
	assign		$tmp2558 $tmp2557 	%argrw{"wr"}
	assign		$tmp2546.w $tmp2558 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5294 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2559.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2559.y $const10 	%argrw{"wr"}
	assign		$tmp2559.z $const10 	%argrw{"wr"}
	assign		$tmp2559.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5294 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2559.x $tmp2546.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2559.y $tmp2546.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2559.z $tmp2546.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2559.w $tmp2546.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5304 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2561.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2561.y $const12 	%argrw{"wr"}
	assign		$tmp2561.z $const12 	%argrw{"wr"}
	assign		$tmp2561.w $const12 	%argrw{"wr"}
	functioncall	$const35 5304 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2560.x ___534_p.x $tmp2561.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2560.y ___534_p.y $tmp2561.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2560.z ___534_p.z $tmp2561.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2560.w ___534_p.w $tmp2561.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5309 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2560.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2560.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2560.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2560.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2562 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2545 $const13 $tmp2562 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:268
# NOISE_HYBRID_MULTI_FRACTAL(vector4)
	add		$tmp2563 $tmp2545 Offset 	%line{268} %argrw{"wrr"}
	mul		___536_signal $tmp2563 ___534_pwr 	%argrw{"wrr"}
	mul		___534_pwr ___534_pwr roughness 	%argrw{"wrr"}
	mul		$tmp2564 ___534_weight ___536_signal 	%argrw{"wrr"}
	add		___534_value ___534_value $tmp2564 	%argrw{"wrr"}
	mul		$tmp2565 Gain ___536_signal 	%argrw{"wrr"}
	mul		___534_weight ___534_weight $tmp2565 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5328 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2566.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2566.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2566.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2566.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5328 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___534_p.x ___534_p.x $tmp2566.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___534_p.y ___534_p.y $tmp2566.y 	%argrw{"wrr"}
	mul		___534_p.z ___534_p.z $tmp2566.z 	%argrw{"wrr"}
	mul		___534_p.w ___534_p.w $tmp2566.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:268
# NOISE_HYBRID_MULTI_FRACTAL(vector4)
	assign		$tmp2567 ___535_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{268} %argrw{"wr"}
	add		___535_i ___535_i $const19 	%argrw{"wrr"}
	floor		$tmp2568 detail 	%argrw{"wr"}
	sub		___534_rmd detail $tmp2568 	%argrw{"wrr"}
	neq		$tmp2569 ___534_rmd $const1 	%argrw{"wrr"}
	neq		$tmp2570 $tmp2569 $const18 	%argrw{"wrr"}
	if		$tmp2570 5338 5338 	%argrw{"r"}
	gt		$tmp2571 ___534_weight $const24 	%argrw{"wrr"}
	neq		$tmp2572 $tmp2571 $const18 	%argrw{"wrr"}
	assign		$tmp2570 $tmp2572 	%argrw{"wr"}
	if		$tmp2570 5391 5391 	%argrw{"r"}
	gt		$tmp2573 ___534_weight $const17 	%argrw{"wrr"}
	if		$tmp2573 5342 5342 	%argrw{"r"}
	assign		___534_weight $const17 	%argrw{"wr"}
	functioncall	$const9 5386 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2576 ___534_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2577 $tmp2576 $const11 	%argrw{"wrr"}
	assign		$tmp2578 $tmp2577 	%argrw{"wr"}
	assign		$tmp2575.x $tmp2578 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2579 ___534_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2580 $tmp2579 $const11 	%argrw{"wrr"}
	assign		$tmp2581 $tmp2580 	%argrw{"wr"}
	assign		$tmp2575.y $tmp2581 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2582 ___534_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2583 $tmp2582 $const11 	%argrw{"wrr"}
	assign		$tmp2584 $tmp2583 	%argrw{"wr"}
	assign		$tmp2575.z $tmp2584 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2585 ___534_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2586 $tmp2585 $const11 	%argrw{"wrr"}
	assign		$tmp2587 $tmp2586 	%argrw{"wr"}
	assign		$tmp2575.w $tmp2587 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5369 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2588.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2588.y $const10 	%argrw{"wr"}
	assign		$tmp2588.z $const10 	%argrw{"wr"}
	assign		$tmp2588.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5369 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2588.x $tmp2575.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2588.y $tmp2575.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2588.z $tmp2575.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2588.w $tmp2575.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5379 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2590.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2590.y $const12 	%argrw{"wr"}
	assign		$tmp2590.z $const12 	%argrw{"wr"}
	assign		$tmp2590.w $const12 	%argrw{"wr"}
	functioncall	$const35 5379 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2589.x ___534_p.x $tmp2590.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2589.y ___534_p.y $tmp2590.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2589.z ___534_p.z $tmp2590.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2589.w ___534_p.w $tmp2590.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5384 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2589.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2589.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2589.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2589.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2591 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2574 $const13 $tmp2591 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:268
# NOISE_HYBRID_MULTI_FRACTAL(vector4)
	add		$tmp2592 $tmp2574 Offset 	%line{268} %argrw{"wrr"}
	mul		___538_signal $tmp2592 ___534_pwr 	%argrw{"wrr"}
	mul		$tmp2593 ___534_rmd ___534_weight 	%argrw{"wrr"}
	mul		$tmp2594 $tmp2593 ___538_signal 	%argrw{"wrr"}
	add		___534_value ___534_value $tmp2594 	%argrw{"wrr"}
	assign		$tmp2421 ___534_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	eq		$tmp2595 type $const25 	%argrw{"wrr"}
	if		$tmp2595 5524 5711 	%argrw{"r"}
	functioncall	$const26 5523 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	assign		___549_p.x $tmp2422.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{275} %argrw{"wr"}
	assign		___549_p.y $tmp2422.y 	%argrw{"wr"}
	assign		___549_p.z $tmp2422.z 	%argrw{"wr"}
	assign		___549_p.w $tmp2422.w 	%argrw{"wr"}
	assign		___549_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 5445 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2599 ___549_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2600 $tmp2599 $const11 	%argrw{"wrr"}
	assign		$tmp2601 $tmp2600 	%argrw{"wr"}
	assign		$tmp2598.x $tmp2601 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2602 ___549_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2603 $tmp2602 $const11 	%argrw{"wrr"}
	assign		$tmp2604 $tmp2603 	%argrw{"wr"}
	assign		$tmp2598.y $tmp2604 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2605 ___549_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2606 $tmp2605 $const11 	%argrw{"wrr"}
	assign		$tmp2607 $tmp2606 	%argrw{"wr"}
	assign		$tmp2598.z $tmp2607 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2608 ___549_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2609 $tmp2608 $const11 	%argrw{"wrr"}
	assign		$tmp2610 $tmp2609 	%argrw{"wr"}
	assign		$tmp2598.w $tmp2610 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5428 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2611.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2611.y $const10 	%argrw{"wr"}
	assign		$tmp2611.z $const10 	%argrw{"wr"}
	assign		$tmp2611.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5428 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2611.x $tmp2598.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2611.y $tmp2598.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2611.z $tmp2598.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2611.w $tmp2598.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5438 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2613.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2613.y $const12 	%argrw{"wr"}
	assign		$tmp2613.z $const12 	%argrw{"wr"}
	assign		$tmp2613.w $const12 	%argrw{"wr"}
	functioncall	$const35 5438 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2612.x ___549_p.x $tmp2613.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2612.y ___549_p.y $tmp2613.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2612.z ___549_p.z $tmp2613.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2612.w ___549_p.w $tmp2613.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5443 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2612.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2612.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2612.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2612.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2614 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2597 $const13 $tmp2614 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	fabs		$tmp2596 $tmp2597 	%line{275} %argrw{"wr"}
	sub		___549_signal Offset $tmp2596 	%argrw{"wrr"}
	mul		___549_signal ___549_signal ___549_signal 	%argrw{"wrr"}
	assign		___549_value ___549_signal 	%argrw{"wr"}
	assign		___549_weight $const17 	%argrw{"wr"}
	for		$tmp2617 5452 5455 5520 5522 	%argrw{"r"}
	assign		___550_i $const19 	%argrw{"wr"}
	assign		$tmp2615 detail 	%argrw{"wr"}
	le		$tmp2616 ___550_i $tmp2615 	%argrw{"wrr"}
	neq		$tmp2617 $tmp2616 $const18 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5465 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2618.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2618.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2618.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2618.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5465 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___549_p.x ___549_p.x $tmp2618.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___549_p.y ___549_p.y $tmp2618.y 	%argrw{"wrr"}
	mul		___549_p.z ___549_p.z $tmp2618.z 	%argrw{"wrr"}
	mul		___549_p.w ___549_p.w $tmp2618.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	mul		$tmp2619 ___549_signal Gain 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{275} %argrw{"wrr"}
	functioncall	$const3 5469 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp2620 $tmp2619 $const17 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___549_weight $tmp2620 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	functioncall	$const9 5513 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{275} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2624 ___549_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2625 $tmp2624 $const11 	%argrw{"wrr"}
	assign		$tmp2626 $tmp2625 	%argrw{"wr"}
	assign		$tmp2623.x $tmp2626 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2627 ___549_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2628 $tmp2627 $const11 	%argrw{"wrr"}
	assign		$tmp2629 $tmp2628 	%argrw{"wr"}
	assign		$tmp2623.y $tmp2629 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2630 ___549_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2631 $tmp2630 $const11 	%argrw{"wrr"}
	assign		$tmp2632 $tmp2631 	%argrw{"wr"}
	assign		$tmp2623.z $tmp2632 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2633 ___549_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2634 $tmp2633 $const11 	%argrw{"wrr"}
	assign		$tmp2635 $tmp2634 	%argrw{"wr"}
	assign		$tmp2623.w $tmp2635 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5496 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2636.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2636.y $const10 	%argrw{"wr"}
	assign		$tmp2636.z $const10 	%argrw{"wr"}
	assign		$tmp2636.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5496 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2636.x $tmp2623.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2636.y $tmp2623.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2636.z $tmp2623.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2636.w $tmp2623.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5506 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2638.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2638.y $const12 	%argrw{"wr"}
	assign		$tmp2638.z $const12 	%argrw{"wr"}
	assign		$tmp2638.w $const12 	%argrw{"wr"}
	functioncall	$const35 5506 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2637.x ___549_p.x $tmp2638.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2637.y ___549_p.y $tmp2638.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2637.z ___549_p.z $tmp2638.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2637.w ___549_p.w $tmp2638.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5511 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2637.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2637.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2637.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2637.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2639 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2622 $const13 $tmp2639 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	fabs		$tmp2621 $tmp2622 	%line{275} %argrw{"wr"}
	sub		___549_signal Offset $tmp2621 	%argrw{"wrr"}
	mul		___549_signal ___549_signal ___549_signal 	%argrw{"wrr"}
	mul		___549_signal ___549_signal ___549_weight 	%argrw{"wrr"}
	mul		$tmp2640 ___549_signal ___549_pwr 	%argrw{"wrr"}
	add		___549_value ___549_value $tmp2640 	%argrw{"wrr"}
	mul		___549_pwr ___549_pwr roughness 	%argrw{"wrr"}
	assign		$tmp2641 ___550_i 	%argrw{"wr"}
	add		___550_i ___550_i $const19 	%argrw{"wrr"}
	assign		$tmp2421 ___549_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	eq		$tmp2642 type $const27 	%argrw{"wrr"}
	if		$tmp2642 5708 5711 	%argrw{"r"}
	functioncall	$const28 5707 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	assign		___512_p.x $tmp2422.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{261} %argrw{"wr"}
	assign		___512_p.y $tmp2422.y 	%argrw{"wr"}
	assign		___512_p.z $tmp2422.z 	%argrw{"wr"}
	assign		___512_p.w $tmp2422.w 	%argrw{"wr"}
	assign		___512_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 5576 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2645 ___512_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2646 $tmp2645 $const11 	%argrw{"wrr"}
	assign		$tmp2647 $tmp2646 	%argrw{"wr"}
	assign		$tmp2644.x $tmp2647 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2648 ___512_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2649 $tmp2648 $const11 	%argrw{"wrr"}
	assign		$tmp2650 $tmp2649 	%argrw{"wr"}
	assign		$tmp2644.y $tmp2650 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2651 ___512_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2652 $tmp2651 $const11 	%argrw{"wrr"}
	assign		$tmp2653 $tmp2652 	%argrw{"wr"}
	assign		$tmp2644.z $tmp2653 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2654 ___512_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2655 $tmp2654 $const11 	%argrw{"wrr"}
	assign		$tmp2656 $tmp2655 	%argrw{"wr"}
	assign		$tmp2644.w $tmp2656 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5559 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2657.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2657.y $const10 	%argrw{"wr"}
	assign		$tmp2657.z $const10 	%argrw{"wr"}
	assign		$tmp2657.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5559 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2657.x $tmp2644.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2657.y $tmp2644.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2657.z $tmp2644.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2657.w $tmp2644.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5569 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2659.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2659.y $const12 	%argrw{"wr"}
	assign		$tmp2659.z $const12 	%argrw{"wr"}
	assign		$tmp2659.w $const12 	%argrw{"wr"}
	functioncall	$const35 5569 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2658.x ___512_p.x $tmp2659.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2658.y ___512_p.y $tmp2659.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2658.z ___512_p.z $tmp2659.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2658.w ___512_p.w $tmp2659.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5574 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2658.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2658.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2658.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2658.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2660 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2643 $const13 $tmp2660 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	add		___512_value Offset $tmp2643 	%line{261} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5587 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2661.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2661.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2661.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2661.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5587 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___512_p.x ___512_p.x $tmp2661.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___512_p.y ___512_p.y $tmp2661.y 	%argrw{"wrr"}
	mul		___512_p.z ___512_p.z $tmp2661.z 	%argrw{"wrr"}
	mul		___512_p.w ___512_p.w $tmp2661.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	for		$tmp2664 5589 5592 5651 5653 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{261} %argrw{"r"}
	assign		___513_i $const19 	%argrw{"wr"}
	assign		$tmp2662 detail 	%argrw{"wr"}
	le		$tmp2663 ___513_i $tmp2662 	%argrw{"wrr"}
	neq		$tmp2664 $tmp2663 $const18 	%argrw{"wrr"}
	functioncall	$const9 5636 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2667 ___512_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2668 $tmp2667 $const11 	%argrw{"wrr"}
	assign		$tmp2669 $tmp2668 	%argrw{"wr"}
	assign		$tmp2666.x $tmp2669 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2670 ___512_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2671 $tmp2670 $const11 	%argrw{"wrr"}
	assign		$tmp2672 $tmp2671 	%argrw{"wr"}
	assign		$tmp2666.y $tmp2672 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2673 ___512_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2674 $tmp2673 $const11 	%argrw{"wrr"}
	assign		$tmp2675 $tmp2674 	%argrw{"wr"}
	assign		$tmp2666.z $tmp2675 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2676 ___512_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2677 $tmp2676 $const11 	%argrw{"wrr"}
	assign		$tmp2678 $tmp2677 	%argrw{"wr"}
	assign		$tmp2666.w $tmp2678 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5619 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2679.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2679.y $const10 	%argrw{"wr"}
	assign		$tmp2679.z $const10 	%argrw{"wr"}
	assign		$tmp2679.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5619 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2679.x $tmp2666.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2679.y $tmp2666.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2679.z $tmp2666.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2679.w $tmp2666.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5629 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2681.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2681.y $const12 	%argrw{"wr"}
	assign		$tmp2681.z $const12 	%argrw{"wr"}
	assign		$tmp2681.w $const12 	%argrw{"wr"}
	functioncall	$const35 5629 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2680.x ___512_p.x $tmp2681.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2680.y ___512_p.y $tmp2681.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2680.z ___512_p.z $tmp2681.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2680.w ___512_p.w $tmp2681.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5634 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2680.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2680.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2680.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2680.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2682 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2665 $const13 $tmp2682 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	add		$tmp2683 $tmp2665 Offset 	%line{261} %argrw{"wrr"}
	mul		$tmp2684 $tmp2683 ___512_pwr 	%argrw{"wrr"}
	mul		___514_increment $tmp2684 ___512_value 	%argrw{"wrr"}
	add		___512_value ___512_value ___514_increment 	%argrw{"wrr"}
	mul		___512_pwr ___512_pwr roughness 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5651 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2685.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2685.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2685.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2685.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5651 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___512_p.x ___512_p.x $tmp2685.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___512_p.y ___512_p.y $tmp2685.y 	%argrw{"wrr"}
	mul		___512_p.z ___512_p.z $tmp2685.z 	%argrw{"wrr"}
	mul		___512_p.w ___512_p.w $tmp2685.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	assign		$tmp2686 ___513_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{261} %argrw{"wr"}
	add		___513_i ___513_i $const19 	%argrw{"wrr"}
	floor		$tmp2687 detail 	%argrw{"wr"}
	sub		___512_rmd detail $tmp2687 	%argrw{"wrr"}
	neq		$tmp2688 ___512_rmd $const1 	%argrw{"wrr"}
	if		$tmp2688 5706 5706 	%argrw{"r"}
	functioncall	$const9 5701 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2691 ___512_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2692 $tmp2691 $const11 	%argrw{"wrr"}
	assign		$tmp2693 $tmp2692 	%argrw{"wr"}
	assign		$tmp2690.x $tmp2693 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2694 ___512_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2695 $tmp2694 $const11 	%argrw{"wrr"}
	assign		$tmp2696 $tmp2695 	%argrw{"wr"}
	assign		$tmp2690.y $tmp2696 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2697 ___512_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2698 $tmp2697 $const11 	%argrw{"wrr"}
	assign		$tmp2699 $tmp2698 	%argrw{"wr"}
	assign		$tmp2690.z $tmp2699 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2700 ___512_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2701 $tmp2700 $const11 	%argrw{"wrr"}
	assign		$tmp2702 $tmp2701 	%argrw{"wr"}
	assign		$tmp2690.w $tmp2702 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5684 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2703.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2703.y $const10 	%argrw{"wr"}
	assign		$tmp2703.z $const10 	%argrw{"wr"}
	assign		$tmp2703.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5684 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2703.x $tmp2690.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2703.y $tmp2690.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2703.z $tmp2690.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2703.w $tmp2690.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5694 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2705.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2705.y $const12 	%argrw{"wr"}
	assign		$tmp2705.z $const12 	%argrw{"wr"}
	assign		$tmp2705.w $const12 	%argrw{"wr"}
	functioncall	$const35 5694 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2704.x ___512_p.x $tmp2705.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2704.y ___512_p.y $tmp2705.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2704.z ___512_p.z $tmp2705.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2704.w ___512_p.w $tmp2705.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5699 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2704.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2704.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2704.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2704.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2706 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2689 $const13 $tmp2706 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	add		$tmp2707 $tmp2689 Offset 	%line{261} %argrw{"wrr"}
	mul		$tmp2708 $tmp2707 ___512_pwr 	%argrw{"wrr"}
	mul		___515_increment $tmp2708 ___512_value 	%argrw{"wrr"}
	mul		$tmp2709 ___512_rmd ___515_increment 	%argrw{"wrr"}
	add		___512_value ___512_value $tmp2709 	%argrw{"wrr"}
	assign		$tmp2421 ___512_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	error		$const29 	%argrw{"r"}
	assign		$tmp2421 $const1 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:227
#                 noise_select(p + random_vector4_offset(5.0),
	functioncall	$const42 5724 	%line{227} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:71
#   return vector4(100.0 + noise("hash", seed, 0.0) * 100.0,
	noise		$tmp2713 $const8 $const43 $const1 	%line{71} %argrw{"wrrr"}
	mul		$tmp2714 $tmp2713 $const7 	%argrw{"wrr"}
	add		$tmp2712.x $const7 $tmp2714 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:72
#                  100.0 + noise("hash", seed, 1.0) * 100.0,
	noise		$tmp2715 $const8 $const43 $const17 	%line{72} %argrw{"wrrr"}
	mul		$tmp2716 $tmp2715 $const7 	%argrw{"wrr"}
	add		$tmp2712.y $const7 $tmp2716 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:73
#                  100.0 + noise("hash", seed, 2.0) * 100.0,
	noise		$tmp2717 $const8 $const43 $const30 	%line{73} %argrw{"wrrr"}
	mul		$tmp2718 $tmp2717 $const7 	%argrw{"wrr"}
	add		$tmp2712.z $const7 $tmp2718 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:74
#                  100.0 + noise("hash", seed, 3.0) * 100.0);
	noise		$tmp2719 $const8 $const43 $const36 	%line{74} %argrw{"wrrr"}
	mul		$tmp2720 $tmp2719 $const7 	%argrw{"wrr"}
	add		$tmp2712.w $const7 $tmp2720 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5729 	%line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp2711.x ___608_p.x $tmp2712.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp2711.y ___608_p.y $tmp2712.y 	%argrw{"wrr"}
	add		$tmp2711.z ___608_p.z $tmp2712.z 	%argrw{"wrr"}
	add		$tmp2711.w ___608_p.w $tmp2712.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:227
#                 noise_select(p + random_vector4_offset(5.0),
	functioncall	$const14 6480 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{227} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	eq		$tmp2721 type $const15 	%line{82} %argrw{"wrr"}
	if		$tmp2721 5858 6480 	%argrw{"r"}
	functioncall	$const16 5857 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:254
# NOISE_MULTI_FRACTAL(vector4)
	assign		___496_p.x $tmp2711.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{254} %argrw{"wr"}
	assign		___496_p.y $tmp2711.y 	%argrw{"wr"}
	assign		___496_p.z $tmp2711.z 	%argrw{"wr"}
	assign		___496_p.w $tmp2711.w 	%argrw{"wr"}
	assign		___496_value $const17 	%argrw{"wr"}
	assign		___496_pwr $const17 	%argrw{"wr"}
	for		$tmp2724 5741 5744 5802 5804 	%argrw{"r"}
	assign		___497_i $const18 	%argrw{"wr"}
	assign		$tmp2722 detail 	%argrw{"wr"}
	le		$tmp2723 ___497_i $tmp2722 	%argrw{"wrr"}
	neq		$tmp2724 $tmp2723 $const18 	%argrw{"wrr"}
	functioncall	$const9 5788 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2727 ___496_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2728 $tmp2727 $const11 	%argrw{"wrr"}
	assign		$tmp2729 $tmp2728 	%argrw{"wr"}
	assign		$tmp2726.x $tmp2729 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2730 ___496_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2731 $tmp2730 $const11 	%argrw{"wrr"}
	assign		$tmp2732 $tmp2731 	%argrw{"wr"}
	assign		$tmp2726.y $tmp2732 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2733 ___496_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2734 $tmp2733 $const11 	%argrw{"wrr"}
	assign		$tmp2735 $tmp2734 	%argrw{"wr"}
	assign		$tmp2726.z $tmp2735 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2736 ___496_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2737 $tmp2736 $const11 	%argrw{"wrr"}
	assign		$tmp2738 $tmp2737 	%argrw{"wr"}
	assign		$tmp2726.w $tmp2738 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5771 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2739.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2739.y $const10 	%argrw{"wr"}
	assign		$tmp2739.z $const10 	%argrw{"wr"}
	assign		$tmp2739.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5771 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2739.x $tmp2726.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2739.y $tmp2726.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2739.z $tmp2726.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2739.w $tmp2726.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5781 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2741.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2741.y $const12 	%argrw{"wr"}
	assign		$tmp2741.z $const12 	%argrw{"wr"}
	assign		$tmp2741.w $const12 	%argrw{"wr"}
	functioncall	$const35 5781 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2740.x ___496_p.x $tmp2741.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2740.y ___496_p.y $tmp2741.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2740.z ___496_p.z $tmp2741.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2740.w ___496_p.w $tmp2741.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5786 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2740.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2740.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2740.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2740.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2742 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2725 $const13 $tmp2742 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:254
# NOISE_MULTI_FRACTAL(vector4)
	mul		$tmp2743 ___496_pwr $tmp2725 	%line{254} %argrw{"wrr"}
	add		$tmp2744 $tmp2743 $const17 	%argrw{"wrr"}
	mul		___496_value ___496_value $tmp2744 	%argrw{"wrr"}
	mul		___496_pwr ___496_pwr roughness 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5802 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2745.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2745.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2745.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2745.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5802 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___496_p.x ___496_p.x $tmp2745.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___496_p.y ___496_p.y $tmp2745.y 	%argrw{"wrr"}
	mul		___496_p.z ___496_p.z $tmp2745.z 	%argrw{"wrr"}
	mul		___496_p.w ___496_p.w $tmp2745.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:254
# NOISE_MULTI_FRACTAL(vector4)
	assign		$tmp2746 ___497_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{254} %argrw{"wr"}
	add		___497_i ___497_i $const19 	%argrw{"wrr"}
	floor		$tmp2747 detail 	%argrw{"wr"}
	sub		___496_rmd detail $tmp2747 	%argrw{"wrr"}
	neq		$tmp2748 ___496_rmd $const1 	%argrw{"wrr"}
	if		$tmp2748 5856 5856 	%argrw{"r"}
	mul		$tmp2749 ___496_rmd ___496_pwr 	%argrw{"wrr"}
	functioncall	$const9 5853 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2752 ___496_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2753 $tmp2752 $const11 	%argrw{"wrr"}
	assign		$tmp2754 $tmp2753 	%argrw{"wr"}
	assign		$tmp2751.x $tmp2754 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2755 ___496_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2756 $tmp2755 $const11 	%argrw{"wrr"}
	assign		$tmp2757 $tmp2756 	%argrw{"wr"}
	assign		$tmp2751.y $tmp2757 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2758 ___496_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2759 $tmp2758 $const11 	%argrw{"wrr"}
	assign		$tmp2760 $tmp2759 	%argrw{"wr"}
	assign		$tmp2751.z $tmp2760 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2761 ___496_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2762 $tmp2761 $const11 	%argrw{"wrr"}
	assign		$tmp2763 $tmp2762 	%argrw{"wr"}
	assign		$tmp2751.w $tmp2763 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5836 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2764.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2764.y $const10 	%argrw{"wr"}
	assign		$tmp2764.z $const10 	%argrw{"wr"}
	assign		$tmp2764.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5836 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2764.x $tmp2751.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2764.y $tmp2751.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2764.z $tmp2751.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2764.w $tmp2751.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5846 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2766.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2766.y $const12 	%argrw{"wr"}
	assign		$tmp2766.z $const12 	%argrw{"wr"}
	assign		$tmp2766.w $const12 	%argrw{"wr"}
	functioncall	$const35 5846 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2765.x ___496_p.x $tmp2766.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2765.y ___496_p.y $tmp2766.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2765.z ___496_p.z $tmp2766.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2765.w ___496_p.w $tmp2766.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5851 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2765.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2765.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2765.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2765.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2767 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2750 $const13 $tmp2767 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:254
# NOISE_MULTI_FRACTAL(vector4)
	mul		$tmp2768 $tmp2749 $tmp2750 	%line{254} %argrw{"wrr"}
	add		$tmp2769 $tmp2768 $const17 	%argrw{"wrr"}
	mul		___496_value ___496_value $tmp2769 	%argrw{"wrr"}
	assign		$tmp2710 ___496_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	eq		$tmp2770 type $const20 	%argrw{"wrr"}
	if		$tmp2770 6013 6480 	%argrw{"r"}
	functioncall	$const21 6012 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	assign		___479_p.x $tmp2711.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{247} %argrw{"wr"}
	assign		___479_p.y $tmp2711.y 	%argrw{"wr"}
	assign		___479_p.z $tmp2711.z 	%argrw{"wr"}
	assign		___479_p.w $tmp2711.w 	%argrw{"wr"}
	assign		___479_fscale $const17 	%argrw{"wr"}
	assign		___479_amp $const17 	%argrw{"wr"}
	assign		___479_maxamp $const1 	%argrw{"wr"}
	assign		___479_sum $const1 	%argrw{"wr"}
	for		$tmp2773 5871 5874 5933 5935 	%argrw{"r"}
	assign		___480_i $const18 	%argrw{"wr"}
	assign		$tmp2771 detail 	%argrw{"wr"}
	le		$tmp2772 ___480_i $tmp2771 	%argrw{"wrr"}
	neq		$tmp2773 $tmp2772 $const18 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5884 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2775.x ___479_fscale 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2775.y ___479_fscale 	%argrw{"wr"}
	assign		$tmp2775.z ___479_fscale 	%argrw{"wr"}
	assign		$tmp2775.w ___479_fscale 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5884 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp2774.x $tmp2775.x ___479_p.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp2774.y $tmp2775.y ___479_p.y 	%argrw{"wrr"}
	mul		$tmp2774.z $tmp2775.z ___479_p.z 	%argrw{"wrr"}
	mul		$tmp2774.w $tmp2775.w ___479_p.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	functioncall	$const9 5928 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{247} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2777 $tmp2774.x 	%line{96} %argrw{"wr"}
	ge		$tmp2778 $tmp2777 $const11 	%argrw{"wrr"}
	assign		$tmp2779 $tmp2778 	%argrw{"wr"}
	assign		$tmp2776.x $tmp2779 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2780 $tmp2774.y 	%line{97} %argrw{"wr"}
	ge		$tmp2781 $tmp2780 $const11 	%argrw{"wrr"}
	assign		$tmp2782 $tmp2781 	%argrw{"wr"}
	assign		$tmp2776.y $tmp2782 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2783 $tmp2774.z 	%line{98} %argrw{"wr"}
	ge		$tmp2784 $tmp2783 $const11 	%argrw{"wrr"}
	assign		$tmp2785 $tmp2784 	%argrw{"wr"}
	assign		$tmp2776.z $tmp2785 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2786 $tmp2774.w 	%line{99} %argrw{"wr"}
	ge		$tmp2787 $tmp2786 $const11 	%argrw{"wrr"}
	assign		$tmp2788 $tmp2787 	%argrw{"wr"}
	assign		$tmp2776.w $tmp2788 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5911 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2789.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2789.y $const10 	%argrw{"wr"}
	assign		$tmp2789.z $const10 	%argrw{"wr"}
	assign		$tmp2789.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5911 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2789.x $tmp2776.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2789.y $tmp2776.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2789.z $tmp2776.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2789.w $tmp2776.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5921 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2791.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2791.y $const12 	%argrw{"wr"}
	assign		$tmp2791.z $const12 	%argrw{"wr"}
	assign		$tmp2791.w $const12 	%argrw{"wr"}
	functioncall	$const35 5921 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2790.x $tmp2774.x $tmp2791.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2790.y $tmp2774.y $tmp2791.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2790.z $tmp2774.z $tmp2791.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2790.w $tmp2774.w $tmp2791.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5926 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2790.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2790.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2790.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2790.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2792 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		___481_t $const13 $tmp2792 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	mul		$tmp2793 ___481_t ___479_amp 	%line{247} %argrw{"wrr"}
	add		___479_sum ___479_sum $tmp2793 	%argrw{"wrr"}
	add		___479_maxamp ___479_maxamp ___479_amp 	%argrw{"wrr"}
	mul		___479_amp ___479_amp roughness 	%argrw{"wrr"}
	mul		___479_fscale ___479_fscale Lacunarity 	%argrw{"wrr"}
	assign		$tmp2794 ___480_i 	%argrw{"wr"}
	add		___480_i ___480_i $const19 	%argrw{"wrr"}
	floor		$tmp2795 detail 	%argrw{"wr"}
	sub		___479_rmd detail $tmp2795 	%argrw{"wrr"}
	neq		$tmp2796 ___479_rmd $const1 	%argrw{"wrr"}
	if		$tmp2796 6006 6012 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5949 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2798.x ___479_fscale 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2798.y ___479_fscale 	%argrw{"wr"}
	assign		$tmp2798.z ___479_fscale 	%argrw{"wr"}
	assign		$tmp2798.w ___479_fscale 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5949 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp2797.x $tmp2798.x ___479_p.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp2797.y $tmp2798.y ___479_p.y 	%argrw{"wrr"}
	mul		$tmp2797.z $tmp2798.z ___479_p.z 	%argrw{"wrr"}
	mul		$tmp2797.w $tmp2798.w ___479_p.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	functioncall	$const9 5993 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{247} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2800 $tmp2797.x 	%line{96} %argrw{"wr"}
	ge		$tmp2801 $tmp2800 $const11 	%argrw{"wrr"}
	assign		$tmp2802 $tmp2801 	%argrw{"wr"}
	assign		$tmp2799.x $tmp2802 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2803 $tmp2797.y 	%line{97} %argrw{"wr"}
	ge		$tmp2804 $tmp2803 $const11 	%argrw{"wrr"}
	assign		$tmp2805 $tmp2804 	%argrw{"wr"}
	assign		$tmp2799.y $tmp2805 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2806 $tmp2797.z 	%line{98} %argrw{"wr"}
	ge		$tmp2807 $tmp2806 $const11 	%argrw{"wrr"}
	assign		$tmp2808 $tmp2807 	%argrw{"wr"}
	assign		$tmp2799.z $tmp2808 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2809 $tmp2797.w 	%line{99} %argrw{"wr"}
	ge		$tmp2810 $tmp2809 $const11 	%argrw{"wrr"}
	assign		$tmp2811 $tmp2810 	%argrw{"wr"}
	assign		$tmp2799.w $tmp2811 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5976 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2812.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2812.y $const10 	%argrw{"wr"}
	assign		$tmp2812.z $const10 	%argrw{"wr"}
	assign		$tmp2812.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 5976 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2812.x $tmp2799.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2812.y $tmp2799.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2812.z $tmp2799.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2812.w $tmp2799.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 5986 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2814.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2814.y $const12 	%argrw{"wr"}
	assign		$tmp2814.z $const12 	%argrw{"wr"}
	assign		$tmp2814.w $const12 	%argrw{"wr"}
	functioncall	$const35 5986 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2813.x $tmp2797.x $tmp2814.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2813.y $tmp2797.y $tmp2814.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2813.z $tmp2797.z $tmp2814.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2813.w $tmp2797.w $tmp2814.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 5991 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2813.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2813.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2813.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2813.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2815 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		___482_t $const13 $tmp2815 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:247
# NOISE_FBM(vector4)
	mul		$tmp2816 ___482_t ___479_amp 	%line{247} %argrw{"wrr"}
	add		___482_sum2 ___479_sum $tmp2816 	%argrw{"wrr"}
	if		use_normalize 6004 6005 	%argrw{"r"}
	mul		$tmp2817 $const10 ___479_sum 	%argrw{"wrr"}
	div		$tmp2818 $tmp2817 ___479_maxamp 	%argrw{"wrr"}
	add		$tmp2819 $tmp2818 $const10 	%argrw{"wrr"}
	mul		$tmp2820 $const10 ___482_sum2 	%argrw{"wrr"}
	add		$tmp2821 ___479_maxamp ___479_amp 	%argrw{"wrr"}
	div		$tmp2822 $tmp2820 $tmp2821 	%argrw{"wrr"}
	add		$tmp2823 $tmp2822 $const10 	%argrw{"wrr"}
	mix		$tmp2710 $tmp2819 $tmp2823 ___479_rmd 	%argrw{"wrrr"}
	mix		$tmp2710 ___479_sum ___482_sum2 ___479_rmd 	%argrw{"wrrr"}
	return
	if		use_normalize 6010 6011 	%argrw{"r"}
	mul		$tmp2824 $const10 ___479_sum 	%argrw{"wrr"}
	div		$tmp2825 $tmp2824 ___479_maxamp 	%argrw{"wrr"}
	add		$tmp2710 $tmp2825 $const10 	%argrw{"wrr"}
	assign		$tmp2710 ___479_sum 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	eq		$tmp2826 type $const22 	%argrw{"wrr"}
	if		$tmp2826 6162 6480 	%argrw{"r"}
	functioncall	$const23 6161 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:268
# NOISE_HYBRID_MULTI_FRACTAL(vector4)
	assign		___534_p.x $tmp2711.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{268} %argrw{"wr"}
	assign		___534_p.y $tmp2711.y 	%argrw{"wr"}
	assign		___534_p.z $tmp2711.z 	%argrw{"wr"}
	assign		___534_p.w $tmp2711.w 	%argrw{"wr"}
	assign		___534_pwr $const17 	%argrw{"wr"}
	assign		___534_value $const1 	%argrw{"wr"}
	assign		___534_weight $const17 	%argrw{"wr"}
	for		$tmp2832 6025 6033 6097 6099 	%argrw{"r"}
	assign		___535_i $const18 	%argrw{"wr"}
	gt		$tmp2827 ___534_weight $const24 	%argrw{"wrr"}
	neq		$tmp2828 $tmp2827 $const18 	%argrw{"wrr"}
	if		$tmp2828 6032 6032 	%argrw{"r"}
	assign		$tmp2829 detail 	%argrw{"wr"}
	le		$tmp2830 ___535_i $tmp2829 	%argrw{"wrr"}
	neq		$tmp2831 $tmp2830 $const18 	%argrw{"wrr"}
	assign		$tmp2828 $tmp2831 	%argrw{"wr"}
	neq		$tmp2832 $tmp2828 $const18 	%argrw{"wrr"}
	gt		$tmp2833 ___534_weight $const17 	%argrw{"wrr"}
	if		$tmp2833 6036 6036 	%argrw{"r"}
	assign		___534_weight $const17 	%argrw{"wr"}
	functioncall	$const9 6080 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2836 ___534_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2837 $tmp2836 $const11 	%argrw{"wrr"}
	assign		$tmp2838 $tmp2837 	%argrw{"wr"}
	assign		$tmp2835.x $tmp2838 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2839 ___534_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2840 $tmp2839 $const11 	%argrw{"wrr"}
	assign		$tmp2841 $tmp2840 	%argrw{"wr"}
	assign		$tmp2835.y $tmp2841 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2842 ___534_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2843 $tmp2842 $const11 	%argrw{"wrr"}
	assign		$tmp2844 $tmp2843 	%argrw{"wr"}
	assign		$tmp2835.z $tmp2844 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2845 ___534_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2846 $tmp2845 $const11 	%argrw{"wrr"}
	assign		$tmp2847 $tmp2846 	%argrw{"wr"}
	assign		$tmp2835.w $tmp2847 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6063 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2848.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2848.y $const10 	%argrw{"wr"}
	assign		$tmp2848.z $const10 	%argrw{"wr"}
	assign		$tmp2848.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6063 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2848.x $tmp2835.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2848.y $tmp2835.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2848.z $tmp2835.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2848.w $tmp2835.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 6073 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2850.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2850.y $const12 	%argrw{"wr"}
	assign		$tmp2850.z $const12 	%argrw{"wr"}
	assign		$tmp2850.w $const12 	%argrw{"wr"}
	functioncall	$const35 6073 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2849.x ___534_p.x $tmp2850.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2849.y ___534_p.y $tmp2850.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2849.z ___534_p.z $tmp2850.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2849.w ___534_p.w $tmp2850.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 6078 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2849.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2849.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2849.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2849.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2851 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2834 $const13 $tmp2851 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:268
# NOISE_HYBRID_MULTI_FRACTAL(vector4)
	add		$tmp2852 $tmp2834 Offset 	%line{268} %argrw{"wrr"}
	mul		___536_signal $tmp2852 ___534_pwr 	%argrw{"wrr"}
	mul		___534_pwr ___534_pwr roughness 	%argrw{"wrr"}
	mul		$tmp2853 ___534_weight ___536_signal 	%argrw{"wrr"}
	add		___534_value ___534_value $tmp2853 	%argrw{"wrr"}
	mul		$tmp2854 Gain ___536_signal 	%argrw{"wrr"}
	mul		___534_weight ___534_weight $tmp2854 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6097 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2855.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2855.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2855.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2855.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6097 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___534_p.x ___534_p.x $tmp2855.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___534_p.y ___534_p.y $tmp2855.y 	%argrw{"wrr"}
	mul		___534_p.z ___534_p.z $tmp2855.z 	%argrw{"wrr"}
	mul		___534_p.w ___534_p.w $tmp2855.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:268
# NOISE_HYBRID_MULTI_FRACTAL(vector4)
	assign		$tmp2856 ___535_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{268} %argrw{"wr"}
	add		___535_i ___535_i $const19 	%argrw{"wrr"}
	floor		$tmp2857 detail 	%argrw{"wr"}
	sub		___534_rmd detail $tmp2857 	%argrw{"wrr"}
	neq		$tmp2858 ___534_rmd $const1 	%argrw{"wrr"}
	neq		$tmp2859 $tmp2858 $const18 	%argrw{"wrr"}
	if		$tmp2859 6107 6107 	%argrw{"r"}
	gt		$tmp2860 ___534_weight $const24 	%argrw{"wrr"}
	neq		$tmp2861 $tmp2860 $const18 	%argrw{"wrr"}
	assign		$tmp2859 $tmp2861 	%argrw{"wr"}
	if		$tmp2859 6160 6160 	%argrw{"r"}
	gt		$tmp2862 ___534_weight $const17 	%argrw{"wrr"}
	if		$tmp2862 6111 6111 	%argrw{"r"}
	assign		___534_weight $const17 	%argrw{"wr"}
	functioncall	$const9 6155 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2865 ___534_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2866 $tmp2865 $const11 	%argrw{"wrr"}
	assign		$tmp2867 $tmp2866 	%argrw{"wr"}
	assign		$tmp2864.x $tmp2867 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2868 ___534_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2869 $tmp2868 $const11 	%argrw{"wrr"}
	assign		$tmp2870 $tmp2869 	%argrw{"wr"}
	assign		$tmp2864.y $tmp2870 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2871 ___534_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2872 $tmp2871 $const11 	%argrw{"wrr"}
	assign		$tmp2873 $tmp2872 	%argrw{"wr"}
	assign		$tmp2864.z $tmp2873 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2874 ___534_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2875 $tmp2874 $const11 	%argrw{"wrr"}
	assign		$tmp2876 $tmp2875 	%argrw{"wr"}
	assign		$tmp2864.w $tmp2876 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6138 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2877.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2877.y $const10 	%argrw{"wr"}
	assign		$tmp2877.z $const10 	%argrw{"wr"}
	assign		$tmp2877.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6138 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2877.x $tmp2864.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2877.y $tmp2864.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2877.z $tmp2864.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2877.w $tmp2864.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 6148 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2879.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2879.y $const12 	%argrw{"wr"}
	assign		$tmp2879.z $const12 	%argrw{"wr"}
	assign		$tmp2879.w $const12 	%argrw{"wr"}
	functioncall	$const35 6148 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2878.x ___534_p.x $tmp2879.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2878.y ___534_p.y $tmp2879.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2878.z ___534_p.z $tmp2879.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2878.w ___534_p.w $tmp2879.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 6153 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2878.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2878.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2878.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2878.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2880 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2863 $const13 $tmp2880 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:268
# NOISE_HYBRID_MULTI_FRACTAL(vector4)
	add		$tmp2881 $tmp2863 Offset 	%line{268} %argrw{"wrr"}
	mul		___538_signal $tmp2881 ___534_pwr 	%argrw{"wrr"}
	mul		$tmp2882 ___534_rmd ___534_weight 	%argrw{"wrr"}
	mul		$tmp2883 $tmp2882 ___538_signal 	%argrw{"wrr"}
	add		___534_value ___534_value $tmp2883 	%argrw{"wrr"}
	assign		$tmp2710 ___534_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	eq		$tmp2884 type $const25 	%argrw{"wrr"}
	if		$tmp2884 6293 6480 	%argrw{"r"}
	functioncall	$const26 6292 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	assign		___549_p.x $tmp2711.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{275} %argrw{"wr"}
	assign		___549_p.y $tmp2711.y 	%argrw{"wr"}
	assign		___549_p.z $tmp2711.z 	%argrw{"wr"}
	assign		___549_p.w $tmp2711.w 	%argrw{"wr"}
	assign		___549_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 6214 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2888 ___549_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2889 $tmp2888 $const11 	%argrw{"wrr"}
	assign		$tmp2890 $tmp2889 	%argrw{"wr"}
	assign		$tmp2887.x $tmp2890 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2891 ___549_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2892 $tmp2891 $const11 	%argrw{"wrr"}
	assign		$tmp2893 $tmp2892 	%argrw{"wr"}
	assign		$tmp2887.y $tmp2893 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2894 ___549_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2895 $tmp2894 $const11 	%argrw{"wrr"}
	assign		$tmp2896 $tmp2895 	%argrw{"wr"}
	assign		$tmp2887.z $tmp2896 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2897 ___549_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2898 $tmp2897 $const11 	%argrw{"wrr"}
	assign		$tmp2899 $tmp2898 	%argrw{"wr"}
	assign		$tmp2887.w $tmp2899 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6197 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2900.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2900.y $const10 	%argrw{"wr"}
	assign		$tmp2900.z $const10 	%argrw{"wr"}
	assign		$tmp2900.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6197 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2900.x $tmp2887.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2900.y $tmp2887.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2900.z $tmp2887.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2900.w $tmp2887.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 6207 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2902.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2902.y $const12 	%argrw{"wr"}
	assign		$tmp2902.z $const12 	%argrw{"wr"}
	assign		$tmp2902.w $const12 	%argrw{"wr"}
	functioncall	$const35 6207 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2901.x ___549_p.x $tmp2902.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2901.y ___549_p.y $tmp2902.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2901.z ___549_p.z $tmp2902.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2901.w ___549_p.w $tmp2902.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 6212 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2901.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2901.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2901.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2901.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2903 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2886 $const13 $tmp2903 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	fabs		$tmp2885 $tmp2886 	%line{275} %argrw{"wr"}
	sub		___549_signal Offset $tmp2885 	%argrw{"wrr"}
	mul		___549_signal ___549_signal ___549_signal 	%argrw{"wrr"}
	assign		___549_value ___549_signal 	%argrw{"wr"}
	assign		___549_weight $const17 	%argrw{"wr"}
	for		$tmp2906 6221 6224 6289 6291 	%argrw{"r"}
	assign		___550_i $const19 	%argrw{"wr"}
	assign		$tmp2904 detail 	%argrw{"wr"}
	le		$tmp2905 ___550_i $tmp2904 	%argrw{"wrr"}
	neq		$tmp2906 $tmp2905 $const18 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6234 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2907.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2907.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2907.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2907.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6234 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___549_p.x ___549_p.x $tmp2907.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___549_p.y ___549_p.y $tmp2907.y 	%argrw{"wrr"}
	mul		___549_p.z ___549_p.z $tmp2907.z 	%argrw{"wrr"}
	mul		___549_p.w ___549_p.w $tmp2907.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	mul		$tmp2908 ___549_signal Gain 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{275} %argrw{"wrr"}
	functioncall	$const3 6238 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp2909 $tmp2908 $const17 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___549_weight $tmp2909 $const1 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	functioncall	$const9 6282 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{275} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2913 ___549_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2914 $tmp2913 $const11 	%argrw{"wrr"}
	assign		$tmp2915 $tmp2914 	%argrw{"wr"}
	assign		$tmp2912.x $tmp2915 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2916 ___549_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2917 $tmp2916 $const11 	%argrw{"wrr"}
	assign		$tmp2918 $tmp2917 	%argrw{"wr"}
	assign		$tmp2912.y $tmp2918 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2919 ___549_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2920 $tmp2919 $const11 	%argrw{"wrr"}
	assign		$tmp2921 $tmp2920 	%argrw{"wr"}
	assign		$tmp2912.z $tmp2921 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2922 ___549_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2923 $tmp2922 $const11 	%argrw{"wrr"}
	assign		$tmp2924 $tmp2923 	%argrw{"wr"}
	assign		$tmp2912.w $tmp2924 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6265 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2925.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2925.y $const10 	%argrw{"wr"}
	assign		$tmp2925.z $const10 	%argrw{"wr"}
	assign		$tmp2925.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6265 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2925.x $tmp2912.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2925.y $tmp2912.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2925.z $tmp2912.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2925.w $tmp2912.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 6275 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2927.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2927.y $const12 	%argrw{"wr"}
	assign		$tmp2927.z $const12 	%argrw{"wr"}
	assign		$tmp2927.w $const12 	%argrw{"wr"}
	functioncall	$const35 6275 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2926.x ___549_p.x $tmp2927.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2926.y ___549_p.y $tmp2927.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2926.z ___549_p.z $tmp2927.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2926.w ___549_p.w $tmp2927.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 6280 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2926.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2926.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2926.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2926.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2928 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2911 $const13 $tmp2928 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:275
# NOISE_RIDGED_MULTI_FRACTAL(vector4)
	fabs		$tmp2910 $tmp2911 	%line{275} %argrw{"wr"}
	sub		___549_signal Offset $tmp2910 	%argrw{"wrr"}
	mul		___549_signal ___549_signal ___549_signal 	%argrw{"wrr"}
	mul		___549_signal ___549_signal ___549_weight 	%argrw{"wrr"}
	mul		$tmp2929 ___549_signal ___549_pwr 	%argrw{"wrr"}
	add		___549_value ___549_value $tmp2929 	%argrw{"wrr"}
	mul		___549_pwr ___549_pwr roughness 	%argrw{"wrr"}
	assign		$tmp2930 ___550_i 	%argrw{"wr"}
	add		___550_i ___550_i $const19 	%argrw{"wrr"}
	assign		$tmp2710 ___549_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	eq		$tmp2931 type $const27 	%argrw{"wrr"}
	if		$tmp2931 6477 6480 	%argrw{"r"}
	functioncall	$const28 6476 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	assign		___512_p.x $tmp2711.x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{261} %argrw{"wr"}
	assign		___512_p.y $tmp2711.y 	%argrw{"wr"}
	assign		___512_p.z $tmp2711.z 	%argrw{"wr"}
	assign		___512_p.w $tmp2711.w 	%argrw{"wr"}
	assign		___512_pwr roughness 	%argrw{"wr"}
	functioncall	$const9 6345 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2934 ___512_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2935 $tmp2934 $const11 	%argrw{"wrr"}
	assign		$tmp2936 $tmp2935 	%argrw{"wr"}
	assign		$tmp2933.x $tmp2936 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2937 ___512_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2938 $tmp2937 $const11 	%argrw{"wrr"}
	assign		$tmp2939 $tmp2938 	%argrw{"wr"}
	assign		$tmp2933.y $tmp2939 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2940 ___512_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2941 $tmp2940 $const11 	%argrw{"wrr"}
	assign		$tmp2942 $tmp2941 	%argrw{"wr"}
	assign		$tmp2933.z $tmp2942 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2943 ___512_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2944 $tmp2943 $const11 	%argrw{"wrr"}
	assign		$tmp2945 $tmp2944 	%argrw{"wr"}
	assign		$tmp2933.w $tmp2945 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6328 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2946.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2946.y $const10 	%argrw{"wr"}
	assign		$tmp2946.z $const10 	%argrw{"wr"}
	assign		$tmp2946.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6328 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2946.x $tmp2933.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2946.y $tmp2933.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2946.z $tmp2933.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2946.w $tmp2933.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 6338 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2948.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2948.y $const12 	%argrw{"wr"}
	assign		$tmp2948.z $const12 	%argrw{"wr"}
	assign		$tmp2948.w $const12 	%argrw{"wr"}
	functioncall	$const35 6338 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2947.x ___512_p.x $tmp2948.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2947.y ___512_p.y $tmp2948.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2947.z ___512_p.z $tmp2948.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2947.w ___512_p.w $tmp2948.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 6343 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2947.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2947.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2947.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2947.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2949 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2932 $const13 $tmp2949 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	add		___512_value Offset $tmp2932 	%line{261} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6356 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2950.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2950.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2950.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2950.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6356 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___512_p.x ___512_p.x $tmp2950.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___512_p.y ___512_p.y $tmp2950.y 	%argrw{"wrr"}
	mul		___512_p.z ___512_p.z $tmp2950.z 	%argrw{"wrr"}
	mul		___512_p.w ___512_p.w $tmp2950.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	for		$tmp2953 6358 6361 6420 6422 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{261} %argrw{"r"}
	assign		___513_i $const19 	%argrw{"wr"}
	assign		$tmp2951 detail 	%argrw{"wr"}
	le		$tmp2952 ___513_i $tmp2951 	%argrw{"wrr"}
	neq		$tmp2953 $tmp2952 $const18 	%argrw{"wrr"}
	functioncall	$const9 6405 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2956 ___512_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2957 $tmp2956 $const11 	%argrw{"wrr"}
	assign		$tmp2958 $tmp2957 	%argrw{"wr"}
	assign		$tmp2955.x $tmp2958 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2959 ___512_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2960 $tmp2959 $const11 	%argrw{"wrr"}
	assign		$tmp2961 $tmp2960 	%argrw{"wr"}
	assign		$tmp2955.y $tmp2961 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2962 ___512_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2963 $tmp2962 $const11 	%argrw{"wrr"}
	assign		$tmp2964 $tmp2963 	%argrw{"wr"}
	assign		$tmp2955.z $tmp2964 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2965 ___512_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2966 $tmp2965 $const11 	%argrw{"wrr"}
	assign		$tmp2967 $tmp2966 	%argrw{"wr"}
	assign		$tmp2955.w $tmp2967 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6388 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2968.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2968.y $const10 	%argrw{"wr"}
	assign		$tmp2968.z $const10 	%argrw{"wr"}
	assign		$tmp2968.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6388 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2968.x $tmp2955.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2968.y $tmp2955.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2968.z $tmp2955.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2968.w $tmp2955.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 6398 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2970.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2970.y $const12 	%argrw{"wr"}
	assign		$tmp2970.z $const12 	%argrw{"wr"}
	assign		$tmp2970.w $const12 	%argrw{"wr"}
	functioncall	$const35 6398 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2969.x ___512_p.x $tmp2970.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2969.y ___512_p.y $tmp2970.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2969.z ___512_p.z $tmp2970.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2969.w ___512_p.w $tmp2970.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 6403 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2969.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2969.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2969.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2969.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2971 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2954 $const13 $tmp2971 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	add		$tmp2972 $tmp2954 Offset 	%line{261} %argrw{"wrr"}
	mul		$tmp2973 $tmp2972 ___512_pwr 	%argrw{"wrr"}
	mul		___514_increment $tmp2973 ___512_value 	%argrw{"wrr"}
	add		___512_value ___512_value ___514_increment 	%argrw{"wrr"}
	mul		___512_pwr ___512_pwr roughness 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6420 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp2974.x Lacunarity 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp2974.y Lacunarity 	%argrw{"wr"}
	assign		$tmp2974.z Lacunarity 	%argrw{"wr"}
	assign		$tmp2974.w Lacunarity 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6420 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___512_p.x ___512_p.x $tmp2974.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___512_p.y ___512_p.y $tmp2974.y 	%argrw{"wrr"}
	mul		___512_p.z ___512_p.z $tmp2974.z 	%argrw{"wrr"}
	mul		___512_p.w ___512_p.w $tmp2974.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	assign		$tmp2975 ___513_i 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{261} %argrw{"wr"}
	add		___513_i ___513_i $const19 	%argrw{"wrr"}
	floor		$tmp2976 detail 	%argrw{"wr"}
	sub		___512_rmd detail $tmp2976 	%argrw{"wrr"}
	neq		$tmp2977 ___512_rmd $const1 	%argrw{"wrr"}
	if		$tmp2977 6475 6475 	%argrw{"r"}
	functioncall	$const9 6470 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:96
#   vector4 precision_correction = 0.5 * vector4(float(fabs(co.x) >= 1000000.0),
	fabs		$tmp2980 ___512_p.x 	%line{96} %argrw{"wr"}
	ge		$tmp2981 $tmp2980 $const11 	%argrw{"wrr"}
	assign		$tmp2982 $tmp2981 	%argrw{"wr"}
	assign		$tmp2979.x $tmp2982 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:97
#                                                float(fabs(co.y) >= 1000000.0),
	fabs		$tmp2983 ___512_p.y 	%line{97} %argrw{"wr"}
	ge		$tmp2984 $tmp2983 $const11 	%argrw{"wrr"}
	assign		$tmp2985 $tmp2984 	%argrw{"wr"}
	assign		$tmp2979.y $tmp2985 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:98
#                                                float(fabs(co.z) >= 1000000.0),
	fabs		$tmp2986 ___512_p.z 	%line{98} %argrw{"wr"}
	ge		$tmp2987 $tmp2986 $const11 	%argrw{"wrr"}
	assign		$tmp2988 $tmp2987 	%argrw{"wr"}
	assign		$tmp2979.z $tmp2988 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:99
#                                                float(fabs(co.w) >= 1000000.0));
	fabs		$tmp2989 ___512_p.w 	%line{99} %argrw{"wr"}
	ge		$tmp2990 $tmp2989 $const11 	%argrw{"wrr"}
	assign		$tmp2991 $tmp2990 	%argrw{"wr"}
	assign		$tmp2979.w $tmp2991 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6453 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:101
#     return vector4(a, a, a, a) * b;
	assign		$tmp2992.x $const10 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{101} %argrw{"wr"}
	assign		$tmp2992.y $const10 	%argrw{"wr"}
	assign		$tmp2992.z $const10 	%argrw{"wr"}
	assign		$tmp2992.w $const10 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const34 6453 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___463_precision_correction.x $tmp2992.x $tmp2979.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___463_precision_correction.y $tmp2992.y $tmp2979.y 	%argrw{"wrr"}
	mul		___463_precision_correction.z $tmp2992.z $tmp2979.z 	%argrw{"wrr"}
	mul		___463_precision_correction.w $tmp2992.w $tmp2979.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:103
#   vector4 p = fmod(co, 100000.0) + precision_correction;
	functioncall	$const35 6463 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{103} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:300
#     return fmod(a, vector4(b, b, b, b));
	assign		$tmp2994.x $const12 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{300} %argrw{"wr"}
	assign		$tmp2994.y $const12 	%argrw{"wr"}
	assign		$tmp2994.z $const12 	%argrw{"wr"}
	assign		$tmp2994.w $const12 	%argrw{"wr"}
	functioncall	$const35 6463 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:292
#     return vector4 (fmod(a.x, b.x),
	fmod		$tmp2993.x ___512_p.x $tmp2994.x 	%line{292} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:293
#                     fmod(a.y, b.y),
	fmod		$tmp2993.y ___512_p.y $tmp2994.y 	%line{293} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:294
#                     fmod(a.z, b.z),
	fmod		$tmp2993.z ___512_p.z $tmp2994.z 	%line{294} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:295
#                     fmod(a.w, b.w));
	fmod		$tmp2993.w ___512_p.w $tmp2994.w 	%line{295} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:301
# 
	functioncall	$const33 6468 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{301} %argrw{"r"}
# F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___463_p.x $tmp2993.x ___463_precision_correction.x 	%filename{"F:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders\\vector4.h"} %line{31} %argrw{"wrr"}
	add		___463_p.y $tmp2993.y ___463_precision_correction.y 	%argrw{"wrr"}
	add		___463_p.z $tmp2993.z ___463_precision_correction.z 	%argrw{"wrr"}
	add		___463_p.w $tmp2993.w ___463_precision_correction.w 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:105
#   return noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp2995 ___463_p.x ___463_p.y ___463_p.z 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{105} %argrw{"wrrr"}
	noise		$tmp2978 $const13 $tmp2995 ___463_p.w 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:261
# NOISE_HETERO_TERRAIN(vector4)
	add		$tmp2996 $tmp2978 Offset 	%line{261} %argrw{"wrr"}
	mul		$tmp2997 $tmp2996 ___512_pwr 	%argrw{"wrr"}
	mul		___515_increment $tmp2997 ___512_value 	%argrw{"wrr"}
	mul		$tmp2998 ___512_rmd ___515_increment 	%argrw{"wrr"}
	add		___512_value ___512_value $tmp2998 	%argrw{"wrr"}
	assign		$tmp2710 ___512_value 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:82
# NOISE_SELECT(vector4)
	return	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl"} %line{82}
	error		$const29 	%argrw{"r"}
	assign		$tmp2710 $const1 	%argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:218
#   Color = color(value,
	color		Color ___608_value $tmp2421 $tmp2710 	%line{218} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:235
#   return value;
	assign		Fac ___608_value 	%line{235} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_noise_texture.osl:298
#     error("Unknown Dimension!");
	error		$const44 	%line{298} %argrw{"r"}
	end
