OpenShadingLanguage 1.00
# Compiled by oslc 1.11.17
# options: -q -O2 -IF:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders -IF:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders -o F:/Repositories/blenderRepo/build_windows_Full_x64_vc16_Release/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.oso
shader node_anisotropic_bsdf
param	color	Color	0 0 0		%read{75,89} %write{2147483647,-1}
param	string	distribution	"GGX"		%read{71,84} %write{2147483647,-1}
param	float	Roughness	0		%read{57,57} %write{2147483647,-1}
param	float	Anisotropy	0		%read{59,59} %write{2147483647,-1}
param	float	Rotation	0		%read{3,5} %write{2147483647,-1}
param	normal	Normal	0 0 0		%read{7,88} %write{0,0} %initexpr
param	normal	Tangent	0 0 0		%read{2,2} %write{1,1} %initexpr
oparam	closure color	BSDF			%read{2147483647,-1} %write{75,89}
global	normal	N	%read{0,0} %write{2147483647,-1}
global	vector	dPdu	%read{1,1} %write{2147483647,-1}
local	vector	___257_axis	%read{11,13} %write{8,8}
local	float	___257_cosang	%read{10,51} %write{9,9}
local	float	___257_sinang	%read{21,46} %write{9,9}
local	float	___257_cosang1	%read{20,45} %write{10,10}
local	float	___257_x	%read{14,46} %write{11,11}
local	float	___257_y	%read{19,44} %write{12,12}
local	float	___257_z	%read{21,49} %write{13,13}
local	matrix	___257_M	%read{55,55} %write{53,53}
local	vector	T	%read{54,88} %write{2,56}
local	float	roughness	%read{64,70} %write{57,57}
local	float	roughness_u	%read{78,88} %write{64,68}
local	float	roughness_v	%read{78,88} %write{66,70}
local	float	aniso	%read{61,69} %write{60,60}
const	float	$const1	0		%read{3,74} %write{2147483647,-1}
temp	int	$tmp1	%read{4,4} %write{3,3}
const	float	$const2	6.28318548		%read{5,5} %write{2147483647,-1}
temp	float	$tmp2	%read{9,9} %write{5,5}
const	point	$const3	0 0 0		%read{7,56} %write{2147483647,-1}
const	string	$const4	"rotate"		%read{6,6} %write{2147483647,-1}
temp	vector	$tmp4	%read{8,8} %write{7,7}
const	float	$const5	1		%read{10,69} %write{2147483647,-1}
const	int	$const6	0		%read{11,11} %write{2147483647,-1}
const	int	$const7	1		%read{12,12} %write{2147483647,-1}
const	int	$const8	2		%read{13,13} %write{2147483647,-1}
temp	float	$tmp5	%read{18,18} %write{14,14}
temp	float	$tmp6	%read{16,16} %write{15,15}
temp	float	$tmp7	%read{17,17} %write{16,16}
temp	float	$tmp8	%read{18,18} %write{17,17}
temp	float	$tmp9	%read{53,53} %write{18,18}
temp	float	$tmp10	%read{20,20} %write{19,19}
temp	float	$tmp11	%read{22,22} %write{20,20}
temp	float	$tmp12	%read{22,22} %write{21,21}
temp	float	$tmp13	%read{53,53} %write{22,22}
temp	float	$tmp14	%read{24,24} %write{23,23}
temp	float	$tmp15	%read{26,26} %write{24,24}
temp	float	$tmp16	%read{26,26} %write{25,25}
temp	float	$tmp17	%read{53,53} %write{26,26}
temp	float	$tmp18	%read{28,28} %write{27,27}
temp	float	$tmp19	%read{30,30} %write{28,28}
temp	float	$tmp20	%read{30,30} %write{29,29}
temp	float	$tmp21	%read{53,53} %write{30,30}
temp	float	$tmp22	%read{35,35} %write{31,31}
temp	float	$tmp23	%read{33,33} %write{32,32}
temp	float	$tmp24	%read{34,34} %write{33,33}
temp	float	$tmp25	%read{35,35} %write{34,34}
temp	float	$tmp26	%read{53,53} %write{35,35}
temp	float	$tmp27	%read{37,37} %write{36,36}
temp	float	$tmp28	%read{39,39} %write{37,37}
temp	float	$tmp29	%read{39,39} %write{38,38}
temp	float	$tmp30	%read{53,53} %write{39,39}
temp	float	$tmp31	%read{41,41} %write{40,40}
temp	float	$tmp32	%read{43,43} %write{41,41}
temp	float	$tmp33	%read{43,43} %write{42,42}
temp	float	$tmp34	%read{53,53} %write{43,43}
temp	float	$tmp35	%read{45,45} %write{44,44}
temp	float	$tmp36	%read{47,47} %write{45,45}
temp	float	$tmp37	%read{47,47} %write{46,46}
temp	float	$tmp38	%read{53,53} %write{47,47}
temp	float	$tmp39	%read{52,52} %write{48,48}
temp	float	$tmp40	%read{50,50} %write{49,49}
temp	float	$tmp41	%read{51,51} %write{50,50}
temp	float	$tmp42	%read{52,52} %write{51,51}
temp	float	$tmp43	%read{53,53} %write{52,52}
temp	vector	$tmp44	%read{56,56} %write{55,55}
temp	vector	$tmp45	%read{55,55} %write{54,54}
const	float	$const9	-0.99000001		%read{60,60} %write{2147483647,-1}
const	float	$const10	0.99000001		%read{59,59} %write{2147483647,-1}
const	string	$const11	"clamp"		%read{58,58} %write{2147483647,-1}
temp	float	$tmp46	%read{60,60} %write{59,59}
temp	int	$tmp47	%read{62,62} %write{61,61}
temp	float	$tmp48	%read{64,64} %write{63,63}
temp	float	$tmp49	%read{66,66} %write{65,65}
temp	float	$tmp50	%read{68,68} %write{67,67}
temp	float	$tmp51	%read{70,70} %write{69,69}
const	string	$const12	"sharp"		%read{71,71} %write{2147483647,-1}
temp	int	$tmp52	%read{72,72} %write{71,71}
temp	closure color	$tmp53	%read{75,75} %write{74,74}
const	string	$const13	"reflection"		%read{73,74} %write{2147483647,-1}
const	string	$const14	"beckmann"		%read{76,76} %write{2147483647,-1}
temp	int	$tmp54	%read{77,77} %write{76,76}
temp	closure color	$tmp55	%read{79,79} %write{78,78}
const	string	$const15	"microfacet_beckmann_aniso"		%read{78,78} %write{2147483647,-1}
const	string	$const16	"GGX"		%read{80,80} %write{2147483647,-1}
temp	int	$tmp56	%read{81,81} %write{80,80}
temp	closure color	$tmp57	%read{83,83} %write{82,82}
const	string	$const17	"microfacet_ggx_aniso"		%read{82,82} %write{2147483647,-1}
const	string	$const18	"Multiscatter GGX"		%read{84,84} %write{2147483647,-1}
temp	int	$tmp58	%read{85,85} %write{84,84}
temp	closure color	$tmp59	%read{87,87} %write{86,86}
const	string	$const19	"microfacet_multi_ggx_aniso"		%read{86,86} %write{2147483647,-1}
temp	closure color	$tmp60	%read{89,89} %write{88,88}
const	string	$const20	"ashikhmin_shirley"		%read{88,88} %write{2147483647,-1}
code Normal
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:11
#                              normal Normal = N,
	assign		Normal N 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl"} %line{11} %argrw{"wr"}
code Tangent
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:12
#                              normal Tangent = normalize(dPdu),
	normalize	Tangent dPdu 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl"} %line{12} %argrw{"wr"}
code ___main___
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:16
#   vector T = Tangent;
	assign		T Tangent 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl"} %line{16} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:18
#   if (Rotation != 0.0)
	neq		$tmp1 Rotation $const1 	%line{18} %argrw{"wrr"}
	if		$tmp1 57 57 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:19
#     T = rotate(T, Rotation * M_2PI, point(0.0, 0.0, 0.0), Normal);
	mul		$tmp2 Rotation $const2 	%line{19} %argrw{"wrr"}
	functioncall	$const4 57 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:270
#     vector axis = normalize (b - a);
	sub		$tmp4 Normal $const3 	%filename{"F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{270} %argrw{"wrr"}
	normalize	___257_axis $tmp4 	%argrw{"wr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:272
#     sincos (angle, sinang, cosang);
	sincos		$tmp2 ___257_sinang ___257_cosang 	%line{272} %argrw{"rww"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:273
#     float cosang1 = 1.0 - cosang;
	sub		___257_cosang1 $const5 ___257_cosang 	%line{273} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:274
#     float x = axis[0], y = axis[1], z = axis[2];
	compref		___257_x ___257_axis $const6 	%line{274} %argrw{"wrr"}
	compref		___257_y ___257_axis $const7 	%argrw{"wrr"}
	compref		___257_z ___257_axis $const8 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:275
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	mul		$tmp5 ___257_x ___257_x 	%line{275} %argrw{"wrr"}
	mul		$tmp6 ___257_x ___257_x 	%argrw{"wrr"}
	sub		$tmp7 $const5 $tmp6 	%argrw{"wrr"}
	mul		$tmp8 $tmp7 ___257_cosang 	%argrw{"wrr"}
	add		$tmp9 $tmp5 $tmp8 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:276
#                        x * y * cosang1 + z * sinang,
	mul		$tmp10 ___257_x ___257_y 	%line{276} %argrw{"wrr"}
	mul		$tmp11 $tmp10 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp12 ___257_z ___257_sinang 	%argrw{"wrr"}
	add		$tmp13 $tmp11 $tmp12 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:277
#                        x * z * cosang1 - y * sinang,
	mul		$tmp14 ___257_x ___257_z 	%line{277} %argrw{"wrr"}
	mul		$tmp15 $tmp14 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp16 ___257_y ___257_sinang 	%argrw{"wrr"}
	sub		$tmp17 $tmp15 $tmp16 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:279
#                        x * y * cosang1 - z * sinang,
	mul		$tmp18 ___257_x ___257_y 	%line{279} %argrw{"wrr"}
	mul		$tmp19 $tmp18 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp20 ___257_z ___257_sinang 	%argrw{"wrr"}
	sub		$tmp21 $tmp19 $tmp20 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:280
#                        y * y + (1.0 - y * y) * cosang,
	mul		$tmp22 ___257_y ___257_y 	%line{280} %argrw{"wrr"}
	mul		$tmp23 ___257_y ___257_y 	%argrw{"wrr"}
	sub		$tmp24 $const5 $tmp23 	%argrw{"wrr"}
	mul		$tmp25 $tmp24 ___257_cosang 	%argrw{"wrr"}
	add		$tmp26 $tmp22 $tmp25 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:281
#                        y * z * cosang1 + x * sinang,
	mul		$tmp27 ___257_y ___257_z 	%line{281} %argrw{"wrr"}
	mul		$tmp28 $tmp27 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp29 ___257_x ___257_sinang 	%argrw{"wrr"}
	add		$tmp30 $tmp28 $tmp29 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:283
#                        x * z * cosang1 + y * sinang,
	mul		$tmp31 ___257_x ___257_z 	%line{283} %argrw{"wrr"}
	mul		$tmp32 $tmp31 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp33 ___257_y ___257_sinang 	%argrw{"wrr"}
	add		$tmp34 $tmp32 $tmp33 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:284
#                        y * z * cosang1 - x * sinang,
	mul		$tmp35 ___257_y ___257_z 	%line{284} %argrw{"wrr"}
	mul		$tmp36 $tmp35 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp37 ___257_x ___257_sinang 	%argrw{"wrr"}
	sub		$tmp38 $tmp36 $tmp37 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:285
#                        z * z + (1.0 - z * z) * cosang,
	mul		$tmp39 ___257_z ___257_z 	%line{285} %argrw{"wrr"}
	mul		$tmp40 ___257_z ___257_z 	%argrw{"wrr"}
	sub		$tmp41 $const5 $tmp40 	%argrw{"wrr"}
	mul		$tmp42 $tmp41 ___257_cosang 	%argrw{"wrr"}
	add		$tmp43 $tmp39 $tmp42 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:275
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	matrix		___257_M $tmp9 $tmp13 $tmp17 $const1 $tmp21 $tmp26 $tmp30 $const1 $tmp34 $tmp38 $tmp43 $const1 $const1 $const1 $const1 $const5 	%line{275} %argrw{"wrrrrrrrrrrrrrrrr"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:288
#     return transform (M, p-a) + a;
	sub		$tmp45 T $const3 	%line{288} %argrw{"wrr"}
	transformv	$tmp44 ___257_M $tmp45 	%argrw{"wrr"}
	add		T $tmp44 $const3 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:22
#   float roughness = Roughness * Roughness;
	mul		roughness Roughness Roughness 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl"} %line{22} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:24
#   float aniso = clamp(Anisotropy, -0.99, 0.99);
	functioncall	$const11 61 	%line{24} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp46 Anisotropy $const10 	%filename{"F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		aniso $tmp46 $const9 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:26
#   if (aniso < 0.0) {
	lt		$tmp47 aniso $const1 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl"} %line{26} %argrw{"wrr"}
	if		$tmp47 67 71 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:27
#     roughness_u = roughness / (1.0 + aniso);
	add		$tmp48 $const5 aniso 	%line{27} %argrw{"wrr"}
	div		roughness_u roughness $tmp48 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:28
#     roughness_v = roughness * (1.0 + aniso);
	add		$tmp49 $const5 aniso 	%line{28} %argrw{"wrr"}
	mul		roughness_v roughness $tmp49 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:31
#     roughness_u = roughness * (1.0 - aniso);
	sub		$tmp50 $const5 aniso 	%line{31} %argrw{"wrr"}
	mul		roughness_u roughness $tmp50 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:32
#     roughness_v = roughness / (1.0 - aniso);
	sub		$tmp51 $const5 aniso 	%line{32} %argrw{"wrr"}
	div		roughness_v roughness $tmp51 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:35
#   if (distribution == "sharp")
	eq		$tmp52 distribution $const12 	%line{35} %argrw{"wrr"}
	if		$tmp52 76 90 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:36
#     BSDF = Color * reflection(Normal);
	functioncall	$const13 75 	%line{36} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:466
# closure color reflection(normal N) { return reflection (N, 0.0); }
	closure		$tmp53 $const13 Normal $const1 	%filename{"F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{466} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:36
#     BSDF = Color * reflection(Normal);
	mul		BSDF $tmp53 Color 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl"} %line{36} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:37
#   else if (distribution == "beckmann")
	eq		$tmp54 distribution $const14 	%line{37} %argrw{"wrr"}
	if		$tmp54 80 90 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:38
#     BSDF = Color * microfacet_beckmann_aniso(Normal, T, roughness_u, roughness_v);
	closure		$tmp55 $const15 Normal T roughness_u roughness_v 	%line{38} %argrw{"wrrrrr"}
	mul		BSDF $tmp55 Color 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:39
#   else if (distribution == "GGX")
	eq		$tmp56 distribution $const16 	%line{39} %argrw{"wrr"}
	if		$tmp56 84 90 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:40
#     BSDF = Color * microfacet_ggx_aniso(Normal, T, roughness_u, roughness_v);
	closure		$tmp57 $const17 Normal T roughness_u roughness_v 	%line{40} %argrw{"wrrrrr"}
	mul		BSDF $tmp57 Color 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:41
#   else if (distribution == "Multiscatter GGX")
	eq		$tmp58 distribution $const18 	%line{41} %argrw{"wrr"}
	if		$tmp58 88 90 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:42
#     BSDF = Color * microfacet_multi_ggx_aniso(Normal, T, roughness_u, roughness_v, Color);
	closure		$tmp59 $const19 Normal T roughness_u roughness_v Color 	%line{42} %argrw{"wrrrrrr"}
	mul		BSDF $tmp59 Color 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_anisotropic_bsdf.osl:44
#     BSDF = Color * ashikhmin_shirley(Normal, T, roughness_u, roughness_v);
	closure		$tmp60 $const20 Normal T roughness_u roughness_v 	%line{44} %argrw{"wrrrrr"}
	mul		BSDF $tmp60 Color 	%argrw{"wrr"}
	end
