OpenShadingLanguage 1.00
# Compiled by oslc 1.11.17
# options: -q -O2 -IF:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders -IF:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders -o F:/Repositories/blenderRepo/build_windows_Full_x64_vc16_Release/intern/cycles/kernel/osl/shaders/node_camera.oso
shader node_camera
oparam	vector	ViewVector	0 0 0		%read{1,4} %write{0,4}
oparam	float	ViewZDepth	0		%read{2147483647,-1} %write{2,2}
oparam	float	ViewDistance	0		%read{2147483647,-1} %write{3,3}
global	point	P	%read{0,0} %write{2147483647,-1}
const	string	$const1	"world"		%read{0,0} %write{2147483647,-1}
const	string	$const2	"camera"		%read{0,0} %write{2147483647,-1}
const	int	$const3	2		%read{1,1} %write{2147483647,-1}
temp	float	$tmp1	%read{2,2} %write{1,1}
code ___main___
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_camera.osl:10
#   ViewVector = (vector)transform("world", "camera", P);
	transform	ViewVector $const1 $const2 P 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_camera.osl"} %line{10} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_camera.osl:12
#   ViewZDepth = fabs(ViewVector[2]);
	compref		$tmp1 ViewVector $const3 	%line{12} %argrw{"wrr"}
	fabs		ViewZDepth $tmp1 	%argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_camera.osl:13
#   ViewDistance = length(ViewVector);
	length		ViewDistance ViewVector 	%line{13} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_camera.osl:15
#   ViewVector = normalize(ViewVector);
	normalize	ViewVector ViewVector 	%line{15} %argrw{"wr"}
	end
