OpenShadingLanguage 1.00
# Compiled by oslc 1.11.17
# options: -q -O2 -IF:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders -IF:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders -o F:/Repositories/blenderRepo/build_windows_Full_x64_vc16_Release/intern/cycles/kernel/osl/shaders/node_mix_color.oso
shader node_mix_color
param	string	blend_type	"mix"		%read{5,856} %write{2147483647,-1}
param	int	use_clamp	0		%read{0,0} %write{2147483647,-1}
param	int	use_clamp_result	0		%read{912,912} %write{2147483647,-1}
param	float	Factor	0.5		%read{2,4} %write{2147483647,-1}
param	color	A	0 0 0		%read{7,904} %write{2147483647,-1}
param	color	B	0 0 0		%read{7,905} %write{2147483647,-1}
oparam	color	Result	0 0 0		%read{916,916} %write{7,917}
local	float	___337_cmax	%read{277,778} %write{271,752}
local	float	___337_cmin	%read{277,758} %write{276,757}
local	float	___337_h	%read{307,792} %write{283,791}
local	float	___337_s	%read{284,792} %write{281,763}
local	float	___337_v	%read{311,792} %write{278,759}
local	float	___337_cdelta	%read{281,770} %write{277,758}
local	color	___337_c	%read{293,786} %write{289,770}
local	float	___342_i	%read{375,832} %write{374,808}
local	float	___342_f	%read{376,816} %write{375,809}
local	float	___342_p	%read{388,835} %write{378,812}
local	float	___342_q	%read{391,835} %write{381,815}
local	float	___342_t	%read{388,834} %write{385,819}
local	float	___342_h	%read{370,809} %write{364,807}
local	float	___342_s	%read{367,817} %write{365,799}
local	float	___342_v	%read{369,835} %write{366,800}
local	color	___342_rgb	%read{402,836} %write{369,835}
local	float	___355_tm	%read{22,22} %write{21,21}
local	float	___356_tm	%read{41,88} %write{32,32}
local	color	___356_outcol	%read{34,94} %write{33,93}
local	float	___358_tm	%read{109,131} %write{103,103}
local	color	___358_outcol	%read{108,138} %write{104,137}
local	color	___362_outcol	%read{159,204} %write{158,203}
local	float	___363_tmp	%read{165,173} %write{164,169}
local	float	___364_tmp	%read{180,188} %write{179,184}
local	float	___365_tmp	%read{195,203} %write{194,199}
local	float	___366_tmp	%read{213,260} %write{212,253}
local	float	___366_tm	%read{212,246} %write{208,208}
local	color	___366_outcol	%read{216,261} %write{209,260}
local	color	___367_outcol	%read{316,404} %write{265,403}
local	color	___367_hsv2	%read{312,361} %write{311,311}
local	color	___368_hsv	%read{364,366} %write{360,362}
local	color	___368_tmp	%read{403,403} %write{402,402}
local	float	___369_tm	%read{506,506} %write{408,408}
local	color	___369_outcol	%read{411,551} %write{409,550}
local	color	___369_hsv	%read{456,514} %write{455,510}
local	color	___370_hsv2	%read{507,507} %write{504,504}
local	float	___371_tm	%read{649,649} %write{555,555}
local	color	___371_hsv	%read{648,657} %write{601,653}
local	color	___371_hsv2	%read{650,650} %write{647,647}
local	color	___372_outcol	%read{748,838} %write{697,837}
local	color	___372_hsv2	%read{744,795} %write{743,743}
local	color	___373_hsv	%read{798,800} %write{792,796}
local	color	___373_tmp	%read{837,837} %write{836,836}
local	float	___374_tm	%read{848,848} %write{842,842}
local	color	___374_one	%read{844,849} %write{843,843}
local	color	___374_scr	%read{852,852} %write{847,847}
local	color	___375_outcol	%read{911,911} %write{859,910}
local	float	t	%read{7,908} %write{3,4}
const	float	$const1	0		%read{3,913} %write{2147483647,-1}
const	float	$const2	1		%read{2,914} %write{2147483647,-1}
const	string	$const3	"clamp"		%read{1,915} %write{2147483647,-1}
temp	float	$tmp1	%read{3,3} %write{2,2}
const	string	$const4	"mix"		%read{5,5} %write{2147483647,-1}
temp	int	$tmp2	%read{6,6} %write{5,5}
const	string	$const5	"add"		%read{8,8} %write{2147483647,-1}
temp	int	$tmp3	%read{9,9} %write{8,8}
const	string	$const6	"node_mix_add"		%read{10,10} %write{2147483647,-1}
temp	color	$tmp4	%read{12,12} %write{11,11}
const	string	$const7	"multiply"		%read{13,13} %write{2147483647,-1}
temp	int	$tmp5	%read{14,14} %write{13,13}
const	string	$const8	"node_mix_mul"		%read{15,15} %write{2147483647,-1}
temp	color	$tmp6	%read{17,17} %write{16,16}
const	string	$const9	"screen"		%read{18,18} %write{2147483647,-1}
temp	int	$tmp7	%read{19,19} %write{18,18}
const	string	$const10	"node_mix_screen"		%read{20,20} %write{2147483647,-1}
const	color	$const11	1 1 1		%read{23,843} %write{2147483647,-1}
temp	color	$tmp9	%read{25,25} %write{22,22}
temp	color	$tmp11	%read{24,24} %write{23,23}
temp	color	$tmp12	%read{25,25} %write{24,24}
temp	color	$tmp13	%read{27,27} %write{25,25}
temp	color	$tmp15	%read{27,27} %write{26,26}
temp	color	$tmp16	%read{28,28} %write{27,27}
const	string	$const12	"overlay"		%read{29,29} %write{2147483647,-1}
temp	int	$tmp17	%read{30,30} %write{29,29}
const	string	$const13	"node_mix_overlay"		%read{31,31} %write{2147483647,-1}
const	int	$const14	0		%read{34,876} %write{2147483647,-1}
temp	float	$tmp18	%read{35,35} %write{34,34}
const	float	$const15	0.5		%read{35,899} %write{2147483647,-1}
temp	int	$tmp19	%read{36,36} %write{35,35}
temp	float	$tmp20	%read{42,42} %write{37,37}
const	float	$const16	2		%read{38,906} %write{2147483647,-1}
temp	float	$tmp21	%read{40,40} %write{38,38}
temp	float	$tmp22	%read{40,40} %write{39,39}
temp	float	$tmp23	%read{41,41} %write{40,40}
temp	float	$tmp24	%read{42,42} %write{41,41}
temp	float	$tmp25	%read{43,43} %write{42,42}
temp	float	$tmp26	%read{47,47} %write{44,44}
temp	float	$tmp27	%read{46,46} %write{45,45}
temp	float	$tmp28	%read{47,47} %write{46,46}
temp	float	$tmp29	%read{48,48} %write{47,47}
temp	float	$tmp30	%read{51,51} %write{48,48}
temp	float	$tmp31	%read{50,50} %write{49,49}
temp	float	$tmp32	%read{51,51} %write{50,50}
temp	float	$tmp33	%read{52,52} %write{51,51}
temp	float	$tmp34	%read{53,53} %write{52,52}
const	int	$const17	1		%read{54,893} %write{2147483647,-1}
temp	float	$tmp35	%read{55,55} %write{54,54}
temp	int	$tmp36	%read{56,56} %write{55,55}
temp	float	$tmp37	%read{62,62} %write{57,57}
temp	float	$tmp38	%read{60,60} %write{58,58}
temp	float	$tmp39	%read{60,60} %write{59,59}
temp	float	$tmp40	%read{61,61} %write{60,60}
temp	float	$tmp41	%read{62,62} %write{61,61}
temp	float	$tmp42	%read{63,63} %write{62,62}
temp	float	$tmp43	%read{67,67} %write{64,64}
temp	float	$tmp44	%read{66,66} %write{65,65}
temp	float	$tmp45	%read{67,67} %write{66,66}
temp	float	$tmp46	%read{68,68} %write{67,67}
temp	float	$tmp47	%read{71,71} %write{68,68}
temp	float	$tmp48	%read{70,70} %write{69,69}
temp	float	$tmp49	%read{71,71} %write{70,70}
temp	float	$tmp50	%read{72,72} %write{71,71}
temp	float	$tmp51	%read{73,73} %write{72,72}
const	int	$const18	2		%read{74,910} %write{2147483647,-1}
temp	float	$tmp52	%read{75,75} %write{74,74}
temp	int	$tmp53	%read{76,76} %write{75,75}
temp	float	$tmp54	%read{82,82} %write{77,77}
temp	float	$tmp55	%read{80,80} %write{78,78}
temp	float	$tmp56	%read{80,80} %write{79,79}
temp	float	$tmp57	%read{81,81} %write{80,80}
temp	float	$tmp58	%read{82,82} %write{81,81}
temp	float	$tmp59	%read{83,83} %write{82,82}
temp	float	$tmp60	%read{87,87} %write{84,84}
temp	float	$tmp61	%read{86,86} %write{85,85}
temp	float	$tmp62	%read{87,87} %write{86,86}
temp	float	$tmp63	%read{88,88} %write{87,87}
temp	float	$tmp64	%read{91,91} %write{88,88}
temp	float	$tmp65	%read{90,90} %write{89,89}
temp	float	$tmp66	%read{91,91} %write{90,90}
temp	float	$tmp67	%read{92,92} %write{91,91}
temp	float	$tmp68	%read{93,93} %write{92,92}
const	string	$const19	"subtract"		%read{95,95} %write{2147483647,-1}
temp	int	$tmp69	%read{96,96} %write{95,95}
const	string	$const20	"node_mix_sub"		%read{97,97} %write{2147483647,-1}
temp	color	$tmp70	%read{99,99} %write{98,98}
const	string	$const21	"divide"		%read{100,100} %write{2147483647,-1}
temp	int	$tmp71	%read{101,101} %write{100,100}
const	string	$const22	"node_mix_div"		%read{102,102} %write{2147483647,-1}
temp	float	$tmp72	%read{106,106} %write{105,105}
temp	int	$tmp73	%read{107,107} %write{106,106}
temp	float	$tmp74	%read{109,109} %write{108,108}
temp	float	$tmp75	%read{114,114} %write{109,109}
temp	float	$tmp76	%read{111,111} %write{110,110}
temp	float	$tmp77	%read{113,113} %write{111,111}
temp	float	$tmp78	%read{113,113} %write{112,112}
temp	float	$tmp79	%read{114,114} %write{113,113}
temp	float	$tmp80	%read{115,115} %write{114,114}
temp	float	$tmp81	%read{117,117} %write{116,116}
temp	int	$tmp82	%read{118,118} %write{117,117}
temp	float	$tmp83	%read{120,120} %write{119,119}
temp	float	$tmp84	%read{125,125} %write{120,120}
temp	float	$tmp85	%read{122,122} %write{121,121}
temp	float	$tmp86	%read{124,124} %write{122,122}
temp	float	$tmp87	%read{124,124} %write{123,123}
temp	float	$tmp88	%read{125,125} %write{124,124}
temp	float	$tmp89	%read{126,126} %write{125,125}
temp	float	$tmp90	%read{128,128} %write{127,127}
temp	int	$tmp91	%read{129,129} %write{128,128}
temp	float	$tmp92	%read{131,131} %write{130,130}
temp	float	$tmp93	%read{136,136} %write{131,131}
temp	float	$tmp94	%read{133,133} %write{132,132}
temp	float	$tmp95	%read{135,135} %write{133,133}
temp	float	$tmp96	%read{135,135} %write{134,134}
temp	float	$tmp97	%read{136,136} %write{135,135}
temp	float	$tmp98	%read{137,137} %write{136,136}
const	string	$const23	"difference"		%read{139,139} %write{2147483647,-1}
temp	int	$tmp99	%read{140,140} %write{139,139}
const	string	$const24	"node_mix_diff"		%read{141,141} %write{2147483647,-1}
temp	color	$tmp100	%read{144,144} %write{143,143}
temp	color	$tmp101	%read{143,143} %write{142,142}
const	string	$const25	"darken"		%read{145,145} %write{2147483647,-1}
temp	int	$tmp102	%read{146,146} %write{145,145}
const	string	$const26	"node_mix_dark"		%read{147,147} %write{2147483647,-1}
temp	color	$tmp103	%read{149,149} %write{148,148}
const	string	$const27	"lighten"		%read{150,150} %write{2147483647,-1}
temp	int	$tmp104	%read{151,151} %write{150,150}
const	string	$const28	"node_mix_light"		%read{152,152} %write{2147483647,-1}
temp	color	$tmp105	%read{154,154} %write{153,153}
const	string	$const29	"dodge"		%read{155,155} %write{2147483647,-1}
temp	int	$tmp106	%read{156,156} %write{155,155}
const	string	$const30	"node_mix_dodge"		%read{157,157} %write{2147483647,-1}
temp	float	$tmp107	%read{160,160} %write{159,159}
temp	int	$tmp108	%read{161,161} %write{160,160}
temp	float	$tmp109	%read{163,163} %write{162,162}
temp	float	$tmp110	%read{164,164} %write{163,163}
temp	int	$tmp111	%read{166,166} %write{165,165}
temp	float	$tmp112	%read{169,169} %write{168,168}
temp	int	$tmp113	%read{171,171} %write{170,170}
temp	float	$tmp114	%read{175,175} %write{174,174}
temp	int	$tmp115	%read{176,176} %write{175,175}
temp	float	$tmp116	%read{178,178} %write{177,177}
temp	float	$tmp117	%read{179,179} %write{178,178}
temp	int	$tmp118	%read{181,181} %write{180,180}
temp	float	$tmp119	%read{184,184} %write{183,183}
temp	int	$tmp120	%read{186,186} %write{185,185}
temp	float	$tmp121	%read{190,190} %write{189,189}
temp	int	$tmp122	%read{191,191} %write{190,190}
temp	float	$tmp123	%read{193,193} %write{192,192}
temp	float	$tmp124	%read{194,194} %write{193,193}
temp	int	$tmp125	%read{196,196} %write{195,195}
temp	float	$tmp126	%read{199,199} %write{198,198}
temp	int	$tmp127	%read{201,201} %write{200,200}
const	string	$const31	"burn"		%read{205,205} %write{2147483647,-1}
temp	int	$tmp128	%read{206,206} %write{205,205}
const	string	$const32	"node_mix_burn"		%read{207,207} %write{2147483647,-1}
temp	float	$tmp129	%read{211,211} %write{210,210}
temp	float	$tmp130	%read{212,212} %write{211,211}
temp	int	$tmp131	%read{214,214} %write{213,213}
temp	float	$tmp132	%read{217,217} %write{216,216}
temp	float	$tmp133	%read{218,218} %write{217,217}
temp	float	$tmp134	%read{219,219} %write{218,218}
temp	int	$tmp135	%read{221,221} %write{220,220}
temp	int	$tmp136	%read{224,224} %write{223,223}
temp	float	$tmp137	%read{228,228} %write{227,227}
temp	float	$tmp138	%read{229,229} %write{228,228}
temp	int	$tmp139	%read{231,231} %write{230,230}
temp	float	$tmp140	%read{234,234} %write{233,233}
temp	float	$tmp141	%read{235,235} %write{234,234}
temp	float	$tmp142	%read{236,236} %write{235,235}
temp	int	$tmp143	%read{238,238} %write{237,237}
temp	int	$tmp144	%read{241,241} %write{240,240}
temp	float	$tmp145	%read{245,245} %write{244,244}
temp	float	$tmp146	%read{246,246} %write{245,245}
temp	int	$tmp147	%read{248,248} %write{247,247}
temp	float	$tmp148	%read{251,251} %write{250,250}
temp	float	$tmp149	%read{252,252} %write{251,251}
temp	float	$tmp150	%read{253,253} %write{252,252}
temp	int	$tmp151	%read{255,255} %write{254,254}
temp	int	$tmp152	%read{258,258} %write{257,257}
const	string	$const33	"hue"		%read{262,262} %write{2147483647,-1}
temp	int	$tmp153	%read{263,263} %write{262,262}
const	string	$const34	"node_mix_hue"		%read{264,264} %write{2147483647,-1}
const	string	$const35	"rgb_to_hsv"		%read{266,747} %write{2147483647,-1}
temp	float	$tmp154	%read{271,271} %write{267,267}
temp	float	$tmp155	%read{271,271} %write{270,270}
temp	float	$tmp156	%read{270,270} %write{268,268}
temp	float	$tmp157	%read{270,270} %write{269,269}
temp	float	$tmp158	%read{276,276} %write{272,272}
temp	float	$tmp159	%read{276,276} %write{275,275}
temp	float	$tmp160	%read{275,275} %write{273,273}
temp	float	$tmp161	%read{275,275} %write{274,274}
temp	int	$tmp162	%read{280,280} %write{279,279}
temp	int	$tmp163	%read{285,285} %write{284,284}
temp	color	$tmp164	%read{288,288} %write{287,287}
temp	color	$tmp165	%read{289,289} %write{288,288}
temp	float	$tmp166	%read{291,291} %write{290,290}
temp	int	$tmp167	%read{292,292} %write{291,291}
temp	float	$tmp168	%read{295,295} %write{293,293}
temp	float	$tmp169	%read{295,295} %write{294,294}
temp	float	$tmp170	%read{297,297} %write{296,296}
temp	int	$tmp171	%read{298,298} %write{297,297}
temp	float	$tmp172	%read{300,300} %write{299,299}
temp	float	$tmp173	%read{302,302} %write{300,300}
temp	float	$tmp174	%read{302,302} %write{301,301}
const	float	$const36	4		%read{304,832} %write{2147483647,-1}
temp	float	$tmp175	%read{304,304} %write{303,303}
temp	float	$tmp176	%read{306,306} %write{304,304}
temp	float	$tmp177	%read{306,306} %write{305,305}
const	float	$const37	6		%read{307,807} %write{2147483647,-1}
temp	int	$tmp178	%read{309,309} %write{308,308}
temp	float	$tmp179	%read{313,313} %write{312,312}
temp	int	$tmp180	%read{314,314} %write{313,313}
temp	float	$tmp181	%read{320,320} %write{316,316}
temp	float	$tmp182	%read{320,320} %write{319,319}
temp	float	$tmp183	%read{319,319} %write{317,317}
temp	float	$tmp184	%read{319,319} %write{318,318}
temp	float	$tmp185	%read{325,325} %write{321,321}
temp	float	$tmp186	%read{325,325} %write{324,324}
temp	float	$tmp187	%read{324,324} %write{322,322}
temp	float	$tmp188	%read{324,324} %write{323,323}
temp	int	$tmp189	%read{329,329} %write{328,328}
temp	int	$tmp190	%read{334,334} %write{333,333}
temp	color	$tmp191	%read{337,337} %write{336,336}
temp	color	$tmp192	%read{338,338} %write{337,337}
temp	float	$tmp193	%read{340,340} %write{339,339}
temp	int	$tmp194	%read{341,341} %write{340,340}
temp	float	$tmp195	%read{344,344} %write{342,342}
temp	float	$tmp196	%read{344,344} %write{343,343}
temp	float	$tmp197	%read{346,346} %write{345,345}
temp	int	$tmp198	%read{347,347} %write{346,346}
temp	float	$tmp199	%read{349,349} %write{348,348}
temp	float	$tmp200	%read{351,351} %write{349,349}
temp	float	$tmp201	%read{351,351} %write{350,350}
temp	float	$tmp202	%read{353,353} %write{352,352}
temp	float	$tmp203	%read{355,355} %write{353,353}
temp	float	$tmp204	%read{355,355} %write{354,354}
temp	int	$tmp205	%read{358,358} %write{357,357}
temp	float	$tmp206	%read{362,362} %write{361,361}
const	string	$const38	"hsv_to_rgb"		%read{363,797} %write{2147483647,-1}
temp	int	$tmp207	%read{368,368} %write{367,367}
temp	int	$tmp208	%read{371,371} %write{370,370}
temp	float	$tmp209	%read{378,378} %write{377,377}
temp	float	$tmp210	%read{380,380} %write{379,379}
temp	float	$tmp211	%read{381,381} %write{380,380}
temp	float	$tmp212	%read{383,383} %write{382,382}
temp	float	$tmp213	%read{384,384} %write{383,383}
temp	float	$tmp214	%read{385,385} %write{384,384}
temp	int	$tmp215	%read{387,387} %write{386,386}
temp	int	$tmp216	%read{390,390} %write{389,389}
temp	int	$tmp217	%read{393,393} %write{392,392}
const	float	$const39	3		%read{395,829} %write{2147483647,-1}
temp	int	$tmp218	%read{396,396} %write{395,395}
temp	int	$tmp219	%read{399,399} %write{398,398}
const	string	$const40	"saturation"		%read{405,405} %write{2147483647,-1}
temp	int	$tmp220	%read{406,406} %write{405,405}
const	string	$const41	"node_mix_sat"		%read{407,407} %write{2147483647,-1}
temp	float	$tmp221	%read{415,415} %write{411,411}
temp	float	$tmp222	%read{415,415} %write{414,414}
temp	float	$tmp223	%read{414,414} %write{412,412}
temp	float	$tmp224	%read{414,414} %write{413,413}
temp	float	$tmp225	%read{420,420} %write{416,416}
temp	float	$tmp226	%read{420,420} %write{419,419}
temp	float	$tmp227	%read{419,419} %write{417,417}
temp	float	$tmp228	%read{419,419} %write{418,418}
temp	int	$tmp229	%read{424,424} %write{423,423}
temp	int	$tmp230	%read{429,429} %write{428,428}
temp	color	$tmp231	%read{432,432} %write{431,431}
temp	color	$tmp232	%read{433,433} %write{432,432}
temp	float	$tmp233	%read{435,435} %write{434,434}
temp	int	$tmp234	%read{436,436} %write{435,435}
temp	float	$tmp235	%read{439,439} %write{437,437}
temp	float	$tmp236	%read{439,439} %write{438,438}
temp	float	$tmp237	%read{441,441} %write{440,440}
temp	int	$tmp238	%read{442,442} %write{441,441}
temp	float	$tmp239	%read{444,444} %write{443,443}
temp	float	$tmp240	%read{446,446} %write{444,444}
temp	float	$tmp241	%read{446,446} %write{445,445}
temp	float	$tmp242	%read{448,448} %write{447,447}
temp	float	$tmp243	%read{450,450} %write{448,448}
temp	float	$tmp244	%read{450,450} %write{449,449}
temp	int	$tmp245	%read{453,453} %write{452,452}
temp	float	$tmp246	%read{457,457} %write{456,456}
temp	int	$tmp247	%read{458,458} %write{457,457}
temp	float	$tmp248	%read{464,464} %write{460,460}
temp	float	$tmp249	%read{464,464} %write{463,463}
temp	float	$tmp250	%read{463,463} %write{461,461}
temp	float	$tmp251	%read{463,463} %write{462,462}
temp	float	$tmp252	%read{469,469} %write{465,465}
temp	float	$tmp253	%read{469,469} %write{468,468}
temp	float	$tmp254	%read{468,468} %write{466,466}
temp	float	$tmp255	%read{468,468} %write{467,467}
temp	int	$tmp256	%read{473,473} %write{472,472}
temp	int	$tmp257	%read{478,478} %write{477,477}
temp	color	$tmp258	%read{481,481} %write{480,480}
temp	color	$tmp259	%read{482,482} %write{481,481}
temp	float	$tmp260	%read{484,484} %write{483,483}
temp	int	$tmp261	%read{485,485} %write{484,484}
temp	float	$tmp262	%read{488,488} %write{486,486}
temp	float	$tmp263	%read{488,488} %write{487,487}
temp	float	$tmp264	%read{490,490} %write{489,489}
temp	int	$tmp265	%read{491,491} %write{490,490}
temp	float	$tmp266	%read{493,493} %write{492,492}
temp	float	$tmp267	%read{495,495} %write{493,493}
temp	float	$tmp268	%read{495,495} %write{494,494}
temp	float	$tmp269	%read{497,497} %write{496,496}
temp	float	$tmp270	%read{499,499} %write{497,497}
temp	float	$tmp271	%read{499,499} %write{498,498}
temp	int	$tmp272	%read{502,502} %write{501,501}
temp	float	$tmp273	%read{506,506} %write{505,505}
temp	float	$tmp274	%read{509,509} %write{506,506}
temp	float	$tmp275	%read{508,508} %write{507,507}
temp	float	$tmp276	%read{509,509} %write{508,508}
temp	float	$tmp277	%read{510,510} %write{509,509}
temp	int	$tmp278	%read{516,516} %write{515,515}
temp	int	$tmp279	%read{519,519} %write{518,518}
temp	float	$tmp280	%read{526,526} %write{525,525}
temp	float	$tmp281	%read{528,528} %write{527,527}
temp	float	$tmp282	%read{529,529} %write{528,528}
temp	float	$tmp283	%read{531,531} %write{530,530}
temp	float	$tmp284	%read{532,532} %write{531,531}
temp	float	$tmp285	%read{533,533} %write{532,532}
temp	int	$tmp286	%read{535,535} %write{534,534}
temp	int	$tmp287	%read{538,538} %write{537,537}
temp	int	$tmp288	%read{541,541} %write{540,540}
temp	int	$tmp289	%read{544,544} %write{543,543}
temp	int	$tmp290	%read{547,547} %write{546,546}
const	string	$const42	"value"		%read{552,552} %write{2147483647,-1}
temp	int	$tmp291	%read{553,553} %write{552,552}
const	string	$const43	"node_mix_val"		%read{554,554} %write{2147483647,-1}
temp	float	$tmp292	%read{561,561} %write{557,557}
temp	float	$tmp293	%read{561,561} %write{560,560}
temp	float	$tmp294	%read{560,560} %write{558,558}
temp	float	$tmp295	%read{560,560} %write{559,559}
temp	float	$tmp296	%read{566,566} %write{562,562}
temp	float	$tmp297	%read{566,566} %write{565,565}
temp	float	$tmp298	%read{565,565} %write{563,563}
temp	float	$tmp299	%read{565,565} %write{564,564}
temp	int	$tmp300	%read{570,570} %write{569,569}
temp	int	$tmp301	%read{575,575} %write{574,574}
temp	color	$tmp302	%read{578,578} %write{577,577}
temp	color	$tmp303	%read{579,579} %write{578,578}
temp	float	$tmp304	%read{581,581} %write{580,580}
temp	int	$tmp305	%read{582,582} %write{581,581}
temp	float	$tmp306	%read{585,585} %write{583,583}
temp	float	$tmp307	%read{585,585} %write{584,584}
temp	float	$tmp308	%read{587,587} %write{586,586}
temp	int	$tmp309	%read{588,588} %write{587,587}
temp	float	$tmp310	%read{590,590} %write{589,589}
temp	float	$tmp311	%read{592,592} %write{590,590}
temp	float	$tmp312	%read{592,592} %write{591,591}
temp	float	$tmp313	%read{594,594} %write{593,593}
temp	float	$tmp314	%read{596,596} %write{594,594}
temp	float	$tmp315	%read{596,596} %write{595,595}
temp	int	$tmp316	%read{599,599} %write{598,598}
temp	float	$tmp317	%read{607,607} %write{603,603}
temp	float	$tmp318	%read{607,607} %write{606,606}
temp	float	$tmp319	%read{606,606} %write{604,604}
temp	float	$tmp320	%read{606,606} %write{605,605}
temp	float	$tmp321	%read{612,612} %write{608,608}
temp	float	$tmp322	%read{612,612} %write{611,611}
temp	float	$tmp323	%read{611,611} %write{609,609}
temp	float	$tmp324	%read{611,611} %write{610,610}
temp	int	$tmp325	%read{616,616} %write{615,615}
temp	int	$tmp326	%read{621,621} %write{620,620}
temp	color	$tmp327	%read{624,624} %write{623,623}
temp	color	$tmp328	%read{625,625} %write{624,624}
temp	float	$tmp329	%read{627,627} %write{626,626}
temp	int	$tmp330	%read{628,628} %write{627,627}
temp	float	$tmp331	%read{631,631} %write{629,629}
temp	float	$tmp332	%read{631,631} %write{630,630}
temp	float	$tmp333	%read{633,633} %write{632,632}
temp	int	$tmp334	%read{634,634} %write{633,633}
temp	float	$tmp335	%read{636,636} %write{635,635}
temp	float	$tmp336	%read{638,638} %write{636,636}
temp	float	$tmp337	%read{638,638} %write{637,637}
temp	float	$tmp338	%read{640,640} %write{639,639}
temp	float	$tmp339	%read{642,642} %write{640,640}
temp	float	$tmp340	%read{642,642} %write{641,641}
temp	int	$tmp341	%read{645,645} %write{644,644}
temp	float	$tmp342	%read{649,649} %write{648,648}
temp	float	$tmp343	%read{652,652} %write{649,649}
temp	float	$tmp344	%read{651,651} %write{650,650}
temp	float	$tmp345	%read{652,652} %write{651,651}
temp	float	$tmp346	%read{653,653} %write{652,652}
temp	int	$tmp347	%read{659,659} %write{658,658}
temp	int	$tmp348	%read{662,662} %write{661,661}
temp	float	$tmp349	%read{669,669} %write{668,668}
temp	float	$tmp350	%read{671,671} %write{670,670}
temp	float	$tmp351	%read{672,672} %write{671,671}
temp	float	$tmp352	%read{674,674} %write{673,673}
temp	float	$tmp353	%read{675,675} %write{674,674}
temp	float	$tmp354	%read{676,676} %write{675,675}
temp	int	$tmp355	%read{678,678} %write{677,677}
temp	int	$tmp356	%read{681,681} %write{680,680}
temp	int	$tmp357	%read{684,684} %write{683,683}
temp	int	$tmp358	%read{687,687} %write{686,686}
temp	int	$tmp359	%read{690,690} %write{689,689}
const	string	$const44	"color"		%read{694,694} %write{2147483647,-1}
temp	int	$tmp360	%read{695,695} %write{694,694}
const	string	$const45	"node_mix_color"		%read{696,696} %write{2147483647,-1}
temp	float	$tmp361	%read{703,703} %write{699,699}
temp	float	$tmp362	%read{703,703} %write{702,702}
temp	float	$tmp363	%read{702,702} %write{700,700}
temp	float	$tmp364	%read{702,702} %write{701,701}
temp	float	$tmp365	%read{708,708} %write{704,704}
temp	float	$tmp366	%read{708,708} %write{707,707}
temp	float	$tmp367	%read{707,707} %write{705,705}
temp	float	$tmp368	%read{707,707} %write{706,706}
temp	int	$tmp369	%read{712,712} %write{711,711}
temp	int	$tmp370	%read{717,717} %write{716,716}
temp	color	$tmp371	%read{720,720} %write{719,719}
temp	color	$tmp372	%read{721,721} %write{720,720}
temp	float	$tmp373	%read{723,723} %write{722,722}
temp	int	$tmp374	%read{724,724} %write{723,723}
temp	float	$tmp375	%read{727,727} %write{725,725}
temp	float	$tmp376	%read{727,727} %write{726,726}
temp	float	$tmp377	%read{729,729} %write{728,728}
temp	int	$tmp378	%read{730,730} %write{729,729}
temp	float	$tmp379	%read{732,732} %write{731,731}
temp	float	$tmp380	%read{734,734} %write{732,732}
temp	float	$tmp381	%read{734,734} %write{733,733}
temp	float	$tmp382	%read{736,736} %write{735,735}
temp	float	$tmp383	%read{738,738} %write{736,736}
temp	float	$tmp384	%read{738,738} %write{737,737}
temp	int	$tmp385	%read{741,741} %write{740,740}
temp	float	$tmp386	%read{745,745} %write{744,744}
temp	int	$tmp387	%read{746,746} %write{745,745}
temp	float	$tmp388	%read{752,752} %write{748,748}
temp	float	$tmp389	%read{752,752} %write{751,751}
temp	float	$tmp390	%read{751,751} %write{749,749}
temp	float	$tmp391	%read{751,751} %write{750,750}
temp	float	$tmp392	%read{757,757} %write{753,753}
temp	float	$tmp393	%read{757,757} %write{756,756}
temp	float	$tmp394	%read{756,756} %write{754,754}
temp	float	$tmp395	%read{756,756} %write{755,755}
temp	int	$tmp396	%read{761,761} %write{760,760}
temp	int	$tmp397	%read{766,766} %write{765,765}
temp	color	$tmp398	%read{769,769} %write{768,768}
temp	color	$tmp399	%read{770,770} %write{769,769}
temp	float	$tmp400	%read{772,772} %write{771,771}
temp	int	$tmp401	%read{773,773} %write{772,772}
temp	float	$tmp402	%read{776,776} %write{774,774}
temp	float	$tmp403	%read{776,776} %write{775,775}
temp	float	$tmp404	%read{778,778} %write{777,777}
temp	int	$tmp405	%read{779,779} %write{778,778}
temp	float	$tmp406	%read{781,781} %write{780,780}
temp	float	$tmp407	%read{783,783} %write{781,781}
temp	float	$tmp408	%read{783,783} %write{782,782}
temp	float	$tmp409	%read{785,785} %write{784,784}
temp	float	$tmp410	%read{787,787} %write{785,785}
temp	float	$tmp411	%read{787,787} %write{786,786}
temp	int	$tmp412	%read{790,790} %write{789,789}
temp	float	$tmp413	%read{794,794} %write{793,793}
temp	float	$tmp414	%read{796,796} %write{795,795}
temp	int	$tmp415	%read{802,802} %write{801,801}
temp	int	$tmp416	%read{805,805} %write{804,804}
temp	float	$tmp417	%read{812,812} %write{811,811}
temp	float	$tmp418	%read{814,814} %write{813,813}
temp	float	$tmp419	%read{815,815} %write{814,814}
temp	float	$tmp420	%read{817,817} %write{816,816}
temp	float	$tmp421	%read{818,818} %write{817,817}
temp	float	$tmp422	%read{819,819} %write{818,818}
temp	int	$tmp423	%read{821,821} %write{820,820}
temp	int	$tmp424	%read{824,824} %write{823,823}
temp	int	$tmp425	%read{827,827} %write{826,826}
temp	int	$tmp426	%read{830,830} %write{829,829}
temp	int	$tmp427	%read{833,833} %write{832,832}
const	string	$const46	"soft_light"		%read{839,839} %write{2147483647,-1}
temp	int	$tmp428	%read{840,840} %write{839,839}
const	string	$const47	"node_mix_soft"		%read{841,841} %write{2147483647,-1}
temp	color	$tmp429	%read{846,846} %write{844,844}
temp	color	$tmp430	%read{846,846} %write{845,845}
temp	color	$tmp431	%read{847,847} %write{846,846}
temp	color	$tmp432	%read{855,855} %write{848,848}
temp	color	$tmp433	%read{850,850} %write{849,849}
temp	color	$tmp434	%read{851,851} %write{850,850}
temp	color	$tmp435	%read{853,853} %write{851,851}
temp	color	$tmp436	%read{853,853} %write{852,852}
temp	color	$tmp437	%read{854,854} %write{853,853}
temp	color	$tmp438	%read{855,855} %write{854,854}
const	string	$const48	"linear_light"		%read{856,856} %write{2147483647,-1}
temp	int	$tmp439	%read{857,857} %write{856,856}
const	string	$const49	"node_mix_linear"		%read{858,858} %write{2147483647,-1}
temp	float	$tmp440	%read{861,861} %write{860,860}
temp	int	$tmp441	%read{862,862} %write{861,861}
temp	float	$tmp442	%read{868,868} %write{863,863}
temp	float	$tmp443	%read{865,865} %write{864,864}
temp	float	$tmp444	%read{866,866} %write{865,865}
temp	float	$tmp445	%read{867,867} %write{866,866}
temp	float	$tmp446	%read{868,868} %write{867,867}
temp	float	$tmp447	%read{869,869} %write{868,868}
temp	float	$tmp448	%read{875,875} %write{870,870}
temp	float	$tmp449	%read{872,872} %write{871,871}
temp	float	$tmp450	%read{873,873} %write{872,872}
temp	float	$tmp451	%read{874,874} %write{873,873}
temp	float	$tmp452	%read{875,875} %write{874,874}
temp	float	$tmp453	%read{876,876} %write{875,875}
temp	float	$tmp454	%read{878,878} %write{877,877}
temp	int	$tmp455	%read{879,879} %write{878,878}
temp	float	$tmp456	%read{885,885} %write{880,880}
temp	float	$tmp457	%read{882,882} %write{881,881}
temp	float	$tmp458	%read{883,883} %write{882,882}
temp	float	$tmp459	%read{884,884} %write{883,883}
temp	float	$tmp460	%read{885,885} %write{884,884}
temp	float	$tmp461	%read{886,886} %write{885,885}
temp	float	$tmp462	%read{892,892} %write{887,887}
temp	float	$tmp463	%read{889,889} %write{888,888}
temp	float	$tmp464	%read{890,890} %write{889,889}
temp	float	$tmp465	%read{891,891} %write{890,890}
temp	float	$tmp466	%read{892,892} %write{891,891}
temp	float	$tmp467	%read{893,893} %write{892,892}
temp	float	$tmp468	%read{895,895} %write{894,894}
temp	int	$tmp469	%read{896,896} %write{895,895}
temp	float	$tmp470	%read{902,902} %write{897,897}
temp	float	$tmp471	%read{899,899} %write{898,898}
temp	float	$tmp472	%read{900,900} %write{899,899}
temp	float	$tmp473	%read{901,901} %write{900,900}
temp	float	$tmp474	%read{902,902} %write{901,901}
temp	float	$tmp475	%read{903,903} %write{902,902}
temp	float	$tmp476	%read{909,909} %write{904,904}
temp	float	$tmp477	%read{906,906} %write{905,905}
temp	float	$tmp478	%read{907,907} %write{906,906}
temp	float	$tmp479	%read{908,908} %write{907,907}
temp	float	$tmp480	%read{909,909} %write{908,908}
temp	float	$tmp481	%read{910,910} %write{909,909}
temp	color	$tmp482	%read{917,917} %write{913,913}
temp	color	$tmp483	%read{916,916} %write{914,914}
temp	color	$tmp484	%read{917,917} %write{916,916}
code ___main___
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:16
#   float t = (use_clamp) ? clamp(Factor, 0.0, 1.0) : Factor;
	if		use_clamp 4 5 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{16} %argrw{"r"}
	functioncall	$const3 4 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1 Factor $const2 	%filename{"F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		t $tmp1 $const1 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:16
#   float t = (use_clamp) ? clamp(Factor, 0.0, 1.0) : Factor;
	assign		t Factor 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{16} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:18
#   if (blend_type == "mix")
	eq		$tmp2 blend_type $const4 	%line{18} %argrw{"wrr"}
	if		$tmp2 8 8 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:19
#     Result = mix(A, B, t);
	mix		Result A B t 	%line{19} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:20
#   if (blend_type == "add")
	eq		$tmp3 blend_type $const5 	%line{20} %argrw{"wrr"}
	if		$tmp3 13 13 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:21
#     Result = node_mix_add(t, A, B);
	functioncall	$const6 13 	%line{21} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:11
#   return mix(col1, col1 + col2, t);
	add		$tmp4 A B 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{11} %argrw{"wrr"}
	mix		Result A $tmp4 t 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:22
#   if (blend_type == "multiply")
	eq		$tmp5 blend_type $const7 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{22} %argrw{"wrr"}
	if		$tmp5 18 18 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:23
#     Result = node_mix_mul(t, A, B);
	functioncall	$const8 18 	%line{23} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:16
#   return mix(col1, col1 * col2, t);
	mul		$tmp6 A B 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{16} %argrw{"wrr"}
	mix		Result A $tmp6 t 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:24
#   if (blend_type == "screen")
	eq		$tmp7 blend_type $const9 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{24} %argrw{"wrr"}
	if		$tmp7 29 29 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:25
#     Result = node_mix_screen(t, A, B);
	functioncall	$const10 29 	%line{25} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:21
#   float tm = 1.0 - t;
	sub		___355_tm $const2 t 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{21} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:23
#   return color(1.0) - (color(tm) + t * (color(1.0) - col2)) * (color(1.0) - col1);
	assign		$tmp9 ___355_tm 	%line{23} %argrw{"wr"}
	sub		$tmp11 $const11 B 	%argrw{"wrr"}
	mul		$tmp12 t $tmp11 	%argrw{"wrr"}
	add		$tmp13 $tmp9 $tmp12 	%argrw{"wrr"}
	sub		$tmp15 $const11 A 	%argrw{"wrr"}
	mul		$tmp16 $tmp13 $tmp15 	%argrw{"wrr"}
	sub		Result $const11 $tmp16 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:26
#   if (blend_type == "overlay")
	eq		$tmp17 blend_type $const12 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{26} %argrw{"wrr"}
	if		$tmp17 95 95 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:27
#     Result = node_mix_overlay(t, A, B);
	functioncall	$const13 95 	%line{27} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:28
#   float tm = 1.0 - t;
	sub		___356_tm $const2 t 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{28} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:30
#   color outcol = col1;
	assign		___356_outcol A 	%line{30} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:32
#   if (outcol[0] < 0.5)
	compref		$tmp18 ___356_outcol $const14 	%line{32} %argrw{"wrr"}
	lt		$tmp19 $tmp18 $const15 	%argrw{"wrr"}
	if		$tmp19 44 54 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:33
#     outcol[0] *= tm + 2.0 * t * col2[0];
	compref		$tmp20 ___356_outcol $const14 	%line{33} %argrw{"wrr"}
	mul		$tmp21 $const16 t 	%argrw{"wrr"}
	compref		$tmp22 B $const14 	%argrw{"wrr"}
	mul		$tmp23 $tmp21 $tmp22 	%argrw{"wrr"}
	add		$tmp24 ___356_tm $tmp23 	%argrw{"wrr"}
	mul		$tmp25 $tmp20 $tmp24 	%argrw{"wrr"}
	compassign	___356_outcol $const14 $tmp25 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:35
#     outcol[0] = 1.0 - (tm + 2.0 * t * (1.0 - col2[0])) * (1.0 - outcol[0]);
	mul		$tmp26 $const16 t 	%line{35} %argrw{"wrr"}
	compref		$tmp27 B $const14 	%argrw{"wrr"}
	sub		$tmp28 $const2 $tmp27 	%argrw{"wrr"}
	mul		$tmp29 $tmp26 $tmp28 	%argrw{"wrr"}
	add		$tmp30 ___356_tm $tmp29 	%argrw{"wrr"}
	compref		$tmp31 ___356_outcol $const14 	%argrw{"wrr"}
	sub		$tmp32 $const2 $tmp31 	%argrw{"wrr"}
	mul		$tmp33 $tmp30 $tmp32 	%argrw{"wrr"}
	sub		$tmp34 $const2 $tmp33 	%argrw{"wrr"}
	compassign	___356_outcol $const14 $tmp34 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:37
#   if (outcol[1] < 0.5)
	compref		$tmp35 ___356_outcol $const17 	%line{37} %argrw{"wrr"}
	lt		$tmp36 $tmp35 $const15 	%argrw{"wrr"}
	if		$tmp36 64 74 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:38
#     outcol[1] *= tm + 2.0 * t * col2[1];
	compref		$tmp37 ___356_outcol $const17 	%line{38} %argrw{"wrr"}
	mul		$tmp38 $const16 t 	%argrw{"wrr"}
	compref		$tmp39 B $const17 	%argrw{"wrr"}
	mul		$tmp40 $tmp38 $tmp39 	%argrw{"wrr"}
	add		$tmp41 ___356_tm $tmp40 	%argrw{"wrr"}
	mul		$tmp42 $tmp37 $tmp41 	%argrw{"wrr"}
	compassign	___356_outcol $const17 $tmp42 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:40
#     outcol[1] = 1.0 - (tm + 2.0 * t * (1.0 - col2[1])) * (1.0 - outcol[1]);
	mul		$tmp43 $const16 t 	%line{40} %argrw{"wrr"}
	compref		$tmp44 B $const17 	%argrw{"wrr"}
	sub		$tmp45 $const2 $tmp44 	%argrw{"wrr"}
	mul		$tmp46 $tmp43 $tmp45 	%argrw{"wrr"}
	add		$tmp47 ___356_tm $tmp46 	%argrw{"wrr"}
	compref		$tmp48 ___356_outcol $const17 	%argrw{"wrr"}
	sub		$tmp49 $const2 $tmp48 	%argrw{"wrr"}
	mul		$tmp50 $tmp47 $tmp49 	%argrw{"wrr"}
	sub		$tmp51 $const2 $tmp50 	%argrw{"wrr"}
	compassign	___356_outcol $const17 $tmp51 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:42
#   if (outcol[2] < 0.5)
	compref		$tmp52 ___356_outcol $const18 	%line{42} %argrw{"wrr"}
	lt		$tmp53 $tmp52 $const15 	%argrw{"wrr"}
	if		$tmp53 84 94 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:43
#     outcol[2] *= tm + 2.0 * t * col2[2];
	compref		$tmp54 ___356_outcol $const18 	%line{43} %argrw{"wrr"}
	mul		$tmp55 $const16 t 	%argrw{"wrr"}
	compref		$tmp56 B $const18 	%argrw{"wrr"}
	mul		$tmp57 $tmp55 $tmp56 	%argrw{"wrr"}
	add		$tmp58 ___356_tm $tmp57 	%argrw{"wrr"}
	mul		$tmp59 $tmp54 $tmp58 	%argrw{"wrr"}
	compassign	___356_outcol $const18 $tmp59 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:45
#     outcol[2] = 1.0 - (tm + 2.0 * t * (1.0 - col2[2])) * (1.0 - outcol[2]);
	mul		$tmp60 $const16 t 	%line{45} %argrw{"wrr"}
	compref		$tmp61 B $const18 	%argrw{"wrr"}
	sub		$tmp62 $const2 $tmp61 	%argrw{"wrr"}
	mul		$tmp63 $tmp60 $tmp62 	%argrw{"wrr"}
	add		$tmp64 ___356_tm $tmp63 	%argrw{"wrr"}
	compref		$tmp65 ___356_outcol $const18 	%argrw{"wrr"}
	sub		$tmp66 $const2 $tmp65 	%argrw{"wrr"}
	mul		$tmp67 $tmp64 $tmp66 	%argrw{"wrr"}
	sub		$tmp68 $const2 $tmp67 	%argrw{"wrr"}
	compassign	___356_outcol $const18 $tmp68 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:47
#   return outcol;
	assign		Result ___356_outcol 	%line{47} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:28
#   if (blend_type == "subtract")
	eq		$tmp69 blend_type $const19 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{28} %argrw{"wrr"}
	if		$tmp69 100 100 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:29
#     Result = node_mix_sub(t, A, B);
	functioncall	$const20 100 	%line{29} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:52
#   return mix(col1, col1 - col2, t);
	sub		$tmp70 A B 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{52} %argrw{"wrr"}
	mix		Result A $tmp70 t 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:30
#   if (blend_type == "divide")
	eq		$tmp71 blend_type $const21 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{30} %argrw{"wrr"}
	if		$tmp71 139 139 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:31
#     Result = node_mix_div(t, A, B);
	functioncall	$const22 139 	%line{31} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:57
#   float tm = 1.0 - t;
	sub		___358_tm $const2 t 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{57} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:59
#   color outcol = col1;
	assign		___358_outcol A 	%line{59} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:61
#   if (col2[0] != 0.0)
	compref		$tmp72 B $const14 	%line{61} %argrw{"wrr"}
	neq		$tmp73 $tmp72 $const1 	%argrw{"wrr"}
	if		$tmp73 116 116 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:62
#     outcol[0] = tm * outcol[0] + t * outcol[0] / col2[0];
	compref		$tmp74 ___358_outcol $const14 	%line{62} %argrw{"wrr"}
	mul		$tmp75 ___358_tm $tmp74 	%argrw{"wrr"}
	compref		$tmp76 ___358_outcol $const14 	%argrw{"wrr"}
	mul		$tmp77 t $tmp76 	%argrw{"wrr"}
	compref		$tmp78 B $const14 	%argrw{"wrr"}
	div		$tmp79 $tmp77 $tmp78 	%argrw{"wrr"}
	add		$tmp80 $tmp75 $tmp79 	%argrw{"wrr"}
	compassign	___358_outcol $const14 $tmp80 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:63
#   if (col2[1] != 0.0)
	compref		$tmp81 B $const17 	%line{63} %argrw{"wrr"}
	neq		$tmp82 $tmp81 $const1 	%argrw{"wrr"}
	if		$tmp82 127 127 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:64
#     outcol[1] = tm * outcol[1] + t * outcol[1] / col2[1];
	compref		$tmp83 ___358_outcol $const17 	%line{64} %argrw{"wrr"}
	mul		$tmp84 ___358_tm $tmp83 	%argrw{"wrr"}
	compref		$tmp85 ___358_outcol $const17 	%argrw{"wrr"}
	mul		$tmp86 t $tmp85 	%argrw{"wrr"}
	compref		$tmp87 B $const17 	%argrw{"wrr"}
	div		$tmp88 $tmp86 $tmp87 	%argrw{"wrr"}
	add		$tmp89 $tmp84 $tmp88 	%argrw{"wrr"}
	compassign	___358_outcol $const17 $tmp89 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:65
#   if (col2[2] != 0.0)
	compref		$tmp90 B $const18 	%line{65} %argrw{"wrr"}
	neq		$tmp91 $tmp90 $const1 	%argrw{"wrr"}
	if		$tmp91 138 138 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:66
#     outcol[2] = tm * outcol[2] + t * outcol[2] / col2[2];
	compref		$tmp92 ___358_outcol $const18 	%line{66} %argrw{"wrr"}
	mul		$tmp93 ___358_tm $tmp92 	%argrw{"wrr"}
	compref		$tmp94 ___358_outcol $const18 	%argrw{"wrr"}
	mul		$tmp95 t $tmp94 	%argrw{"wrr"}
	compref		$tmp96 B $const18 	%argrw{"wrr"}
	div		$tmp97 $tmp95 $tmp96 	%argrw{"wrr"}
	add		$tmp98 $tmp93 $tmp97 	%argrw{"wrr"}
	compassign	___358_outcol $const18 $tmp98 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:68
#   return outcol;
	assign		Result ___358_outcol 	%line{68} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:32
#   if (blend_type == "difference")
	eq		$tmp99 blend_type $const23 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{32} %argrw{"wrr"}
	if		$tmp99 145 145 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:33
#     Result = node_mix_diff(t, A, B);
	functioncall	$const24 145 	%line{33} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:73
#   return mix(col1, abs(col1 - col2), t);
	sub		$tmp101 A B 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{73} %argrw{"wrr"}
	abs		$tmp100 $tmp101 	%argrw{"wr"}
	mix		Result A $tmp100 t 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:34
#   if (blend_type == "darken")
	eq		$tmp102 blend_type $const25 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{34} %argrw{"wrr"}
	if		$tmp102 150 150 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:35
#     Result = node_mix_dark(t, A, B);
	functioncall	$const26 150 	%line{35} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:78
#   return mix(col1, min(col1, col2), t);
	min		$tmp103 A B 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{78} %argrw{"wrr"}
	mix		Result A $tmp103 t 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:36
#   if (blend_type == "lighten")
	eq		$tmp104 blend_type $const27 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{36} %argrw{"wrr"}
	if		$tmp104 155 155 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:37
#     Result = node_mix_light(t, A, B);
	functioncall	$const28 155 	%line{37} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:83
#   return mix(col1, max(col1, col2), t);
	max		$tmp105 A B 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{83} %argrw{"wrr"}
	mix		Result A $tmp105 t 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:38
#   if (blend_type == "dodge")
	eq		$tmp106 blend_type $const29 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{38} %argrw{"wrr"}
	if		$tmp106 205 205 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:39
#     Result = node_mix_dodge(t, A, B);
	functioncall	$const30 205 	%line{39} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:88
#   color outcol = col1;
	assign		___362_outcol A 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{88} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:90
#   if (outcol[0] != 0.0) {
	compref		$tmp107 ___362_outcol $const14 	%line{90} %argrw{"wrr"}
	neq		$tmp108 $tmp107 $const1 	%argrw{"wrr"}
	if		$tmp108 174 174 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:91
#     float tmp = 1.0 - t * col2[0];
	compref		$tmp109 B $const14 	%line{91} %argrw{"wrr"}
	mul		$tmp110 t $tmp109 	%argrw{"wrr"}
	sub		___363_tmp $const2 $tmp110 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:92
#     if (tmp <= 0.0)
	le		$tmp111 ___363_tmp $const1 	%line{92} %argrw{"wrr"}
	if		$tmp111 168 174 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:93
#       outcol[0] = 1.0;
	compassign	___362_outcol $const14 $const2 	%line{93} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:94
#     else if ((tmp = outcol[0] / tmp) > 1.0)
	compref		$tmp112 ___362_outcol $const14 	%line{94} %argrw{"wrr"}
	div		___363_tmp $tmp112 ___363_tmp 	%argrw{"wrr"}
	gt		$tmp113 ___363_tmp $const2 	%argrw{"wrr"}
	if		$tmp113 173 174 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:95
#       outcol[0] = 1.0;
	compassign	___362_outcol $const14 $const2 	%line{95} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:97
#       outcol[0] = tmp;
	compassign	___362_outcol $const14 ___363_tmp 	%line{97} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:99
#   if (outcol[1] != 0.0) {
	compref		$tmp114 ___362_outcol $const17 	%line{99} %argrw{"wrr"}
	neq		$tmp115 $tmp114 $const1 	%argrw{"wrr"}
	if		$tmp115 189 189 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:100
#     float tmp = 1.0 - t * col2[1];
	compref		$tmp116 B $const17 	%line{100} %argrw{"wrr"}
	mul		$tmp117 t $tmp116 	%argrw{"wrr"}
	sub		___364_tmp $const2 $tmp117 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:101
#     if (tmp <= 0.0)
	le		$tmp118 ___364_tmp $const1 	%line{101} %argrw{"wrr"}
	if		$tmp118 183 189 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:102
#       outcol[1] = 1.0;
	compassign	___362_outcol $const17 $const2 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:103
#     else if ((tmp = outcol[1] / tmp) > 1.0)
	compref		$tmp119 ___362_outcol $const17 	%line{103} %argrw{"wrr"}
	div		___364_tmp $tmp119 ___364_tmp 	%argrw{"wrr"}
	gt		$tmp120 ___364_tmp $const2 	%argrw{"wrr"}
	if		$tmp120 188 189 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:104
#       outcol[1] = 1.0;
	compassign	___362_outcol $const17 $const2 	%line{104} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:106
#       outcol[1] = tmp;
	compassign	___362_outcol $const17 ___364_tmp 	%line{106} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:108
#   if (outcol[2] != 0.0) {
	compref		$tmp121 ___362_outcol $const18 	%line{108} %argrw{"wrr"}
	neq		$tmp122 $tmp121 $const1 	%argrw{"wrr"}
	if		$tmp122 204 204 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:109
#     float tmp = 1.0 - t * col2[2];
	compref		$tmp123 B $const18 	%line{109} %argrw{"wrr"}
	mul		$tmp124 t $tmp123 	%argrw{"wrr"}
	sub		___365_tmp $const2 $tmp124 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:110
#     if (tmp <= 0.0)
	le		$tmp125 ___365_tmp $const1 	%line{110} %argrw{"wrr"}
	if		$tmp125 198 204 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:111
#       outcol[2] = 1.0;
	compassign	___362_outcol $const18 $const2 	%line{111} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:112
#     else if ((tmp = outcol[2] / tmp) > 1.0)
	compref		$tmp126 ___362_outcol $const18 	%line{112} %argrw{"wrr"}
	div		___365_tmp $tmp126 ___365_tmp 	%argrw{"wrr"}
	gt		$tmp127 ___365_tmp $const2 	%argrw{"wrr"}
	if		$tmp127 203 204 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:113
#       outcol[2] = 1.0;
	compassign	___362_outcol $const18 $const2 	%line{113} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:115
#       outcol[2] = tmp;
	compassign	___362_outcol $const18 ___365_tmp 	%line{115} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:118
#   return outcol;
	assign		Result ___362_outcol 	%line{118} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:40
#   if (blend_type == "burn")
	eq		$tmp128 blend_type $const31 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{40} %argrw{"wrr"}
	if		$tmp128 262 262 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:41
#     Result = node_mix_burn(t, A, B);
	functioncall	$const32 262 	%line{41} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:123
#   float tmp, tm = 1.0 - t;
	sub		___366_tm $const2 t 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{123} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:125
#   color outcol = col1;
	assign		___366_outcol A 	%line{125} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:127
#   tmp = tm + t * col2[0];
	compref		$tmp129 B $const14 	%line{127} %argrw{"wrr"}
	mul		$tmp130 t $tmp129 	%argrw{"wrr"}
	add		___366_tmp ___366_tm $tmp130 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:128
#   if (tmp <= 0.0)
	le		$tmp131 ___366_tmp $const1 	%line{128} %argrw{"wrr"}
	if		$tmp131 216 227 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:129
#     outcol[0] = 0.0;
	compassign	___366_outcol $const14 $const1 	%line{129} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:130
#   else if ((tmp = (1.0 - (1.0 - outcol[0]) / tmp)) < 0.0)
	compref		$tmp132 ___366_outcol $const14 	%line{130} %argrw{"wrr"}
	sub		$tmp133 $const2 $tmp132 	%argrw{"wrr"}
	div		$tmp134 $tmp133 ___366_tmp 	%argrw{"wrr"}
	sub		___366_tmp $const2 $tmp134 	%argrw{"wrr"}
	lt		$tmp135 ___366_tmp $const1 	%argrw{"wrr"}
	if		$tmp135 223 227 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:131
#     outcol[0] = 0.0;
	compassign	___366_outcol $const14 $const1 	%line{131} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:132
#   else if (tmp > 1.0)
	gt		$tmp136 ___366_tmp $const2 	%line{132} %argrw{"wrr"}
	if		$tmp136 226 227 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:133
#     outcol[0] = 1.0;
	compassign	___366_outcol $const14 $const2 	%line{133} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:135
#     outcol[0] = tmp;
	compassign	___366_outcol $const14 ___366_tmp 	%line{135} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:137
#   tmp = tm + t * col2[1];
	compref		$tmp137 B $const17 	%line{137} %argrw{"wrr"}
	mul		$tmp138 t $tmp137 	%argrw{"wrr"}
	add		___366_tmp ___366_tm $tmp138 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:138
#   if (tmp <= 0.0)
	le		$tmp139 ___366_tmp $const1 	%line{138} %argrw{"wrr"}
	if		$tmp139 233 244 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:139
#     outcol[1] = 0.0;
	compassign	___366_outcol $const17 $const1 	%line{139} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:140
#   else if ((tmp = (1.0 - (1.0 - outcol[1]) / tmp)) < 0.0)
	compref		$tmp140 ___366_outcol $const17 	%line{140} %argrw{"wrr"}
	sub		$tmp141 $const2 $tmp140 	%argrw{"wrr"}
	div		$tmp142 $tmp141 ___366_tmp 	%argrw{"wrr"}
	sub		___366_tmp $const2 $tmp142 	%argrw{"wrr"}
	lt		$tmp143 ___366_tmp $const1 	%argrw{"wrr"}
	if		$tmp143 240 244 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:141
#     outcol[1] = 0.0;
	compassign	___366_outcol $const17 $const1 	%line{141} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:142
#   else if (tmp > 1.0)
	gt		$tmp144 ___366_tmp $const2 	%line{142} %argrw{"wrr"}
	if		$tmp144 243 244 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:143
#     outcol[1] = 1.0;
	compassign	___366_outcol $const17 $const2 	%line{143} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:145
#     outcol[1] = tmp;
	compassign	___366_outcol $const17 ___366_tmp 	%line{145} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:147
#   tmp = tm + t * col2[2];
	compref		$tmp145 B $const18 	%line{147} %argrw{"wrr"}
	mul		$tmp146 t $tmp145 	%argrw{"wrr"}
	add		___366_tmp ___366_tm $tmp146 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:148
#   if (tmp <= 0.0)
	le		$tmp147 ___366_tmp $const1 	%line{148} %argrw{"wrr"}
	if		$tmp147 250 261 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:149
#     outcol[2] = 0.0;
	compassign	___366_outcol $const18 $const1 	%line{149} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:150
#   else if ((tmp = (1.0 - (1.0 - outcol[2]) / tmp)) < 0.0)
	compref		$tmp148 ___366_outcol $const18 	%line{150} %argrw{"wrr"}
	sub		$tmp149 $const2 $tmp148 	%argrw{"wrr"}
	div		$tmp150 $tmp149 ___366_tmp 	%argrw{"wrr"}
	sub		___366_tmp $const2 $tmp150 	%argrw{"wrr"}
	lt		$tmp151 ___366_tmp $const1 	%argrw{"wrr"}
	if		$tmp151 257 261 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:151
#     outcol[2] = 0.0;
	compassign	___366_outcol $const18 $const1 	%line{151} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:152
#   else if (tmp > 1.0)
	gt		$tmp152 ___366_tmp $const2 	%line{152} %argrw{"wrr"}
	if		$tmp152 260 261 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:153
#     outcol[2] = 1.0;
	compassign	___366_outcol $const18 $const2 	%line{153} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:155
#     outcol[2] = tmp;
	compassign	___366_outcol $const18 ___366_tmp 	%line{155} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:157
#   return outcol;
	assign		Result ___366_outcol 	%line{157} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:42
#   if (blend_type == "hue")
	eq		$tmp153 blend_type $const33 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{42} %argrw{"wrr"}
	if		$tmp153 405 405 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:43
#     Result = node_mix_hue(t, A, B);
	functioncall	$const34 405 	%line{43} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:162
#   color outcol = col1;
	assign		___367_outcol A 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{162} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:163
#   color hsv2 = rgb_to_hsv(col2);
	functioncall	$const35 312 	%line{163} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp154 B $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp156 B $const17 	%argrw{"wrr"}
	compref		$tmp157 B $const18 	%argrw{"wrr"}
	max		$tmp155 $tmp156 $tmp157 	%argrw{"wrr"}
	max		___337_cmax $tmp154 $tmp155 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp158 B $const14 	%line{76} %argrw{"wrr"}
	compref		$tmp160 B $const17 	%argrw{"wrr"}
	compref		$tmp161 B $const18 	%argrw{"wrr"}
	min		$tmp159 $tmp160 $tmp161 	%argrw{"wrr"}
	min		___337_cmin $tmp158 $tmp159 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp162 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp162 282 284 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp163 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp163 287 311 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp164 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp165 $tmp164 B 	%argrw{"wrr"}
	div		___337_c $tmp165 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp166 B $const14 	%line{95} %argrw{"wrr"}
	eq		$tmp167 $tmp166 ___337_cmax 	%argrw{"wrr"}
	if		$tmp167 296 307 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp168 ___337_c $const18 	%line{96} %argrw{"wrr"}
	compref		$tmp169 ___337_c $const17 	%argrw{"wrr"}
	sub		___337_h $tmp168 $tmp169 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp170 B $const17 	%line{97} %argrw{"wrr"}
	eq		$tmp171 $tmp170 ___337_cmax 	%argrw{"wrr"}
	if		$tmp171 303 307 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp172 ___337_c $const14 	%line{98} %argrw{"wrr"}
	add		$tmp173 $const16 $tmp172 	%argrw{"wrr"}
	compref		$tmp174 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp173 $tmp174 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp175 ___337_c $const17 	%line{100} %argrw{"wrr"}
	add		$tmp176 $const36 $tmp175 	%argrw{"wrr"}
	compref		$tmp177 ___337_c $const14 	%argrw{"wrr"}
	sub		___337_h $tmp176 $tmp177 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const37 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp178 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp178 311 311 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___367_hsv2 ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:165
#   if (hsv2[1] != 0.0) {
	compref		$tmp179 ___367_hsv2 $const17 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{165} %argrw{"wrr"}
	neq		$tmp180 $tmp179 $const1 	%argrw{"wrr"}
	if		$tmp180 404 404 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:166
#     color hsv = rgb_to_hsv(outcol);
	functioncall	$const35 361 	%line{166} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp181 ___367_outcol $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp183 ___367_outcol $const17 	%argrw{"wrr"}
	compref		$tmp184 ___367_outcol $const18 	%argrw{"wrr"}
	max		$tmp182 $tmp183 $tmp184 	%argrw{"wrr"}
	max		___337_cmax $tmp181 $tmp182 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp185 ___367_outcol $const14 	%line{76} %argrw{"wrr"}
	compref		$tmp187 ___367_outcol $const17 	%argrw{"wrr"}
	compref		$tmp188 ___367_outcol $const18 	%argrw{"wrr"}
	min		$tmp186 $tmp187 $tmp188 	%argrw{"wrr"}
	min		___337_cmin $tmp185 $tmp186 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp189 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp189 331 333 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp190 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp190 336 360 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp191 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp192 $tmp191 ___367_outcol 	%argrw{"wrr"}
	div		___337_c $tmp192 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp193 ___367_outcol $const14 	%line{95} %argrw{"wrr"}
	eq		$tmp194 $tmp193 ___337_cmax 	%argrw{"wrr"}
	if		$tmp194 345 356 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp195 ___337_c $const18 	%line{96} %argrw{"wrr"}
	compref		$tmp196 ___337_c $const17 	%argrw{"wrr"}
	sub		___337_h $tmp195 $tmp196 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp197 ___367_outcol $const17 	%line{97} %argrw{"wrr"}
	eq		$tmp198 $tmp197 ___337_cmax 	%argrw{"wrr"}
	if		$tmp198 352 356 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp199 ___337_c $const14 	%line{98} %argrw{"wrr"}
	add		$tmp200 $const16 $tmp199 	%argrw{"wrr"}
	compref		$tmp201 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp200 $tmp201 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp202 ___337_c $const17 	%line{100} %argrw{"wrr"}
	add		$tmp203 $const36 $tmp202 	%argrw{"wrr"}
	compref		$tmp204 ___337_c $const14 	%argrw{"wrr"}
	sub		___337_h $tmp203 $tmp204 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const37 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp205 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp205 360 360 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___368_hsv ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:167
#     hsv[0] = hsv2[0];
	compref		$tmp206 ___367_hsv2 $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{167} %argrw{"wrr"}
	compassign	___368_hsv $const14 $tmp206 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:168
#     color tmp = hsv_to_rgb(hsv);
	functioncall	$const38 403 	%line{168} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:116
#   h = hsv[0];
	compref		___342_h ___368_hsv $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{116} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:117
#   s = hsv[1];
	compref		___342_s ___368_hsv $const17 	%line{117} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:118
#   v = hsv[2];
	compref		___342_v ___368_hsv $const18 	%line{118} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:120
#   if (s == 0.0) {
	eq		$tmp207 ___342_s $const1 	%line{120} %argrw{"wrr"}
	if		$tmp207 370 402 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:121
#     rgb = color(v, v, v);
	color		___342_rgb ___342_v ___342_v ___342_v 	%line{121} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:124
#     if (h == 1.0)
	eq		$tmp208 ___342_h $const2 	%line{124} %argrw{"wrr"}
	if		$tmp208 373 373 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:125
#       h = 0.0;
	assign		___342_h $const1 	%line{125} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:127
#     h *= 6.0;
	mul		___342_h ___342_h $const37 	%line{127} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:128
#     i = floor(h);
	floor		___342_i ___342_h 	%line{128} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:129
#     f = h - i;
	sub		___342_f ___342_h ___342_i 	%line{129} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:130
#     rgb = color(f, f, f);
	color		___342_rgb ___342_f ___342_f ___342_f 	%line{130} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:131
#     p = v * (1.0 - s);
	sub		$tmp209 $const2 ___342_s 	%line{131} %argrw{"wrr"}
	mul		___342_p ___342_v $tmp209 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:132
#     q = v * (1.0 - (s * f));
	mul		$tmp210 ___342_s ___342_f 	%line{132} %argrw{"wrr"}
	sub		$tmp211 $const2 $tmp210 	%argrw{"wrr"}
	mul		___342_q ___342_v $tmp211 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:133
#     t = v * (1.0 - (s * (1.0 - f)));
	sub		$tmp212 $const2 ___342_f 	%line{133} %argrw{"wrr"}
	mul		$tmp213 ___342_s $tmp212 	%argrw{"wrr"}
	sub		$tmp214 $const2 $tmp213 	%argrw{"wrr"}
	mul		___342_t ___342_v $tmp214 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:135
#     if (i == 0.0)
	eq		$tmp215 ___342_i $const1 	%line{135} %argrw{"wrr"}
	if		$tmp215 389 402 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:136
#       rgb = color(v, t, p);
	color		___342_rgb ___342_v ___342_t ___342_p 	%line{136} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:137
#     else if (i == 1.0)
	eq		$tmp216 ___342_i $const2 	%line{137} %argrw{"wrr"}
	if		$tmp216 392 402 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:138
#       rgb = color(q, v, p);
	color		___342_rgb ___342_q ___342_v ___342_p 	%line{138} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:139
#     else if (i == 2.0)
	eq		$tmp217 ___342_i $const16 	%line{139} %argrw{"wrr"}
	if		$tmp217 395 402 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:140
#       rgb = color(p, v, t);
	color		___342_rgb ___342_p ___342_v ___342_t 	%line{140} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:141
#     else if (i == 3.0)
	eq		$tmp218 ___342_i $const39 	%line{141} %argrw{"wrr"}
	if		$tmp218 398 402 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:142
#       rgb = color(p, q, v);
	color		___342_rgb ___342_p ___342_q ___342_v 	%line{142} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:143
#     else if (i == 4.0)
	eq		$tmp219 ___342_i $const36 	%line{143} %argrw{"wrr"}
	if		$tmp219 401 402 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:144
#       rgb = color(t, p, v);
	color		___342_rgb ___342_t ___342_p ___342_v 	%line{144} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:146
#       rgb = color(v, p, q);
	color		___342_rgb ___342_v ___342_p ___342_q 	%line{146} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:149
#   return rgb;
	assign		___368_tmp ___342_rgb 	%line{149} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:170
#     outcol = mix(outcol, tmp, t);
	mix		___367_outcol ___367_outcol ___368_tmp t 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{170} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:173
#   return outcol;
	assign		Result ___367_outcol 	%line{173} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:44
#   if (blend_type == "saturation")
	eq		$tmp220 blend_type $const40 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{44} %argrw{"wrr"}
	if		$tmp220 552 552 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:45
#     Result = node_mix_sat(t, A, B);
	functioncall	$const41 552 	%line{45} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:178
#   float tm = 1.0 - t;
	sub		___369_tm $const2 t 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{178} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:180
#   color outcol = col1;
	assign		___369_outcol A 	%line{180} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:182
#   color hsv = rgb_to_hsv(outcol);
	functioncall	$const35 456 	%line{182} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp221 ___369_outcol $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp223 ___369_outcol $const17 	%argrw{"wrr"}
	compref		$tmp224 ___369_outcol $const18 	%argrw{"wrr"}
	max		$tmp222 $tmp223 $tmp224 	%argrw{"wrr"}
	max		___337_cmax $tmp221 $tmp222 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp225 ___369_outcol $const14 	%line{76} %argrw{"wrr"}
	compref		$tmp227 ___369_outcol $const17 	%argrw{"wrr"}
	compref		$tmp228 ___369_outcol $const18 	%argrw{"wrr"}
	min		$tmp226 $tmp227 $tmp228 	%argrw{"wrr"}
	min		___337_cmin $tmp225 $tmp226 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp229 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp229 426 428 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp230 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp230 431 455 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp231 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp232 $tmp231 ___369_outcol 	%argrw{"wrr"}
	div		___337_c $tmp232 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp233 ___369_outcol $const14 	%line{95} %argrw{"wrr"}
	eq		$tmp234 $tmp233 ___337_cmax 	%argrw{"wrr"}
	if		$tmp234 440 451 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp235 ___337_c $const18 	%line{96} %argrw{"wrr"}
	compref		$tmp236 ___337_c $const17 	%argrw{"wrr"}
	sub		___337_h $tmp235 $tmp236 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp237 ___369_outcol $const17 	%line{97} %argrw{"wrr"}
	eq		$tmp238 $tmp237 ___337_cmax 	%argrw{"wrr"}
	if		$tmp238 447 451 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp239 ___337_c $const14 	%line{98} %argrw{"wrr"}
	add		$tmp240 $const16 $tmp239 	%argrw{"wrr"}
	compref		$tmp241 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp240 $tmp241 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp242 ___337_c $const17 	%line{100} %argrw{"wrr"}
	add		$tmp243 $const36 $tmp242 	%argrw{"wrr"}
	compref		$tmp244 ___337_c $const14 	%argrw{"wrr"}
	sub		___337_h $tmp243 $tmp244 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const37 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp245 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp245 455 455 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___369_hsv ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:184
#   if (hsv[1] != 0.0) {
	compref		$tmp246 ___369_hsv $const17 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{184} %argrw{"wrr"}
	neq		$tmp247 $tmp246 $const1 	%argrw{"wrr"}
	if		$tmp247 551 551 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:185
#     color hsv2 = rgb_to_hsv(col2);
	functioncall	$const35 505 	%line{185} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp248 B $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp250 B $const17 	%argrw{"wrr"}
	compref		$tmp251 B $const18 	%argrw{"wrr"}
	max		$tmp249 $tmp250 $tmp251 	%argrw{"wrr"}
	max		___337_cmax $tmp248 $tmp249 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp252 B $const14 	%line{76} %argrw{"wrr"}
	compref		$tmp254 B $const17 	%argrw{"wrr"}
	compref		$tmp255 B $const18 	%argrw{"wrr"}
	min		$tmp253 $tmp254 $tmp255 	%argrw{"wrr"}
	min		___337_cmin $tmp252 $tmp253 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp256 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp256 475 477 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp257 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp257 480 504 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp258 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp259 $tmp258 B 	%argrw{"wrr"}
	div		___337_c $tmp259 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp260 B $const14 	%line{95} %argrw{"wrr"}
	eq		$tmp261 $tmp260 ___337_cmax 	%argrw{"wrr"}
	if		$tmp261 489 500 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp262 ___337_c $const18 	%line{96} %argrw{"wrr"}
	compref		$tmp263 ___337_c $const17 	%argrw{"wrr"}
	sub		___337_h $tmp262 $tmp263 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp264 B $const17 	%line{97} %argrw{"wrr"}
	eq		$tmp265 $tmp264 ___337_cmax 	%argrw{"wrr"}
	if		$tmp265 496 500 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp266 ___337_c $const14 	%line{98} %argrw{"wrr"}
	add		$tmp267 $const16 $tmp266 	%argrw{"wrr"}
	compref		$tmp268 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp267 $tmp268 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp269 ___337_c $const17 	%line{100} %argrw{"wrr"}
	add		$tmp270 $const36 $tmp269 	%argrw{"wrr"}
	compref		$tmp271 ___337_c $const14 	%argrw{"wrr"}
	sub		___337_h $tmp270 $tmp271 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const37 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp272 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp272 504 504 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___370_hsv2 ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:187
#     hsv[1] = tm * hsv[1] + t * hsv2[1];
	compref		$tmp273 ___369_hsv $const17 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{187} %argrw{"wrr"}
	mul		$tmp274 ___369_tm $tmp273 	%argrw{"wrr"}
	compref		$tmp275 ___370_hsv2 $const17 	%argrw{"wrr"}
	mul		$tmp276 t $tmp275 	%argrw{"wrr"}
	add		$tmp277 $tmp274 $tmp276 	%argrw{"wrr"}
	compassign	___369_hsv $const17 $tmp277 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:188
#     outcol = hsv_to_rgb(hsv);
	functioncall	$const38 551 	%line{188} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:116
#   h = hsv[0];
	compref		___342_h ___369_hsv $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{116} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:117
#   s = hsv[1];
	compref		___342_s ___369_hsv $const17 	%line{117} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:118
#   v = hsv[2];
	compref		___342_v ___369_hsv $const18 	%line{118} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:120
#   if (s == 0.0) {
	eq		$tmp278 ___342_s $const1 	%line{120} %argrw{"wrr"}
	if		$tmp278 518 550 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:121
#     rgb = color(v, v, v);
	color		___342_rgb ___342_v ___342_v ___342_v 	%line{121} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:124
#     if (h == 1.0)
	eq		$tmp279 ___342_h $const2 	%line{124} %argrw{"wrr"}
	if		$tmp279 521 521 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:125
#       h = 0.0;
	assign		___342_h $const1 	%line{125} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:127
#     h *= 6.0;
	mul		___342_h ___342_h $const37 	%line{127} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:128
#     i = floor(h);
	floor		___342_i ___342_h 	%line{128} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:129
#     f = h - i;
	sub		___342_f ___342_h ___342_i 	%line{129} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:130
#     rgb = color(f, f, f);
	color		___342_rgb ___342_f ___342_f ___342_f 	%line{130} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:131
#     p = v * (1.0 - s);
	sub		$tmp280 $const2 ___342_s 	%line{131} %argrw{"wrr"}
	mul		___342_p ___342_v $tmp280 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:132
#     q = v * (1.0 - (s * f));
	mul		$tmp281 ___342_s ___342_f 	%line{132} %argrw{"wrr"}
	sub		$tmp282 $const2 $tmp281 	%argrw{"wrr"}
	mul		___342_q ___342_v $tmp282 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:133
#     t = v * (1.0 - (s * (1.0 - f)));
	sub		$tmp283 $const2 ___342_f 	%line{133} %argrw{"wrr"}
	mul		$tmp284 ___342_s $tmp283 	%argrw{"wrr"}
	sub		$tmp285 $const2 $tmp284 	%argrw{"wrr"}
	mul		___342_t ___342_v $tmp285 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:135
#     if (i == 0.0)
	eq		$tmp286 ___342_i $const1 	%line{135} %argrw{"wrr"}
	if		$tmp286 537 550 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:136
#       rgb = color(v, t, p);
	color		___342_rgb ___342_v ___342_t ___342_p 	%line{136} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:137
#     else if (i == 1.0)
	eq		$tmp287 ___342_i $const2 	%line{137} %argrw{"wrr"}
	if		$tmp287 540 550 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:138
#       rgb = color(q, v, p);
	color		___342_rgb ___342_q ___342_v ___342_p 	%line{138} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:139
#     else if (i == 2.0)
	eq		$tmp288 ___342_i $const16 	%line{139} %argrw{"wrr"}
	if		$tmp288 543 550 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:140
#       rgb = color(p, v, t);
	color		___342_rgb ___342_p ___342_v ___342_t 	%line{140} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:141
#     else if (i == 3.0)
	eq		$tmp289 ___342_i $const39 	%line{141} %argrw{"wrr"}
	if		$tmp289 546 550 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:142
#       rgb = color(p, q, v);
	color		___342_rgb ___342_p ___342_q ___342_v 	%line{142} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:143
#     else if (i == 4.0)
	eq		$tmp290 ___342_i $const36 	%line{143} %argrw{"wrr"}
	if		$tmp290 549 550 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:144
#       rgb = color(t, p, v);
	color		___342_rgb ___342_t ___342_p ___342_v 	%line{144} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:146
#       rgb = color(v, p, q);
	color		___342_rgb ___342_v ___342_p ___342_q 	%line{146} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:149
#   return rgb;
	assign		___369_outcol ___342_rgb 	%line{149} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:191
#   return outcol;
	assign		Result ___369_outcol 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{191} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:46
#   if (blend_type == "value")
	eq		$tmp291 blend_type $const42 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{46} %argrw{"wrr"}
	if		$tmp291 694 694 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:47
#     Result = node_mix_val(t, A, B);
	functioncall	$const43 694 	%line{47} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:196
#   float tm = 1.0 - t;
	sub		___371_tm $const2 t 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{196} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:198
#   color hsv = rgb_to_hsv(col1);
	functioncall	$const35 602 	%line{198} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp292 A $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp294 A $const17 	%argrw{"wrr"}
	compref		$tmp295 A $const18 	%argrw{"wrr"}
	max		$tmp293 $tmp294 $tmp295 	%argrw{"wrr"}
	max		___337_cmax $tmp292 $tmp293 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp296 A $const14 	%line{76} %argrw{"wrr"}
	compref		$tmp298 A $const17 	%argrw{"wrr"}
	compref		$tmp299 A $const18 	%argrw{"wrr"}
	min		$tmp297 $tmp298 $tmp299 	%argrw{"wrr"}
	min		___337_cmin $tmp296 $tmp297 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp300 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp300 572 574 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp301 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp301 577 601 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp302 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp303 $tmp302 A 	%argrw{"wrr"}
	div		___337_c $tmp303 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp304 A $const14 	%line{95} %argrw{"wrr"}
	eq		$tmp305 $tmp304 ___337_cmax 	%argrw{"wrr"}
	if		$tmp305 586 597 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp306 ___337_c $const18 	%line{96} %argrw{"wrr"}
	compref		$tmp307 ___337_c $const17 	%argrw{"wrr"}
	sub		___337_h $tmp306 $tmp307 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp308 A $const17 	%line{97} %argrw{"wrr"}
	eq		$tmp309 $tmp308 ___337_cmax 	%argrw{"wrr"}
	if		$tmp309 593 597 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp310 ___337_c $const14 	%line{98} %argrw{"wrr"}
	add		$tmp311 $const16 $tmp310 	%argrw{"wrr"}
	compref		$tmp312 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp311 $tmp312 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp313 ___337_c $const17 	%line{100} %argrw{"wrr"}
	add		$tmp314 $const36 $tmp313 	%argrw{"wrr"}
	compref		$tmp315 ___337_c $const14 	%argrw{"wrr"}
	sub		___337_h $tmp314 $tmp315 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const37 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp316 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp316 601 601 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___371_hsv ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:199
#   color hsv2 = rgb_to_hsv(col2);
	functioncall	$const35 648 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{199} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp317 B $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp319 B $const17 	%argrw{"wrr"}
	compref		$tmp320 B $const18 	%argrw{"wrr"}
	max		$tmp318 $tmp319 $tmp320 	%argrw{"wrr"}
	max		___337_cmax $tmp317 $tmp318 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp321 B $const14 	%line{76} %argrw{"wrr"}
	compref		$tmp323 B $const17 	%argrw{"wrr"}
	compref		$tmp324 B $const18 	%argrw{"wrr"}
	min		$tmp322 $tmp323 $tmp324 	%argrw{"wrr"}
	min		___337_cmin $tmp321 $tmp322 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp325 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp325 618 620 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp326 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp326 623 647 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp327 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp328 $tmp327 B 	%argrw{"wrr"}
	div		___337_c $tmp328 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp329 B $const14 	%line{95} %argrw{"wrr"}
	eq		$tmp330 $tmp329 ___337_cmax 	%argrw{"wrr"}
	if		$tmp330 632 643 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp331 ___337_c $const18 	%line{96} %argrw{"wrr"}
	compref		$tmp332 ___337_c $const17 	%argrw{"wrr"}
	sub		___337_h $tmp331 $tmp332 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp333 B $const17 	%line{97} %argrw{"wrr"}
	eq		$tmp334 $tmp333 ___337_cmax 	%argrw{"wrr"}
	if		$tmp334 639 643 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp335 ___337_c $const14 	%line{98} %argrw{"wrr"}
	add		$tmp336 $const16 $tmp335 	%argrw{"wrr"}
	compref		$tmp337 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp336 $tmp337 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp338 ___337_c $const17 	%line{100} %argrw{"wrr"}
	add		$tmp339 $const36 $tmp338 	%argrw{"wrr"}
	compref		$tmp340 ___337_c $const14 	%argrw{"wrr"}
	sub		___337_h $tmp339 $tmp340 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const37 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp341 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp341 647 647 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___371_hsv2 ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:201
#   hsv[2] = tm * hsv[2] + t * hsv2[2];
	compref		$tmp342 ___371_hsv $const18 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{201} %argrw{"wrr"}
	mul		$tmp343 ___371_tm $tmp342 	%argrw{"wrr"}
	compref		$tmp344 ___371_hsv2 $const18 	%argrw{"wrr"}
	mul		$tmp345 t $tmp344 	%argrw{"wrr"}
	add		$tmp346 $tmp343 $tmp345 	%argrw{"wrr"}
	compassign	___371_hsv $const18 $tmp346 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:203
#   return hsv_to_rgb(hsv);
	functioncall	$const38 694 	%line{203} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:116
#   h = hsv[0];
	compref		___342_h ___371_hsv $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{116} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:117
#   s = hsv[1];
	compref		___342_s ___371_hsv $const17 	%line{117} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:118
#   v = hsv[2];
	compref		___342_v ___371_hsv $const18 	%line{118} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:120
#   if (s == 0.0) {
	eq		$tmp347 ___342_s $const1 	%line{120} %argrw{"wrr"}
	if		$tmp347 661 693 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:121
#     rgb = color(v, v, v);
	color		___342_rgb ___342_v ___342_v ___342_v 	%line{121} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:124
#     if (h == 1.0)
	eq		$tmp348 ___342_h $const2 	%line{124} %argrw{"wrr"}
	if		$tmp348 664 664 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:125
#       h = 0.0;
	assign		___342_h $const1 	%line{125} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:127
#     h *= 6.0;
	mul		___342_h ___342_h $const37 	%line{127} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:128
#     i = floor(h);
	floor		___342_i ___342_h 	%line{128} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:129
#     f = h - i;
	sub		___342_f ___342_h ___342_i 	%line{129} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:130
#     rgb = color(f, f, f);
	color		___342_rgb ___342_f ___342_f ___342_f 	%line{130} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:131
#     p = v * (1.0 - s);
	sub		$tmp349 $const2 ___342_s 	%line{131} %argrw{"wrr"}
	mul		___342_p ___342_v $tmp349 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:132
#     q = v * (1.0 - (s * f));
	mul		$tmp350 ___342_s ___342_f 	%line{132} %argrw{"wrr"}
	sub		$tmp351 $const2 $tmp350 	%argrw{"wrr"}
	mul		___342_q ___342_v $tmp351 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:133
#     t = v * (1.0 - (s * (1.0 - f)));
	sub		$tmp352 $const2 ___342_f 	%line{133} %argrw{"wrr"}
	mul		$tmp353 ___342_s $tmp352 	%argrw{"wrr"}
	sub		$tmp354 $const2 $tmp353 	%argrw{"wrr"}
	mul		___342_t ___342_v $tmp354 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:135
#     if (i == 0.0)
	eq		$tmp355 ___342_i $const1 	%line{135} %argrw{"wrr"}
	if		$tmp355 680 693 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:136
#       rgb = color(v, t, p);
	color		___342_rgb ___342_v ___342_t ___342_p 	%line{136} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:137
#     else if (i == 1.0)
	eq		$tmp356 ___342_i $const2 	%line{137} %argrw{"wrr"}
	if		$tmp356 683 693 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:138
#       rgb = color(q, v, p);
	color		___342_rgb ___342_q ___342_v ___342_p 	%line{138} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:139
#     else if (i == 2.0)
	eq		$tmp357 ___342_i $const16 	%line{139} %argrw{"wrr"}
	if		$tmp357 686 693 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:140
#       rgb = color(p, v, t);
	color		___342_rgb ___342_p ___342_v ___342_t 	%line{140} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:141
#     else if (i == 3.0)
	eq		$tmp358 ___342_i $const39 	%line{141} %argrw{"wrr"}
	if		$tmp358 689 693 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:142
#       rgb = color(p, q, v);
	color		___342_rgb ___342_p ___342_q ___342_v 	%line{142} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:143
#     else if (i == 4.0)
	eq		$tmp359 ___342_i $const36 	%line{143} %argrw{"wrr"}
	if		$tmp359 692 693 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:144
#       rgb = color(t, p, v);
	color		___342_rgb ___342_t ___342_p ___342_v 	%line{144} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:146
#       rgb = color(v, p, q);
	color		___342_rgb ___342_v ___342_p ___342_q 	%line{146} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:149
#   return rgb;
	assign		Result ___342_rgb 	%line{149} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:48
#   if (blend_type == "color")
	eq		$tmp360 blend_type $const44 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{48} %argrw{"wrr"}
	if		$tmp360 839 839 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:49
#     Result = node_mix_color(t, A, B);
	functioncall	$const45 839 	%line{49} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:208
#   color outcol = col1;
	assign		___372_outcol A 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{208} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:209
#   color hsv2 = rgb_to_hsv(col2);
	functioncall	$const35 744 	%line{209} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp361 B $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp363 B $const17 	%argrw{"wrr"}
	compref		$tmp364 B $const18 	%argrw{"wrr"}
	max		$tmp362 $tmp363 $tmp364 	%argrw{"wrr"}
	max		___337_cmax $tmp361 $tmp362 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp365 B $const14 	%line{76} %argrw{"wrr"}
	compref		$tmp367 B $const17 	%argrw{"wrr"}
	compref		$tmp368 B $const18 	%argrw{"wrr"}
	min		$tmp366 $tmp367 $tmp368 	%argrw{"wrr"}
	min		___337_cmin $tmp365 $tmp366 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp369 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp369 714 716 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp370 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp370 719 743 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp371 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp372 $tmp371 B 	%argrw{"wrr"}
	div		___337_c $tmp372 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp373 B $const14 	%line{95} %argrw{"wrr"}
	eq		$tmp374 $tmp373 ___337_cmax 	%argrw{"wrr"}
	if		$tmp374 728 739 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp375 ___337_c $const18 	%line{96} %argrw{"wrr"}
	compref		$tmp376 ___337_c $const17 	%argrw{"wrr"}
	sub		___337_h $tmp375 $tmp376 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp377 B $const17 	%line{97} %argrw{"wrr"}
	eq		$tmp378 $tmp377 ___337_cmax 	%argrw{"wrr"}
	if		$tmp378 735 739 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp379 ___337_c $const14 	%line{98} %argrw{"wrr"}
	add		$tmp380 $const16 $tmp379 	%argrw{"wrr"}
	compref		$tmp381 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp380 $tmp381 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp382 ___337_c $const17 	%line{100} %argrw{"wrr"}
	add		$tmp383 $const36 $tmp382 	%argrw{"wrr"}
	compref		$tmp384 ___337_c $const14 	%argrw{"wrr"}
	sub		___337_h $tmp383 $tmp384 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const37 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp385 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp385 743 743 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___372_hsv2 ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:211
#   if (hsv2[1] != 0.0) {
	compref		$tmp386 ___372_hsv2 $const17 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{211} %argrw{"wrr"}
	neq		$tmp387 $tmp386 $const1 	%argrw{"wrr"}
	if		$tmp387 838 838 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:212
#     color hsv = rgb_to_hsv(outcol);
	functioncall	$const35 793 	%line{212} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp388 ___372_outcol $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp390 ___372_outcol $const17 	%argrw{"wrr"}
	compref		$tmp391 ___372_outcol $const18 	%argrw{"wrr"}
	max		$tmp389 $tmp390 $tmp391 	%argrw{"wrr"}
	max		___337_cmax $tmp388 $tmp389 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp392 ___372_outcol $const14 	%line{76} %argrw{"wrr"}
	compref		$tmp394 ___372_outcol $const17 	%argrw{"wrr"}
	compref		$tmp395 ___372_outcol $const18 	%argrw{"wrr"}
	min		$tmp393 $tmp394 $tmp395 	%argrw{"wrr"}
	min		___337_cmin $tmp392 $tmp393 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp396 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp396 763 765 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp397 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp397 768 792 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp398 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp399 $tmp398 ___372_outcol 	%argrw{"wrr"}
	div		___337_c $tmp399 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp400 ___372_outcol $const14 	%line{95} %argrw{"wrr"}
	eq		$tmp401 $tmp400 ___337_cmax 	%argrw{"wrr"}
	if		$tmp401 777 788 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp402 ___337_c $const18 	%line{96} %argrw{"wrr"}
	compref		$tmp403 ___337_c $const17 	%argrw{"wrr"}
	sub		___337_h $tmp402 $tmp403 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp404 ___372_outcol $const17 	%line{97} %argrw{"wrr"}
	eq		$tmp405 $tmp404 ___337_cmax 	%argrw{"wrr"}
	if		$tmp405 784 788 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp406 ___337_c $const14 	%line{98} %argrw{"wrr"}
	add		$tmp407 $const16 $tmp406 	%argrw{"wrr"}
	compref		$tmp408 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp407 $tmp408 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp409 ___337_c $const17 	%line{100} %argrw{"wrr"}
	add		$tmp410 $const36 $tmp409 	%argrw{"wrr"}
	compref		$tmp411 ___337_c $const14 	%argrw{"wrr"}
	sub		___337_h $tmp410 $tmp411 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const37 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp412 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp412 792 792 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___373_hsv ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:213
#     hsv[0] = hsv2[0];
	compref		$tmp413 ___372_hsv2 $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{213} %argrw{"wrr"}
	compassign	___373_hsv $const14 $tmp413 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:214
#     hsv[1] = hsv2[1];
	compref		$tmp414 ___372_hsv2 $const17 	%line{214} %argrw{"wrr"}
	compassign	___373_hsv $const17 $tmp414 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:215
#     color tmp = hsv_to_rgb(hsv);
	functioncall	$const38 837 	%line{215} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:116
#   h = hsv[0];
	compref		___342_h ___373_hsv $const14 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{116} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:117
#   s = hsv[1];
	compref		___342_s ___373_hsv $const17 	%line{117} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:118
#   v = hsv[2];
	compref		___342_v ___373_hsv $const18 	%line{118} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:120
#   if (s == 0.0) {
	eq		$tmp415 ___342_s $const1 	%line{120} %argrw{"wrr"}
	if		$tmp415 804 836 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:121
#     rgb = color(v, v, v);
	color		___342_rgb ___342_v ___342_v ___342_v 	%line{121} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:124
#     if (h == 1.0)
	eq		$tmp416 ___342_h $const2 	%line{124} %argrw{"wrr"}
	if		$tmp416 807 807 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:125
#       h = 0.0;
	assign		___342_h $const1 	%line{125} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:127
#     h *= 6.0;
	mul		___342_h ___342_h $const37 	%line{127} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:128
#     i = floor(h);
	floor		___342_i ___342_h 	%line{128} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:129
#     f = h - i;
	sub		___342_f ___342_h ___342_i 	%line{129} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:130
#     rgb = color(f, f, f);
	color		___342_rgb ___342_f ___342_f ___342_f 	%line{130} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:131
#     p = v * (1.0 - s);
	sub		$tmp417 $const2 ___342_s 	%line{131} %argrw{"wrr"}
	mul		___342_p ___342_v $tmp417 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:132
#     q = v * (1.0 - (s * f));
	mul		$tmp418 ___342_s ___342_f 	%line{132} %argrw{"wrr"}
	sub		$tmp419 $const2 $tmp418 	%argrw{"wrr"}
	mul		___342_q ___342_v $tmp419 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:133
#     t = v * (1.0 - (s * (1.0 - f)));
	sub		$tmp420 $const2 ___342_f 	%line{133} %argrw{"wrr"}
	mul		$tmp421 ___342_s $tmp420 	%argrw{"wrr"}
	sub		$tmp422 $const2 $tmp421 	%argrw{"wrr"}
	mul		___342_t ___342_v $tmp422 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:135
#     if (i == 0.0)
	eq		$tmp423 ___342_i $const1 	%line{135} %argrw{"wrr"}
	if		$tmp423 823 836 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:136
#       rgb = color(v, t, p);
	color		___342_rgb ___342_v ___342_t ___342_p 	%line{136} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:137
#     else if (i == 1.0)
	eq		$tmp424 ___342_i $const2 	%line{137} %argrw{"wrr"}
	if		$tmp424 826 836 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:138
#       rgb = color(q, v, p);
	color		___342_rgb ___342_q ___342_v ___342_p 	%line{138} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:139
#     else if (i == 2.0)
	eq		$tmp425 ___342_i $const16 	%line{139} %argrw{"wrr"}
	if		$tmp425 829 836 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:140
#       rgb = color(p, v, t);
	color		___342_rgb ___342_p ___342_v ___342_t 	%line{140} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:141
#     else if (i == 3.0)
	eq		$tmp426 ___342_i $const39 	%line{141} %argrw{"wrr"}
	if		$tmp426 832 836 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:142
#       rgb = color(p, q, v);
	color		___342_rgb ___342_p ___342_q ___342_v 	%line{142} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:143
#     else if (i == 4.0)
	eq		$tmp427 ___342_i $const36 	%line{143} %argrw{"wrr"}
	if		$tmp427 835 836 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:144
#       rgb = color(t, p, v);
	color		___342_rgb ___342_t ___342_p ___342_v 	%line{144} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:146
#       rgb = color(v, p, q);
	color		___342_rgb ___342_v ___342_p ___342_q 	%line{146} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:149
#   return rgb;
	assign		___373_tmp ___342_rgb 	%line{149} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:217
#     outcol = mix(outcol, tmp, t);
	mix		___372_outcol ___372_outcol ___373_tmp t 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{217} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:220
#   return outcol;
	assign		Result ___372_outcol 	%line{220} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:50
#   if (blend_type == "soft_light")
	eq		$tmp428 blend_type $const46 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{50} %argrw{"wrr"}
	if		$tmp428 856 856 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:51
#     Result = node_mix_soft(t, A, B);
	functioncall	$const47 856 	%line{51} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:225
#   float tm = 1.0 - t;
	sub		___374_tm $const2 t 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{225} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:227
#   color one = color(1.0);
	assign		___374_one $const11 	%line{227} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:228
#   color scr = one - (one - col2) * (one - col1);
	sub		$tmp429 ___374_one B 	%line{228} %argrw{"wrr"}
	sub		$tmp430 ___374_one A 	%argrw{"wrr"}
	mul		$tmp431 $tmp429 $tmp430 	%argrw{"wrr"}
	sub		___374_scr ___374_one $tmp431 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:230
#   return tm * col1 + t * ((one - col1) * col2 * col1 + col1 * scr);
	mul		$tmp432 ___374_tm A 	%line{230} %argrw{"wrr"}
	sub		$tmp433 ___374_one A 	%argrw{"wrr"}
	mul		$tmp434 $tmp433 B 	%argrw{"wrr"}
	mul		$tmp435 $tmp434 A 	%argrw{"wrr"}
	mul		$tmp436 A ___374_scr 	%argrw{"wrr"}
	add		$tmp437 $tmp435 $tmp436 	%argrw{"wrr"}
	mul		$tmp438 t $tmp437 	%argrw{"wrr"}
	add		Result $tmp432 $tmp438 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:52
#   if (blend_type == "linear_light")
	eq		$tmp439 blend_type $const48 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{52} %argrw{"wrr"}
	if		$tmp439 912 912 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:53
#     Result = node_mix_linear(t, A, B);
	functioncall	$const49 912 	%line{53} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:235
#   color outcol = col1;
	assign		___375_outcol A 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h"} %line{235} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:237
#   if (col2[0] > 0.5)
	compref		$tmp440 B $const14 	%line{237} %argrw{"wrr"}
	gt		$tmp441 $tmp440 $const15 	%argrw{"wrr"}
	if		$tmp441 870 877 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:238
#     outcol[0] = col1[0] + t * (2.0 * (col2[0] - 0.5));
	compref		$tmp442 A $const14 	%line{238} %argrw{"wrr"}
	compref		$tmp443 B $const14 	%argrw{"wrr"}
	sub		$tmp444 $tmp443 $const15 	%argrw{"wrr"}
	mul		$tmp445 $const16 $tmp444 	%argrw{"wrr"}
	mul		$tmp446 t $tmp445 	%argrw{"wrr"}
	add		$tmp447 $tmp442 $tmp446 	%argrw{"wrr"}
	compassign	___375_outcol $const14 $tmp447 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:240
#     outcol[0] = col1[0] + t * (2.0 * (col2[0]) - 1.0);
	compref		$tmp448 A $const14 	%line{240} %argrw{"wrr"}
	compref		$tmp449 B $const14 	%argrw{"wrr"}
	mul		$tmp450 $const16 $tmp449 	%argrw{"wrr"}
	sub		$tmp451 $tmp450 $const2 	%argrw{"wrr"}
	mul		$tmp452 t $tmp451 	%argrw{"wrr"}
	add		$tmp453 $tmp448 $tmp452 	%argrw{"wrr"}
	compassign	___375_outcol $const14 $tmp453 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:242
#   if (col2[1] > 0.5)
	compref		$tmp454 B $const17 	%line{242} %argrw{"wrr"}
	gt		$tmp455 $tmp454 $const15 	%argrw{"wrr"}
	if		$tmp455 887 894 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:243
#     outcol[1] = col1[1] + t * (2.0 * (col2[1] - 0.5));
	compref		$tmp456 A $const17 	%line{243} %argrw{"wrr"}
	compref		$tmp457 B $const17 	%argrw{"wrr"}
	sub		$tmp458 $tmp457 $const15 	%argrw{"wrr"}
	mul		$tmp459 $const16 $tmp458 	%argrw{"wrr"}
	mul		$tmp460 t $tmp459 	%argrw{"wrr"}
	add		$tmp461 $tmp456 $tmp460 	%argrw{"wrr"}
	compassign	___375_outcol $const17 $tmp461 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:245
#     outcol[1] = col1[1] + t * (2.0 * (col2[1]) - 1.0);
	compref		$tmp462 A $const17 	%line{245} %argrw{"wrr"}
	compref		$tmp463 B $const17 	%argrw{"wrr"}
	mul		$tmp464 $const16 $tmp463 	%argrw{"wrr"}
	sub		$tmp465 $tmp464 $const2 	%argrw{"wrr"}
	mul		$tmp466 t $tmp465 	%argrw{"wrr"}
	add		$tmp467 $tmp462 $tmp466 	%argrw{"wrr"}
	compassign	___375_outcol $const17 $tmp467 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:247
#   if (col2[2] > 0.5)
	compref		$tmp468 B $const18 	%line{247} %argrw{"wrr"}
	gt		$tmp469 $tmp468 $const15 	%argrw{"wrr"}
	if		$tmp469 904 911 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:248
#     outcol[2] = col1[2] + t * (2.0 * (col2[2] - 0.5));
	compref		$tmp470 A $const18 	%line{248} %argrw{"wrr"}
	compref		$tmp471 B $const18 	%argrw{"wrr"}
	sub		$tmp472 $tmp471 $const15 	%argrw{"wrr"}
	mul		$tmp473 $const16 $tmp472 	%argrw{"wrr"}
	mul		$tmp474 t $tmp473 	%argrw{"wrr"}
	add		$tmp475 $tmp470 $tmp474 	%argrw{"wrr"}
	compassign	___375_outcol $const18 $tmp475 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:250
#     outcol[2] = col1[2] + t * (2.0 * (col2[2]) - 1.0);
	compref		$tmp476 A $const18 	%line{250} %argrw{"wrr"}
	compref		$tmp477 B $const18 	%argrw{"wrr"}
	mul		$tmp478 $const16 $tmp477 	%argrw{"wrr"}
	sub		$tmp479 $tmp478 $const2 	%argrw{"wrr"}
	mul		$tmp480 t $tmp479 	%argrw{"wrr"}
	add		$tmp481 $tmp476 $tmp480 	%argrw{"wrr"}
	compassign	___375_outcol $const18 $tmp481 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color_blend.h:252
#   return outcol;
	assign		Result ___375_outcol 	%line{252} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:55
#   if (use_clamp_result)
	if		use_clamp_result 918 918 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl"} %line{55} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix_color.osl:56
#     Result = clamp(Result, 0.0, 1.0);
	assign		$tmp482 $const1 	%line{56} %argrw{"wr"}
	assign		$tmp483 $const2 	%argrw{"wr"}
	functioncall	$const3 918 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp484 Result $tmp483 	%filename{"F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		Result $tmp484 $tmp482 	%argrw{"wrr"}
	end
