OpenShadingLanguage 1.00
# Compiled by oslc 1.13.7.0
# options: -q -O2 -IF:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders -IF:/Repositories/blender_repo/blender/lib/windows_x64/osl/share/OSL/shaders -o F:/Repositories/blender_repo/build_windows_Cycles_x64_vc16_Release/intern/cycles/kernel/osl/shaders/node_sky_texture.oso
shader node_sky_texture
param	int	use_mapping	0		%read{2,2} %write{2147483647,-1}
param	matrix	mapping	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		%read{3,3} %write{2147483647,-1} %derivs
param	vector	Vector	0 0 0		%read{1,1} %write{0,0} %derivs %initexpr
param	string	sky_type	"hosek_wilkie"		%read{4,317} %write{2147483647,-1}
param	float	theta	0		%read{153,337} %write{2147483647,-1}
param	float	phi	0		%read{155,333} %write{2147483647,-1}
param	string	filename	""		%read{100,117} %write{2147483647,-1}
param	color	radiance	0 0 0		%read{212,394} %write{2147483647,-1}
param	float[9]	config_x	0 0 0 0 0 0 0 0 0		%read{175,410} %write{2147483647,-1}
param	float[9]	config_y	0 0 0 0 0 0 0 0 0		%read{217,366} %write{2147483647,-1}
param	float[9]	config_z	0 0 0 0 0 0 0 0 0		%read{259,388} %write{2147483647,-1}
param	float[10]	nishita_data	0 0 0 0 0 0 0 0 0 0		%read{7,62} %write{2147483647,-1} %derivs
oparam	color	Color	0 0 0		%read{2147483647,-1} %write{138,454}
global	point	P	%read{0,0} %write{2147483647,-1} %derivs
local	float	___354_X	%read{434,434} %write{420,421}
local	float	___354_Z	%read{434,434} %write{432,433}
local	float	___404_cospsi	%read{162,348} %write{161,339}
local	float	___406_ctheta	%read{356,400} %write{352,396}
local	float	___406_cgamma	%read{367,412} %write{353,397}
local	vector	___407_spherical	%read{327,328} %write{326,326}
local	float	___407_theta	%read{330,396} %write{327,349}
local	float	___407_phi	%read{333,333} %write{328,328}
local	float	___407_gamma	%read{353,406} %write{342,348}
local	float	___407_x	%read{419,429} %write{371,371}
local	float	___407_y	%read{417,431} %write{393,393}
local	float	___407_Y	%read{420,434} %write{415,415}
local	color	___407_xyz	%read{435,437} %write{434,434}
local	float	___408_ctheta	%read{190,277} %write{173,257}
local	float	___408_cgamma	%read{178,270} %write{174,258}
local	float	___408_expM	%read{200,284} %write{177,261}
local	float	___408_rayM	%read{179,287} %write{178,262}
local	float	___408_mieM	%read{206,290} %write{189,273}
local	float	___408_zenith	%read{209,293} %write{190,274}
local	vector	___409_spherical	%read{149,150} %write{148,148}
local	float	___409_theta	%read{152,257} %write{149,171}
local	float	___409_phi	%read{155,155} %write{150,150}
local	float	___409_gamma	%read{174,260} %write{164,170}
local	float	___409_x	%read{299,309} %write{213,213}
local	float	___409_y	%read{300,310} %write{255,255}
local	float	___409_z	%read{302,312} %write{297,297}
local	float	___412_sun_elevation	%read{25,78} %write{7,7}
local	float	___412_sun_rotation	%read{23,111} %write{8,8} %derivs
local	float	___412_angular_diameter	%read{11,71} %write{9,9}
local	float	___412_sun_intensity	%read{74,81} %write{10,10}
local	int	___412_sun_disc	%read{46,46} %write{11,11}
local	float	___412_alpha	%read{2147483647,-1} %write{12,117}
local	color	___412_xyz	%read{89,121} %write{74,118}
local	vector	___412_direction	%read{41,109} %write{19,19} %derivs
local	vector	___413_sun_dir	%read{34,36} %write{32,32}
local	float	___413_sun_dir_angle	%read{43,82} %write{39,39}
local	float	___413_half_angular	%read{43,82} %write{40,40}
local	float	___413_dir_elevation	%read{70,94} %write{42,42} %derivs
local	color	___414_pixel_bottom	%read{73,80} %write{59,59}
local	color	___414_pixel_top	%read{73,80} %write{63,63}
local	float	___414_y	%read{73,80} %write{72,79}
local	float	___414_angle_fraction	%read{83,83} %write{82,82}
local	float	___414_limb_darkening	%read{89,89} %write{88,88}
local	float	___419_x	%read{97,100} %write{93,99} %derivs
local	float	___419_y	%read{100,100} %write{96,96} %derivs
local	float	___423_mul	%read{118,118} %write{108,108}
local	float	___423_x	%read{114,117} %write{112,116} %derivs
local	float	___423_y	%read{117,117} %write{113,113} %derivs
local	vector	p	%read{3,324} %write{1,3} %derivs
const	string	$const1	"nishita_improved"		%read{4,4} %write{2147483647,-1}
temp	int	$tmp1	%read{5,5} %write{4,4}
const	string	$const2	"sky_radiance_nishita"		%read{6,6} %write{2147483647,-1}
const	int	$const3	6		%read{7,289} %write{2147483647,-1}
const	int	$const4	7		%read{8,292} %write{2147483647,-1}
const	int	$const5	8		%read{9,268} %write{2147483647,-1}
const	int	$const6	9		%read{10,10} %write{2147483647,-1}
const	int	$const7	0		%read{11,435} %write{2147483647,-1}
const	float	$const8	1		%read{12,429} %write{2147483647,-1}
const	string	$const9	"sky_spherical_coordinates"		%read{13,320} %write{2147483647,-1}
temp	float	$tmp2	%read{19,19} %write{15,15} %derivs
const	int	$const10	2		%read{14,437} %write{2147483647,-1}
temp	float	$tmp3	%read{15,15} %write{14,14} %derivs
temp	float	$tmp4	%read{19,19} %write{18,18} %derivs
temp	float	$tmp5	%read{18,18} %write{16,16} %derivs
const	int	$const11	1		%read{17,436} %write{2147483647,-1}
temp	float	$tmp6	%read{18,18} %write{17,17} %derivs
const	float	$const12	0		%read{19,433} %write{2147483647,-1}
temp	float	$tmp7	%read{21,21} %write{20,20}
temp	int	$tmp8	%read{22,22} %write{21,21}
const	float	$const13	1.57079637		%read{23,94} %write{2147483647,-1}
temp	float	$tmp9	%read{26,29} %write{23,23}
const	string	$const14	"geographical_to_direction"		%read{24,24} %write{2147483647,-1}
temp	float	$tmp10	%read{27,27} %write{25,25}
temp	float	$tmp11	%read{27,27} %write{26,26}
temp	float	$tmp12	%read{32,32} %write{27,27}
temp	float	$tmp13	%read{30,30} %write{28,28}
temp	float	$tmp14	%read{30,30} %write{29,29}
temp	float	$tmp15	%read{32,32} %write{30,30}
temp	float	$tmp16	%read{32,32} %write{31,31}
const	string	$const15	"precise_angle"		%read{33,33} %write{2147483647,-1}
const	float	$const16	2		%read{39,269} %write{2147483647,-1}
temp	float	$tmp17	%read{39,39} %write{38,38}
temp	float	$tmp18	%read{38,38} %write{35,35}
temp	vector	$tmp19	%read{35,35} %write{34,34}
temp	float	$tmp20	%read{38,38} %write{37,37}
temp	vector	$tmp21	%read{37,37} %write{36,36}
const	float	$const17	0.5		%read{40,72} %write{2147483647,-1}
temp	float	$tmp22	%read{42,42} %write{41,41} %derivs
temp	int	$tmp23	%read{44,44} %write{43,43}
temp	int	$tmp24	%read{45,49} %write{44,48}
temp	int	$tmp25	%read{47,47} %write{46,46}
temp	int	$tmp26	%read{48,48} %write{47,47}
temp	int	$tmp27	%read{50,55} %write{49,54}
temp	int	$tmp28	%read{52,52} %write{51,51}
const	string	$const18	"importance_bake"		%read{51,51} %write{2147483647,-1}
temp	int	$tmp29	%read{53,53} %write{52,52}
temp	int	$tmp30	%read{54,54} %write{53,53}
temp	float	$tmp31	%read{59,59} %write{56,56}
temp	float	$tmp32	%read{59,59} %write{57,57}
temp	float	$tmp33	%read{59,59} %write{58,58}
const	int	$const19	3		%read{60,405} %write{2147483647,-1}
temp	float	$tmp34	%read{63,63} %write{60,60}
const	int	$const20	4		%read{61,410} %write{2147483647,-1}
temp	float	$tmp35	%read{63,63} %write{61,61}
const	int	$const21	5		%read{62,286} %write{2147483647,-1}
temp	float	$tmp36	%read{63,63} %write{62,62}
temp	float	$tmp37	%read{65,65} %write{64,64}
temp	int	$tmp38	%read{66,66} %write{65,65}
temp	float	$tmp39	%read{68,68} %write{67,67}
temp	int	$tmp40	%read{69,69} %write{68,68}
temp	float	$tmp41	%read{71,71} %write{70,70}
temp	float	$tmp42	%read{72,72} %write{71,71}
temp	color	$tmp43	%read{74,74} %write{73,73}
temp	float	$tmp44	%read{76,76} %write{75,75}
temp	int	$tmp45	%read{77,77} %write{76,76}
temp	float	$tmp46	%read{79,79} %write{78,78}
temp	color	$tmp47	%read{81,81} %write{80,80}
const	float	$const22	0.600000024		%read{87,87} %write{2147483647,-1}
temp	float	$tmp48	%read{86,86} %write{85,85}
temp	float	$tmp49	%read{84,84} %write{83,83}
temp	float	$tmp50	%read{85,85} %write{84,84}
temp	float	$tmp51	%read{87,87} %write{86,86}
temp	float	$tmp52	%read{88,88} %write{87,87}
temp	float	$tmp53	%read{91,91} %write{90,90} %derivs
const	float	$const23	3.14159274		%read{91,346} %write{2147483647,-1}
temp	float	$tmp54	%read{92,92} %write{91,91} %derivs
temp	float	$tmp55	%read{93,93} %write{92,92} %derivs
const	float	$const24	6.28318548		%read{93,315} %write{2147483647,-1}
temp	float	$tmp56	%read{96,96} %write{95,95} %derivs
temp	float	$tmp57	%read{95,95} %write{94,94} %derivs
temp	int	$tmp58	%read{98,98} %write{97,97}
const	string	$const25	"wrap"		%read{100,117} %write{2147483647,-1}
const	string	$const26	"clamp"		%read{100,100} %write{2147483647,-1}
const	string	$const27	"interp"		%read{100,117} %write{2147483647,-1}
const	string	$const28	"linear"		%read{100,117} %write{2147483647,-1}
const	string	$const29	"alpha"		%read{100,117} %write{2147483647,-1}
temp	float	$tmp59	%read{102,102} %write{101,101}
const	float	$const30	-0.400000006		%read{102,102} %write{2147483647,-1}
temp	int	$tmp60	%read{103,103} %write{102,102}
const	color	$const31	0 0 0		%read{104,104} %write{2147483647,-1}
temp	float	$tmp61	%read{106,106} %write{105,105}
const	float	$const32	2.5		%read{106,106} %write{2147483647,-1}
temp	float	$tmp62	%read{107,107} %write{106,106}
temp	float	$tmp63	%read{108,108} %write{107,107}
const	float	$const33	3		%read{108,108} %write{2147483647,-1}
temp	float	$tmp64	%read{110,110} %write{109,109} %derivs
temp	float	$tmp65	%read{111,111} %write{110,110} %derivs
temp	float	$tmp66	%read{112,112} %write{111,111} %derivs
const	float	$const34	1.5		%read{113,272} %write{2147483647,-1}
temp	int	$tmp67	%read{115,115} %write{114,114}
temp	color	$tmp68	%read{118,118} %write{117,117}
const	string	$const35	"periodic"		%read{117,117} %write{2147483647,-1}
temp	float	$tmp69	%read{123,133} %write{119,119}
temp	float	$tmp70	%read{124,134} %write{120,120}
temp	float	$tmp71	%read{126,136} %write{121,121}
const	string	$const36	"xyz_to_rgb"		%read{122,438} %write{2147483647,-1}
const	float	$const37	3.24047899		%read{123,439} %write{2147483647,-1}
temp	float	$tmp72	%read{125,125} %write{123,123}
const	float	$const38	-1.53715003		%read{124,440} %write{2147483647,-1}
temp	float	$tmp73	%read{125,125} %write{124,124}
temp	float	$tmp74	%read{127,127} %write{125,125}
const	float	$const39	-0.498535007		%read{126,442} %write{2147483647,-1}
temp	float	$tmp75	%read{127,127} %write{126,126}
temp	float	$tmp76	%read{138,138} %write{127,127}
const	float	$const40	-0.969255984		%read{128,444} %write{2147483647,-1}
temp	float	$tmp77	%read{130,130} %write{128,128}
const	float	$const41	1.87599099		%read{129,445} %write{2147483647,-1}
temp	float	$tmp78	%read{130,130} %write{129,129}
temp	float	$tmp79	%read{132,132} %write{130,130}
const	float	$const42	0.0415560007		%read{131,447} %write{2147483647,-1}
temp	float	$tmp80	%read{132,132} %write{131,131}
temp	float	$tmp81	%read{138,138} %write{132,132}
const	float	$const43	0.055647999		%read{133,449} %write{2147483647,-1}
temp	float	$tmp82	%read{135,135} %write{133,133}
const	float	$const44	-0.204043001		%read{134,450} %write{2147483647,-1}
temp	float	$tmp83	%read{135,135} %write{134,134}
temp	float	$tmp84	%read{137,137} %write{135,135}
const	float	$const45	1.05731106		%read{136,452} %write{2147483647,-1}
temp	float	$tmp85	%read{137,137} %write{136,136}
temp	float	$tmp86	%read{138,138} %write{137,137}
const	string	$const46	"hosek_wilkie"		%read{139,139} %write{2147483647,-1}
temp	int	$tmp87	%read{140,140} %write{139,139}
const	string	$const47	"sky_radiance_hosek"		%read{141,141} %write{2147483647,-1}
temp	float	$tmp88	%read{148,148} %write{144,144}
temp	float	$tmp89	%read{144,144} %write{143,143}
temp	float	$tmp90	%read{148,148} %write{147,147}
temp	float	$tmp91	%read{147,147} %write{145,145}
temp	float	$tmp92	%read{147,147} %write{146,146}
const	string	$const48	"sky_angle_between"		%read{151,329} %write{2147483647,-1}
temp	float	$tmp93	%read{154,154} %write{152,152}
temp	float	$tmp94	%read{154,154} %write{153,153}
temp	float	$tmp95	%read{157,157} %write{154,154}
temp	float	$tmp96	%read{157,157} %write{156,156}
temp	float	$tmp97	%read{156,156} %write{155,155}
temp	float	$tmp98	%read{161,161} %write{157,157}
temp	float	$tmp99	%read{160,160} %write{158,158}
temp	float	$tmp100	%read{160,160} %write{159,159}
temp	float	$tmp101	%read{161,161} %write{160,160}
temp	int	$tmp102	%read{163,163} %write{162,162}
const	float	$const49	-1		%read{166,344} %write{2147483647,-1}
temp	int	$tmp103	%read{167,167} %write{166,166}
const	float	$const50	1.56979632		%read{171,349} %write{2147483647,-1}
temp	float	$tmp104	%read{213,213} %write{211,211}
const	string	$const51	"sky_radiance_internal"		%read{172,256} %write{2147483647,-1}
temp	float	$tmp105	%read{176,176} %write{175,175}
temp	float	$tmp106	%read{177,177} %write{176,176}
temp	float	$tmp107	%read{189,189} %write{179,179}
temp	float	$tmp108	%read{189,189} %write{188,188}
temp	float	$tmp109	%read{182,182} %write{180,180}
temp	float	$tmp110	%read{182,182} %write{181,181}
temp	float	$tmp111	%read{183,183} %write{182,182}
temp	float	$tmp112	%read{187,187} %write{183,183}
temp	float	$tmp113	%read{185,185} %write{184,184}
temp	float	$tmp114	%read{186,186} %write{185,185}
temp	float	$tmp115	%read{187,187} %write{186,186}
temp	float	$tmp116	%read{188,188} %write{187,187}
temp	float	$tmp117	%read{196,196} %write{191,191}
temp	float	$tmp118	%read{196,196} %write{195,195}
temp	float	$tmp119	%read{194,194} %write{192,192}
const	float	$const52	0.00999999978		%read{193,277} %write{2147483647,-1}
temp	float	$tmp120	%read{194,194} %write{193,193}
temp	float	$tmp121	%read{195,195} %write{194,194}
temp	float	$tmp122	%read{197,197} %write{196,196}
temp	float	$tmp123	%read{211,211} %write{197,197}
temp	float	$tmp124	%read{201,201} %write{198,198}
temp	float	$tmp125	%read{200,200} %write{199,199}
temp	float	$tmp126	%read{201,201} %write{200,200}
temp	float	$tmp127	%read{204,204} %write{201,201}
temp	float	$tmp128	%read{203,203} %write{202,202}
temp	float	$tmp129	%read{204,204} %write{203,203}
temp	float	$tmp130	%read{207,207} %write{204,204}
temp	float	$tmp131	%read{206,206} %write{205,205}
temp	float	$tmp132	%read{207,207} %write{206,206}
temp	float	$tmp133	%read{210,210} %write{207,207}
temp	float	$tmp134	%read{209,209} %write{208,208}
temp	float	$tmp135	%read{210,210} %write{209,209}
temp	float	$tmp136	%read{211,211} %write{210,210}
temp	float	$tmp137	%read{213,213} %write{212,212}
temp	float	$tmp138	%read{255,255} %write{253,253}
temp	float	$tmp139	%read{218,218} %write{217,217}
temp	float	$tmp140	%read{219,219} %write{218,218}
temp	float	$tmp141	%read{231,231} %write{221,221}
temp	float	$tmp142	%read{231,231} %write{230,230}
temp	float	$tmp143	%read{224,224} %write{222,222}
temp	float	$tmp144	%read{224,224} %write{223,223}
temp	float	$tmp145	%read{225,225} %write{224,224}
temp	float	$tmp146	%read{229,229} %write{225,225}
temp	float	$tmp147	%read{227,227} %write{226,226}
temp	float	$tmp148	%read{228,228} %write{227,227}
temp	float	$tmp149	%read{229,229} %write{228,228}
temp	float	$tmp150	%read{230,230} %write{229,229}
temp	float	$tmp151	%read{238,238} %write{233,233}
temp	float	$tmp152	%read{238,238} %write{237,237}
temp	float	$tmp153	%read{236,236} %write{234,234}
temp	float	$tmp154	%read{236,236} %write{235,235}
temp	float	$tmp155	%read{237,237} %write{236,236}
temp	float	$tmp156	%read{239,239} %write{238,238}
temp	float	$tmp157	%read{253,253} %write{239,239}
temp	float	$tmp158	%read{243,243} %write{240,240}
temp	float	$tmp159	%read{242,242} %write{241,241}
temp	float	$tmp160	%read{243,243} %write{242,242}
temp	float	$tmp161	%read{246,246} %write{243,243}
temp	float	$tmp162	%read{245,245} %write{244,244}
temp	float	$tmp163	%read{246,246} %write{245,245}
temp	float	$tmp164	%read{249,249} %write{246,246}
temp	float	$tmp165	%read{248,248} %write{247,247}
temp	float	$tmp166	%read{249,249} %write{248,248}
temp	float	$tmp167	%read{252,252} %write{249,249}
temp	float	$tmp168	%read{251,251} %write{250,250}
temp	float	$tmp169	%read{252,252} %write{251,251}
temp	float	$tmp170	%read{253,253} %write{252,252}
temp	float	$tmp171	%read{255,255} %write{254,254}
temp	float	$tmp172	%read{297,297} %write{295,295}
temp	float	$tmp173	%read{260,260} %write{259,259}
temp	float	$tmp174	%read{261,261} %write{260,260}
temp	float	$tmp175	%read{273,273} %write{263,263}
temp	float	$tmp176	%read{273,273} %write{272,272}
temp	float	$tmp177	%read{266,266} %write{264,264}
temp	float	$tmp178	%read{266,266} %write{265,265}
temp	float	$tmp179	%read{267,267} %write{266,266}
temp	float	$tmp180	%read{271,271} %write{267,267}
temp	float	$tmp181	%read{269,269} %write{268,268}
temp	float	$tmp182	%read{270,270} %write{269,269}
temp	float	$tmp183	%read{271,271} %write{270,270}
temp	float	$tmp184	%read{272,272} %write{271,271}
temp	float	$tmp185	%read{280,280} %write{275,275}
temp	float	$tmp186	%read{280,280} %write{279,279}
temp	float	$tmp187	%read{278,278} %write{276,276}
temp	float	$tmp188	%read{278,278} %write{277,277}
temp	float	$tmp189	%read{279,279} %write{278,278}
temp	float	$tmp190	%read{281,281} %write{280,280}
temp	float	$tmp191	%read{295,295} %write{281,281}
temp	float	$tmp192	%read{285,285} %write{282,282}
temp	float	$tmp193	%read{284,284} %write{283,283}
temp	float	$tmp194	%read{285,285} %write{284,284}
temp	float	$tmp195	%read{288,288} %write{285,285}
temp	float	$tmp196	%read{287,287} %write{286,286}
temp	float	$tmp197	%read{288,288} %write{287,287}
temp	float	$tmp198	%read{291,291} %write{288,288}
temp	float	$tmp199	%read{290,290} %write{289,289}
temp	float	$tmp200	%read{291,291} %write{290,290}
temp	float	$tmp201	%read{294,294} %write{291,291}
temp	float	$tmp202	%read{293,293} %write{292,292}
temp	float	$tmp203	%read{294,294} %write{293,293}
temp	float	$tmp204	%read{295,295} %write{294,294}
temp	float	$tmp205	%read{297,297} %write{296,296}
temp	color	$tmp206	%read{316,316} %write{314,314}
temp	float	$tmp207	%read{301,301} %write{299,299}
temp	float	$tmp208	%read{301,301} %write{300,300}
temp	float	$tmp209	%read{303,303} %write{301,301}
temp	float	$tmp210	%read{303,303} %write{302,302}
temp	float	$tmp211	%read{314,314} %write{303,303}
temp	float	$tmp212	%read{306,306} %write{304,304}
temp	float	$tmp213	%read{306,306} %write{305,305}
temp	float	$tmp214	%read{308,308} %write{306,306}
temp	float	$tmp215	%read{308,308} %write{307,307}
temp	float	$tmp216	%read{314,314} %write{308,308}
temp	float	$tmp217	%read{311,311} %write{309,309}
temp	float	$tmp218	%read{311,311} %write{310,310}
temp	float	$tmp219	%read{313,313} %write{311,311}
temp	float	$tmp220	%read{313,313} %write{312,312}
temp	float	$tmp221	%read{314,314} %write{313,313}
temp	float	$tmp222	%read{316,316} %write{315,315}
const	float	$const54	683		%read{315,315} %write{2147483647,-1}
const	string	$const55	"preetham"		%read{317,317} %write{2147483647,-1}
temp	int	$tmp223	%read{318,318} %write{317,317}
const	string	$const56	"sky_radiance_preetham"		%read{319,319} %write{2147483647,-1}
temp	float	$tmp224	%read{326,326} %write{322,322}
temp	float	$tmp225	%read{322,322} %write{321,321}
temp	float	$tmp226	%read{326,326} %write{325,325}
temp	float	$tmp227	%read{325,325} %write{323,323}
temp	float	$tmp228	%read{325,325} %write{324,324}
temp	float	$tmp229	%read{332,332} %write{330,330}
temp	float	$tmp230	%read{332,332} %write{331,331}
temp	float	$tmp231	%read{335,335} %write{332,332}
temp	float	$tmp232	%read{335,335} %write{334,334}
temp	float	$tmp233	%read{334,334} %write{333,333}
temp	float	$tmp234	%read{339,339} %write{335,335}
temp	float	$tmp235	%read{338,338} %write{336,336}
temp	float	$tmp236	%read{338,338} %write{337,337}
temp	float	$tmp237	%read{339,339} %write{338,338}
temp	int	$tmp238	%read{341,341} %write{340,340}
temp	int	$tmp239	%read{345,345} %write{344,344}
temp	float	$tmp240	%read{371,371} %write{350,350}
temp	float	$tmp241	%read{371,371} %write{370,370}
const	string	$const57	"sky_perez_function"		%read{351,395} %write{2147483647,-1}
temp	float	$tmp242	%read{358,358} %write{354,354}
temp	float	$tmp243	%read{358,358} %write{357,357}
temp	float	$tmp244	%read{356,356} %write{355,355}
temp	float	$tmp245	%read{357,357} %write{356,356}
temp	float	$tmp246	%read{359,359} %write{358,358}
temp	float	$tmp247	%read{370,370} %write{359,359}
temp	float	$tmp248	%read{364,364} %write{360,360}
temp	float	$tmp249	%read{364,364} %write{363,363}
temp	float	$tmp250	%read{362,362} %write{361,361}
temp	float	$tmp251	%read{363,363} %write{362,362}
temp	float	$tmp252	%read{365,365} %write{364,364}
temp	float	$tmp253	%read{369,369} %write{365,365}
temp	float	$tmp254	%read{367,367} %write{366,366}
temp	float	$tmp255	%read{368,368} %write{367,367}
temp	float	$tmp256	%read{369,369} %write{368,368}
temp	float	$tmp257	%read{370,370} %write{369,369}
temp	float	$tmp258	%read{393,393} %write{372,372}
temp	float	$tmp259	%read{393,393} %write{392,392}
temp	float	$tmp260	%read{380,380} %write{376,376}
temp	float	$tmp261	%read{380,380} %write{379,379}
temp	float	$tmp262	%read{378,378} %write{377,377}
temp	float	$tmp263	%read{379,379} %write{378,378}
temp	float	$tmp264	%read{381,381} %write{380,380}
temp	float	$tmp265	%read{392,392} %write{381,381}
temp	float	$tmp266	%read{386,386} %write{382,382}
temp	float	$tmp267	%read{386,386} %write{385,385}
temp	float	$tmp268	%read{384,384} %write{383,383}
temp	float	$tmp269	%read{385,385} %write{384,384}
temp	float	$tmp270	%read{387,387} %write{386,386}
temp	float	$tmp271	%read{391,391} %write{387,387}
temp	float	$tmp272	%read{389,389} %write{388,388}
temp	float	$tmp273	%read{390,390} %write{389,389}
temp	float	$tmp274	%read{391,391} %write{390,390}
temp	float	$tmp275	%read{392,392} %write{391,391}
temp	float	$tmp276	%read{415,415} %write{394,394}
temp	float	$tmp277	%read{415,415} %write{414,414}
temp	float	$tmp278	%read{402,402} %write{398,398}
temp	float	$tmp279	%read{402,402} %write{401,401}
temp	float	$tmp280	%read{400,400} %write{399,399}
temp	float	$tmp281	%read{401,401} %write{400,400}
temp	float	$tmp282	%read{403,403} %write{402,402}
temp	float	$tmp283	%read{414,414} %write{403,403}
temp	float	$tmp284	%read{408,408} %write{404,404}
temp	float	$tmp285	%read{408,408} %write{407,407}
temp	float	$tmp286	%read{406,406} %write{405,405}
temp	float	$tmp287	%read{407,407} %write{406,406}
temp	float	$tmp288	%read{409,409} %write{408,408}
temp	float	$tmp289	%read{413,413} %write{409,409}
temp	float	$tmp290	%read{411,411} %write{410,410}
temp	float	$tmp291	%read{412,412} %write{411,411}
temp	float	$tmp292	%read{413,413} %write{412,412}
temp	float	$tmp293	%read{414,414} %write{413,413}
const	string	$const58	"xyY_to_xyz"		%read{416,416} %write{2147483647,-1}
temp	int	$tmp294	%read{418,418} %write{417,417}
temp	float	$tmp295	%read{420,420} %write{419,419}
temp	int	$tmp296	%read{423,423} %write{422,422}
temp	int	$tmp297	%read{424,428} %write{423,427}
temp	int	$tmp298	%read{426,426} %write{425,425}
temp	int	$tmp299	%read{427,427} %write{426,426}
temp	float	$tmp300	%read{430,430} %write{429,429}
temp	float	$tmp301	%read{431,431} %write{430,430}
temp	float	$tmp302	%read{432,432} %write{431,431}
temp	float	$tmp303	%read{439,449} %write{435,435}
temp	float	$tmp304	%read{440,450} %write{436,436}
temp	float	$tmp305	%read{442,452} %write{437,437}
temp	float	$tmp306	%read{441,441} %write{439,439}
temp	float	$tmp307	%read{441,441} %write{440,440}
temp	float	$tmp308	%read{443,443} %write{441,441}
temp	float	$tmp309	%read{443,443} %write{442,442}
temp	float	$tmp310	%read{454,454} %write{443,443}
temp	float	$tmp311	%read{446,446} %write{444,444}
temp	float	$tmp312	%read{446,446} %write{445,445}
temp	float	$tmp313	%read{448,448} %write{446,446}
temp	float	$tmp314	%read{448,448} %write{447,447}
temp	float	$tmp315	%read{454,454} %write{448,448}
temp	float	$tmp316	%read{451,451} %write{449,449}
temp	float	$tmp317	%read{451,451} %write{450,450}
temp	float	$tmp318	%read{453,453} %write{451,451}
temp	float	$tmp319	%read{453,453} %write{452,452}
temp	float	$tmp320	%read{454,454} %write{453,453}
code Vector
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:203
#     vector Vector = P,
	assign		Vector P 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl"} %line{203} %argrw{"wr"}
code ___main___
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:215
#   vector p = Vector;
	assign		p Vector 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl"} %line{215} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:217
#   if (use_mapping)
	if		use_mapping 4 4 	%line{217} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:218
#     p = transform(mapping, p);
	transformv	p mapping p 	%line{218} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:220
#   if (sky_type == "nishita_improved")
	eq		$tmp1 sky_type $const1 	%line{220} %argrw{"wrr"}
	if		$tmp1 139 139 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:221
#     Color = sky_radiance_nishita(p, nishita_data, filename);
	functioncall	$const2 139 	%line{221} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:121
#   float sun_elevation = nishita_data[6];
	aref		___412_sun_elevation nishita_data $const3 	%line{121} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:122
#   float sun_rotation = nishita_data[7];
	aref		___412_sun_rotation nishita_data $const4 	%line{122} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:123
#   float angular_diameter = nishita_data[8];
	aref		___412_angular_diameter nishita_data $const5 	%line{123} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:124
#   float sun_intensity = nishita_data[9];
	aref		___412_sun_intensity nishita_data $const6 	%line{124} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:125
#   int sun_disc = angular_diameter > 0;
	gt		___412_sun_disc ___412_angular_diameter $const7 	%line{125} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:126
#   float alpha = 1.0;
	assign		___412_alpha $const8 	%line{126} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:129
#   vector direction = sky_spherical_coordinates(dir);
	functioncall	$const9 20 	%line{129} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:22
#   return vector(acos(dir[2]), atan2(dir[0], dir[1]), 0);
	compref		$tmp3 p $const10 	%line{22} %argrw{"wrr"}
	acos		$tmp2 $tmp3 	%argrw{"wr"}
	compref		$tmp5 p $const7 	%argrw{"wrr"}
	compref		$tmp6 p $const11 	%argrw{"wrr"}
	atan2		$tmp4 $tmp5 $tmp6 	%argrw{"wrr"}
	vector		___412_direction $tmp2 $tmp4 $const12 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:132
#   if (dir[2] >= 0.0) {
	compref		$tmp7 p $const10 	%line{132} %argrw{"wrr"}
	ge		$tmp8 $tmp7 $const12 	%argrw{"wrr"}
	if		$tmp8 101 119 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:134
#     vector sun_dir = geographical_to_direction(sun_elevation, sun_rotation + M_PI_2);
	add		$tmp9 ___412_sun_rotation $const13 	%line{134} %argrw{"wrr"}
	functioncall	$const14 33 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:110
#   return vector(cos(lat) * cos(lon), cos(lat) * sin(lon), sin(lat));
	cos		$tmp10 ___412_sun_elevation 	%line{110} %argrw{"wr"}
	cos		$tmp11 $tmp9 	%argrw{"wr"}
	mul		$tmp12 $tmp10 $tmp11 	%argrw{"wrr"}
	cos		$tmp13 ___412_sun_elevation 	%argrw{"wr"}
	sin		$tmp14 $tmp9 	%argrw{"wr"}
	mul		$tmp15 $tmp13 $tmp14 	%argrw{"wrr"}
	sin		$tmp16 ___412_sun_elevation 	%argrw{"wr"}
	vector		___413_sun_dir $tmp12 $tmp15 $tmp16 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:135
#     float sun_dir_angle = precise_angle(dir, sun_dir);
	functioncall	$const15 40 	%line{135} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:115
#   return 2.0 * atan2(length(a - b), length(a + b));
	sub		$tmp19 p ___413_sun_dir 	%line{115} %argrw{"wrr"}
	length		$tmp18 $tmp19 	%argrw{"wr"}
	add		$tmp21 p ___413_sun_dir 	%argrw{"wrr"}
	length		$tmp20 $tmp21 	%argrw{"wr"}
	atan2		$tmp17 $tmp18 $tmp20 	%argrw{"wrr"}
	mul		___413_sun_dir_angle $const16 $tmp17 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:136
#     float half_angular = angular_diameter * 0.5;
	mul		___413_half_angular ___412_angular_diameter $const17 	%line{136} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:137
#     float dir_elevation = M_PI_2 - direction[0];
	compref		$tmp22 ___412_direction $const7 	%line{137} %argrw{"wrr"}
	sub		___413_dir_elevation $const13 $tmp22 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:141
#     if (sun_dir_angle < half_angular && sun_disc == 1 && raytype("importance_bake") != 1) {
	lt		$tmp23 ___413_sun_dir_angle ___413_half_angular 	%line{141} %argrw{"wrr"}
	neq		$tmp24 $tmp23 $const7 	%argrw{"wrr"}
	if		$tmp24 49 49 	%argrw{"r"}
	eq		$tmp25 ___412_sun_disc $const11 	%argrw{"wrr"}
	neq		$tmp26 $tmp25 $const7 	%argrw{"wrr"}
	assign		$tmp24 $tmp26 	%argrw{"wr"}
	neq		$tmp27 $tmp24 $const7 	%argrw{"wrr"}
	if		$tmp27 55 55 	%argrw{"r"}
	raytype		$tmp28 $const18 	%argrw{"wr"}
	neq		$tmp29 $tmp28 $const11 	%argrw{"wrr"}
	neq		$tmp30 $tmp29 $const7 	%argrw{"wrr"}
	assign		$tmp27 $tmp30 	%argrw{"wr"}
	if		$tmp27 90 101 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:143
#       color pixel_bottom = color(nishita_data[0], nishita_data[1], nishita_data[2]);
	aref		$tmp31 nishita_data $const7 	%line{143} %argrw{"wrr"}
	aref		$tmp32 nishita_data $const11 	%argrw{"wrr"}
	aref		$tmp33 nishita_data $const10 	%argrw{"wrr"}
	color		___414_pixel_bottom $tmp31 $tmp32 $tmp33 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:144
#       color pixel_top = color(nishita_data[3], nishita_data[4], nishita_data[5]);
	aref		$tmp34 nishita_data $const19 	%line{144} %argrw{"wrr"}
	aref		$tmp35 nishita_data $const20 	%argrw{"wrr"}
	aref		$tmp36 nishita_data $const21 	%argrw{"wrr"}
	color		___414_pixel_top $tmp34 $tmp35 $tmp36 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:148
#       if (sun_elevation - half_angular > 0.0) {
	sub		$tmp37 ___412_sun_elevation ___413_half_angular 	%line{148} %argrw{"wrr"}
	gt		$tmp38 $tmp37 $const12 	%argrw{"wrr"}
	if		$tmp38 75 82 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:149
#         if ((sun_elevation + half_angular) > 0.0) {
	add		$tmp39 ___412_sun_elevation ___413_half_angular 	%line{149} %argrw{"wrr"}
	gt		$tmp40 $tmp39 $const12 	%argrw{"wrr"}
	if		$tmp40 75 75 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:150
#           y = ((dir_elevation - sun_elevation) / angular_diameter) + 0.5;
	sub		$tmp41 ___413_dir_elevation ___412_sun_elevation 	%line{150} %argrw{"wrr"}
	div		$tmp42 $tmp41 ___412_angular_diameter 	%argrw{"wrr"}
	add		___414_y $tmp42 $const17 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:151
#           xyz = mix(pixel_bottom, pixel_top, y) * sun_intensity;
	mix		$tmp43 ___414_pixel_bottom ___414_pixel_top ___414_y 	%line{151} %argrw{"wrrr"}
	mul		___412_xyz $tmp43 ___412_sun_intensity 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:155
#         if (sun_elevation + half_angular > 0.0) {
	add		$tmp44 ___412_sun_elevation ___413_half_angular 	%line{155} %argrw{"wrr"}
	gt		$tmp45 $tmp44 $const12 	%argrw{"wrr"}
	if		$tmp45 82 82 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:156
#           y = dir_elevation / (sun_elevation + half_angular);
	add		$tmp46 ___412_sun_elevation ___413_half_angular 	%line{156} %argrw{"wrr"}
	div		___414_y ___413_dir_elevation $tmp46 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:157
#           xyz = mix(pixel_bottom, pixel_top, y) * sun_intensity;
	mix		$tmp47 ___414_pixel_bottom ___414_pixel_top ___414_y 	%line{157} %argrw{"wrrr"}
	mul		___412_xyz $tmp47 ___412_sun_intensity 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:161
#       float angle_fraction = sun_dir_angle / half_angular;
	div		___414_angle_fraction ___413_sun_dir_angle ___413_half_angular 	%line{161} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:162
#       float limb_darkening = (1.0 - 0.6 * (1.0 - sqrt(1.0 - angle_fraction * angle_fraction)));
	mul		$tmp49 ___414_angle_fraction ___414_angle_fraction 	%line{162} %argrw{"wrr"}
	sub		$tmp50 $const8 $tmp49 	%argrw{"wrr"}
	sqrt		$tmp48 $tmp50 	%argrw{"wr"}
	sub		$tmp51 $const8 $tmp48 	%argrw{"wrr"}
	mul		$tmp52 $const22 $tmp51 	%argrw{"wrr"}
	sub		___414_limb_darkening $const8 $tmp52 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:163
#       xyz *= limb_darkening;
	mul		___412_xyz ___412_xyz ___414_limb_darkening 	%line{163} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:168
#       float x = (direction[1] + M_PI + sun_rotation) / M_2PI;
	compref		$tmp53 ___412_direction $const11 	%line{168} %argrw{"wrr"}
	add		$tmp54 $tmp53 $const23 	%argrw{"wrr"}
	add		$tmp55 $tmp54 ___412_sun_rotation 	%argrw{"wrr"}
	div		___419_x $tmp55 $const24 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:170
#       float y = 1.0 - sqrt(dir_elevation / M_PI_2);
	div		$tmp57 ___413_dir_elevation $const13 	%line{170} %argrw{"wrr"}
	sqrt		$tmp56 $tmp57 	%argrw{"wr"}
	sub		___419_y $const8 $tmp56 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:171
#       if (x > 1.0) {
	gt		$tmp58 ___419_x $const8 	%line{171} %argrw{"wrr"}
	if		$tmp58 100 100 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:172
#         x = x - 1.0;
	sub		___419_x ___419_x $const8 	%line{172} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:174
#       xyz = (color)texture(filename, x, y, "wrap", "clamp", "interp", "linear", "alpha", alpha);
	texture		___412_xyz filename ___419_x ___419_y $const25 $const26 $const27 $const28 $const29 ___412_alpha 	%line{174} %argrw{"wrrrrrrrrw"} %argderivs{2,3}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:179
#     if (dir[2] < -0.4) {
	compref		$tmp59 p $const10 	%line{179} %argrw{"wrr"}
	lt		$tmp60 $tmp59 $const30 	%argrw{"wrr"}
	if		$tmp60 105 119 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:180
#       xyz = color(0, 0, 0);
	assign		___412_xyz $const31 	%line{180} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:184
#       float mul = pow(1.0 + dir[2] * 2.5, 3.0);
	compref		$tmp61 p $const10 	%line{184} %argrw{"wrr"}
	mul		$tmp62 $tmp61 $const32 	%argrw{"wrr"}
	add		$tmp63 $const8 $tmp62 	%argrw{"wrr"}
	pow		___423_mul $tmp63 $const33 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:186
#       float x = (direction[1] + M_PI + sun_rotation) / M_2PI;
	compref		$tmp64 ___412_direction $const11 	%line{186} %argrw{"wrr"}
	add		$tmp65 $tmp64 $const23 	%argrw{"wrr"}
	add		$tmp66 $tmp65 ___412_sun_rotation 	%argrw{"wrr"}
	div		___423_x $tmp66 $const24 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:187
#       float y = 1.5;
	assign		___423_y $const34 	%line{187} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:188
#       if (x > 1.0) {
	gt		$tmp67 ___423_x $const8 	%line{188} %argrw{"wrr"}
	if		$tmp67 117 117 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:189
#         x = x - 1.0;
	sub		___423_x ___423_x $const8 	%line{189} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:191
#       xyz = (color)texture(
	texture		$tmp68 filename ___423_x ___423_y $const25 $const35 $const27 $const28 $const29 ___412_alpha 	%line{191} %argrw{"wrrrrrrrrw"} %argderivs{2,3}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:192
#                 filename, x, y, "wrap", "periodic", "interp", "linear", "alpha", alpha) *
	mul		___412_xyz $tmp68 ___423_mul 	%line{192} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:197
#   return xyz_to_rgb(xyz[0], xyz[1], xyz[2]);
	compref		$tmp69 ___412_xyz $const7 	%line{197} %argrw{"wrr"}
	compref		$tmp70 ___412_xyz $const11 	%argrw{"wrr"}
	compref		$tmp71 ___412_xyz $const10 	%argrw{"wrr"}
	functioncall	$const36 139 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   return color(3.240479 * x + -1.537150 * y + -0.498535 * z,
	mul		$tmp72 $const37 $tmp69 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	mul		$tmp73 $const38 $tmp70 	%argrw{"wrr"}
	add		$tmp74 $tmp72 $tmp73 	%argrw{"wrr"}
	mul		$tmp75 $const39 $tmp71 	%argrw{"wrr"}
	add		$tmp76 $tmp74 $tmp75 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#                -0.969256 * x + 1.875991 * y + 0.041556 * z,
	mul		$tmp77 $const40 $tmp69 	%line{76} %argrw{"wrr"}
	mul		$tmp78 $const41 $tmp70 	%argrw{"wrr"}
	add		$tmp79 $tmp77 $tmp78 	%argrw{"wrr"}
	mul		$tmp80 $const42 $tmp71 	%argrw{"wrr"}
	add		$tmp81 $tmp79 $tmp80 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#                0.055648 * x + -0.204043 * y + 1.057311 * z);
	mul		$tmp82 $const43 $tmp69 	%line{77} %argrw{"wrr"}
	mul		$tmp83 $const44 $tmp70 	%argrw{"wrr"}
	add		$tmp84 $tmp82 $tmp83 	%argrw{"wrr"}
	mul		$tmp85 $const45 $tmp71 	%argrw{"wrr"}
	add		$tmp86 $tmp84 $tmp85 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   return color(3.240479 * x + -1.537150 * y + -0.498535 * z,
	color		Color $tmp76 $tmp81 $tmp86 	%line{75} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:222
#   if (sky_type == "hosek_wilkie")
	eq		$tmp87 sky_type $const46 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl"} %line{222} %argrw{"wrr"}
	if		$tmp87 317 317 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:223
#     Color = sky_radiance_hosek(p, phi, theta, radiance, config_x, config_y, config_z);
	functioncall	$const47 317 	%line{223} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:88
#   vector spherical = sky_spherical_coordinates(dir);
	functioncall	$const9 149 	%line{88} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:22
#   return vector(acos(dir[2]), atan2(dir[0], dir[1]), 0);
	compref		$tmp89 p $const10 	%line{22} %argrw{"wrr"}
	acos		$tmp88 $tmp89 	%argrw{"wr"}
	compref		$tmp91 p $const7 	%argrw{"wrr"}
	compref		$tmp92 p $const11 	%argrw{"wrr"}
	atan2		$tmp90 $tmp91 $tmp92 	%argrw{"wrr"}
	vector		___409_spherical $tmp88 $tmp90 $const12 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:89
#   float theta = spherical[0];
	compref		___409_theta ___409_spherical $const7 	%line{89} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:90
#   float phi = spherical[1];
	compref		___409_phi ___409_spherical $const11 	%line{90} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:93
#   float gamma = sky_angle_between(theta, phi, suntheta, sunphi);
	functioncall	$const48 171 	%line{93} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:10
#   float cospsi = sin(thetav) * sin(theta) * cos(phi - phiv) + cos(thetav) * cos(theta);
	sin		$tmp93 ___409_theta 	%line{10} %argrw{"wr"}
	sin		$tmp94 theta 	%argrw{"wr"}
	mul		$tmp95 $tmp93 $tmp94 	%argrw{"wrr"}
	sub		$tmp97 phi ___409_phi 	%argrw{"wrr"}
	cos		$tmp96 $tmp97 	%argrw{"wr"}
	mul		$tmp98 $tmp95 $tmp96 	%argrw{"wrr"}
	cos		$tmp99 ___409_theta 	%argrw{"wr"}
	cos		$tmp100 theta 	%argrw{"wr"}
	mul		$tmp101 $tmp99 $tmp100 	%argrw{"wrr"}
	add		___404_cospsi $tmp98 $tmp101 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:12
#   if (cospsi > 1.0)
	gt		$tmp102 ___404_cospsi $const8 	%line{12} %argrw{"wrr"}
	if		$tmp102 166 166 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:13
#     return 0.0;
	assign		___409_gamma $const12 	%line{13} %argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:14
#   if (cospsi < -1.0)
	lt		$tmp103 ___404_cospsi $const49 	%line{14} %argrw{"wrr"}
	if		$tmp103 170 170 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:15
#     return M_PI;
	assign		___409_gamma $const23 	%line{15} %argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:17
#   return acos(cospsi);
	acos		___409_gamma ___404_cospsi 	%line{17} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:96
#   theta = min(theta, M_PI_2 - 0.001);
	min		___409_theta ___409_theta $const50 	%line{96} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:99
#   float x = sky_radiance_internal(config_x, theta, gamma) * radiance[0];
	functioncall	$const51 212 	%line{99} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:67
#   float ctheta = cos(theta);
	cos		___408_ctheta ___409_theta 	%line{67} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:68
#   float cgamma = cos(gamma);
	cos		___408_cgamma ___409_gamma 	%line{68} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:70
#   float expM = exp(config[4] * gamma);
	aref		$tmp105 config_x $const20 	%line{70} %argrw{"wrr"}
	mul		$tmp106 $tmp105 ___409_gamma 	%argrw{"wrr"}
	exp		___408_expM $tmp106 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:71
#   float rayM = cgamma * cgamma;
	mul		___408_rayM ___408_cgamma ___408_cgamma 	%line{71} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:72
#   float mieM = (1.0 + rayM) / pow((1.0 + config[8] * config[8] - 2.0 * config[8] * cgamma), 1.5);
	add		$tmp107 $const8 ___408_rayM 	%line{72} %argrw{"wrr"}
	aref		$tmp109 config_x $const5 	%argrw{"wrr"}
	aref		$tmp110 config_x $const5 	%argrw{"wrr"}
	mul		$tmp111 $tmp109 $tmp110 	%argrw{"wrr"}
	add		$tmp112 $const8 $tmp111 	%argrw{"wrr"}
	aref		$tmp113 config_x $const5 	%argrw{"wrr"}
	mul		$tmp114 $const16 $tmp113 	%argrw{"wrr"}
	mul		$tmp115 $tmp114 ___408_cgamma 	%argrw{"wrr"}
	sub		$tmp116 $tmp112 $tmp115 	%argrw{"wrr"}
	pow		$tmp108 $tmp116 $const34 	%argrw{"wrr"}
	div		___408_mieM $tmp107 $tmp108 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:73
#   float zenith = sqrt(ctheta);
	sqrt		___408_zenith ___408_ctheta 	%line{73} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:75
#   return (1.0 + config[0] * exp(config[1] / (ctheta + 0.01))) *
	aref		$tmp117 config_x $const7 	%line{75} %argrw{"wrr"}
	aref		$tmp119 config_x $const11 	%argrw{"wrr"}
	add		$tmp120 ___408_ctheta $const52 	%argrw{"wrr"}
	div		$tmp121 $tmp119 $tmp120 	%argrw{"wrr"}
	exp		$tmp118 $tmp121 	%argrw{"wr"}
	mul		$tmp122 $tmp117 $tmp118 	%argrw{"wrr"}
	add		$tmp123 $const8 $tmp122 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:76
#          (config[2] + config[3] * expM + config[5] * rayM + config[6] * mieM + config[7] * zenith);
	aref		$tmp124 config_x $const10 	%line{76} %argrw{"wrr"}
	aref		$tmp125 config_x $const19 	%argrw{"wrr"}
	mul		$tmp126 $tmp125 ___408_expM 	%argrw{"wrr"}
	add		$tmp127 $tmp124 $tmp126 	%argrw{"wrr"}
	aref		$tmp128 config_x $const21 	%argrw{"wrr"}
	mul		$tmp129 $tmp128 ___408_rayM 	%argrw{"wrr"}
	add		$tmp130 $tmp127 $tmp129 	%argrw{"wrr"}
	aref		$tmp131 config_x $const3 	%argrw{"wrr"}
	mul		$tmp132 $tmp131 ___408_mieM 	%argrw{"wrr"}
	add		$tmp133 $tmp130 $tmp132 	%argrw{"wrr"}
	aref		$tmp134 config_x $const4 	%argrw{"wrr"}
	mul		$tmp135 $tmp134 ___408_zenith 	%argrw{"wrr"}
	add		$tmp136 $tmp133 $tmp135 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:75
#   return (1.0 + config[0] * exp(config[1] / (ctheta + 0.01))) *
	mul		$tmp104 $tmp123 $tmp136 	%line{75} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:99
#   float x = sky_radiance_internal(config_x, theta, gamma) * radiance[0];
	compref		$tmp137 radiance $const7 	%line{99} %argrw{"wrr"}
	mul		___409_x $tmp104 $tmp137 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:100
#   float y = sky_radiance_internal(config_y, theta, gamma) * radiance[1];
	functioncall	$const51 254 	%line{100} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:67
#   float ctheta = cos(theta);
	cos		___408_ctheta ___409_theta 	%line{67} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:68
#   float cgamma = cos(gamma);
	cos		___408_cgamma ___409_gamma 	%line{68} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:70
#   float expM = exp(config[4] * gamma);
	aref		$tmp139 config_y $const20 	%line{70} %argrw{"wrr"}
	mul		$tmp140 $tmp139 ___409_gamma 	%argrw{"wrr"}
	exp		___408_expM $tmp140 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:71
#   float rayM = cgamma * cgamma;
	mul		___408_rayM ___408_cgamma ___408_cgamma 	%line{71} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:72
#   float mieM = (1.0 + rayM) / pow((1.0 + config[8] * config[8] - 2.0 * config[8] * cgamma), 1.5);
	add		$tmp141 $const8 ___408_rayM 	%line{72} %argrw{"wrr"}
	aref		$tmp143 config_y $const5 	%argrw{"wrr"}
	aref		$tmp144 config_y $const5 	%argrw{"wrr"}
	mul		$tmp145 $tmp143 $tmp144 	%argrw{"wrr"}
	add		$tmp146 $const8 $tmp145 	%argrw{"wrr"}
	aref		$tmp147 config_y $const5 	%argrw{"wrr"}
	mul		$tmp148 $const16 $tmp147 	%argrw{"wrr"}
	mul		$tmp149 $tmp148 ___408_cgamma 	%argrw{"wrr"}
	sub		$tmp150 $tmp146 $tmp149 	%argrw{"wrr"}
	pow		$tmp142 $tmp150 $const34 	%argrw{"wrr"}
	div		___408_mieM $tmp141 $tmp142 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:73
#   float zenith = sqrt(ctheta);
	sqrt		___408_zenith ___408_ctheta 	%line{73} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:75
#   return (1.0 + config[0] * exp(config[1] / (ctheta + 0.01))) *
	aref		$tmp151 config_y $const7 	%line{75} %argrw{"wrr"}
	aref		$tmp153 config_y $const11 	%argrw{"wrr"}
	add		$tmp154 ___408_ctheta $const52 	%argrw{"wrr"}
	div		$tmp155 $tmp153 $tmp154 	%argrw{"wrr"}
	exp		$tmp152 $tmp155 	%argrw{"wr"}
	mul		$tmp156 $tmp151 $tmp152 	%argrw{"wrr"}
	add		$tmp157 $const8 $tmp156 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:76
#          (config[2] + config[3] * expM + config[5] * rayM + config[6] * mieM + config[7] * zenith);
	aref		$tmp158 config_y $const10 	%line{76} %argrw{"wrr"}
	aref		$tmp159 config_y $const19 	%argrw{"wrr"}
	mul		$tmp160 $tmp159 ___408_expM 	%argrw{"wrr"}
	add		$tmp161 $tmp158 $tmp160 	%argrw{"wrr"}
	aref		$tmp162 config_y $const21 	%argrw{"wrr"}
	mul		$tmp163 $tmp162 ___408_rayM 	%argrw{"wrr"}
	add		$tmp164 $tmp161 $tmp163 	%argrw{"wrr"}
	aref		$tmp165 config_y $const3 	%argrw{"wrr"}
	mul		$tmp166 $tmp165 ___408_mieM 	%argrw{"wrr"}
	add		$tmp167 $tmp164 $tmp166 	%argrw{"wrr"}
	aref		$tmp168 config_y $const4 	%argrw{"wrr"}
	mul		$tmp169 $tmp168 ___408_zenith 	%argrw{"wrr"}
	add		$tmp170 $tmp167 $tmp169 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:75
#   return (1.0 + config[0] * exp(config[1] / (ctheta + 0.01))) *
	mul		$tmp138 $tmp157 $tmp170 	%line{75} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:100
#   float y = sky_radiance_internal(config_y, theta, gamma) * radiance[1];
	compref		$tmp171 radiance $const11 	%line{100} %argrw{"wrr"}
	mul		___409_y $tmp138 $tmp171 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:101
#   float z = sky_radiance_internal(config_z, theta, gamma) * radiance[2];
	functioncall	$const51 296 	%line{101} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:67
#   float ctheta = cos(theta);
	cos		___408_ctheta ___409_theta 	%line{67} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:68
#   float cgamma = cos(gamma);
	cos		___408_cgamma ___409_gamma 	%line{68} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:70
#   float expM = exp(config[4] * gamma);
	aref		$tmp173 config_z $const20 	%line{70} %argrw{"wrr"}
	mul		$tmp174 $tmp173 ___409_gamma 	%argrw{"wrr"}
	exp		___408_expM $tmp174 	%argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:71
#   float rayM = cgamma * cgamma;
	mul		___408_rayM ___408_cgamma ___408_cgamma 	%line{71} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:72
#   float mieM = (1.0 + rayM) / pow((1.0 + config[8] * config[8] - 2.0 * config[8] * cgamma), 1.5);
	add		$tmp175 $const8 ___408_rayM 	%line{72} %argrw{"wrr"}
	aref		$tmp177 config_z $const5 	%argrw{"wrr"}
	aref		$tmp178 config_z $const5 	%argrw{"wrr"}
	mul		$tmp179 $tmp177 $tmp178 	%argrw{"wrr"}
	add		$tmp180 $const8 $tmp179 	%argrw{"wrr"}
	aref		$tmp181 config_z $const5 	%argrw{"wrr"}
	mul		$tmp182 $const16 $tmp181 	%argrw{"wrr"}
	mul		$tmp183 $tmp182 ___408_cgamma 	%argrw{"wrr"}
	sub		$tmp184 $tmp180 $tmp183 	%argrw{"wrr"}
	pow		$tmp176 $tmp184 $const34 	%argrw{"wrr"}
	div		___408_mieM $tmp175 $tmp176 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:73
#   float zenith = sqrt(ctheta);
	sqrt		___408_zenith ___408_ctheta 	%line{73} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:75
#   return (1.0 + config[0] * exp(config[1] / (ctheta + 0.01))) *
	aref		$tmp185 config_z $const7 	%line{75} %argrw{"wrr"}
	aref		$tmp187 config_z $const11 	%argrw{"wrr"}
	add		$tmp188 ___408_ctheta $const52 	%argrw{"wrr"}
	div		$tmp189 $tmp187 $tmp188 	%argrw{"wrr"}
	exp		$tmp186 $tmp189 	%argrw{"wr"}
	mul		$tmp190 $tmp185 $tmp186 	%argrw{"wrr"}
	add		$tmp191 $const8 $tmp190 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:76
#          (config[2] + config[3] * expM + config[5] * rayM + config[6] * mieM + config[7] * zenith);
	aref		$tmp192 config_z $const10 	%line{76} %argrw{"wrr"}
	aref		$tmp193 config_z $const19 	%argrw{"wrr"}
	mul		$tmp194 $tmp193 ___408_expM 	%argrw{"wrr"}
	add		$tmp195 $tmp192 $tmp194 	%argrw{"wrr"}
	aref		$tmp196 config_z $const21 	%argrw{"wrr"}
	mul		$tmp197 $tmp196 ___408_rayM 	%argrw{"wrr"}
	add		$tmp198 $tmp195 $tmp197 	%argrw{"wrr"}
	aref		$tmp199 config_z $const3 	%argrw{"wrr"}
	mul		$tmp200 $tmp199 ___408_mieM 	%argrw{"wrr"}
	add		$tmp201 $tmp198 $tmp200 	%argrw{"wrr"}
	aref		$tmp202 config_z $const4 	%argrw{"wrr"}
	mul		$tmp203 $tmp202 ___408_zenith 	%argrw{"wrr"}
	add		$tmp204 $tmp201 $tmp203 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:75
#   return (1.0 + config[0] * exp(config[1] / (ctheta + 0.01))) *
	mul		$tmp172 $tmp191 $tmp204 	%line{75} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:101
#   float z = sky_radiance_internal(config_z, theta, gamma) * radiance[2];
	compref		$tmp205 radiance $const10 	%line{101} %argrw{"wrr"}
	mul		___409_z $tmp172 $tmp205 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:104
#   return xyz_to_rgb(x, y, z) * (M_2PI / 683);
	functioncall	$const36 315 	%line{104} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   return color(3.240479 * x + -1.537150 * y + -0.498535 * z,
	mul		$tmp207 $const37 ___409_x 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	mul		$tmp208 $const38 ___409_y 	%argrw{"wrr"}
	add		$tmp209 $tmp207 $tmp208 	%argrw{"wrr"}
	mul		$tmp210 $const39 ___409_z 	%argrw{"wrr"}
	add		$tmp211 $tmp209 $tmp210 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#                -0.969256 * x + 1.875991 * y + 0.041556 * z,
	mul		$tmp212 $const40 ___409_x 	%line{76} %argrw{"wrr"}
	mul		$tmp213 $const41 ___409_y 	%argrw{"wrr"}
	add		$tmp214 $tmp212 $tmp213 	%argrw{"wrr"}
	mul		$tmp215 $const42 ___409_z 	%argrw{"wrr"}
	add		$tmp216 $tmp214 $tmp215 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#                0.055648 * x + -0.204043 * y + 1.057311 * z);
	mul		$tmp217 $const43 ___409_x 	%line{77} %argrw{"wrr"}
	mul		$tmp218 $const44 ___409_y 	%argrw{"wrr"}
	add		$tmp219 $tmp217 $tmp218 	%argrw{"wrr"}
	mul		$tmp220 $const45 ___409_z 	%argrw{"wrr"}
	add		$tmp221 $tmp219 $tmp220 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   return color(3.240479 * x + -1.537150 * y + -0.498535 * z,
	color		$tmp206 $tmp211 $tmp216 $tmp221 	%line{75} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:104
#   return xyz_to_rgb(x, y, z) * (M_2PI / 683);
	div		$tmp222 $const24 $const54 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl"} %line{104} %argrw{"wrr"}
	mul		Color $tmp206 $tmp222 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:224
#   if (sky_type == "preetham")
	eq		$tmp223 sky_type $const55 	%line{224} %argrw{"wrr"}
	if		$tmp223 455 455 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:225
#     Color = sky_radiance_preetham(p, phi, theta, radiance, config_x, config_y, config_z);
	functioncall	$const56 455 	%line{225} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:44
#   vector spherical = sky_spherical_coordinates(dir);
	functioncall	$const9 327 	%line{44} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:22
#   return vector(acos(dir[2]), atan2(dir[0], dir[1]), 0);
	compref		$tmp225 p $const10 	%line{22} %argrw{"wrr"}
	acos		$tmp224 $tmp225 	%argrw{"wr"}
	compref		$tmp227 p $const7 	%argrw{"wrr"}
	compref		$tmp228 p $const11 	%argrw{"wrr"}
	atan2		$tmp226 $tmp227 $tmp228 	%argrw{"wrr"}
	vector		___407_spherical $tmp224 $tmp226 $const12 	%argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:45
#   float theta = spherical[0];
	compref		___407_theta ___407_spherical $const7 	%line{45} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:46
#   float phi = spherical[1];
	compref		___407_phi ___407_spherical $const11 	%line{46} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:49
#   float gamma = sky_angle_between(theta, phi, suntheta, sunphi);
	functioncall	$const48 349 	%line{49} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:10
#   float cospsi = sin(thetav) * sin(theta) * cos(phi - phiv) + cos(thetav) * cos(theta);
	sin		$tmp229 ___407_theta 	%line{10} %argrw{"wr"}
	sin		$tmp230 theta 	%argrw{"wr"}
	mul		$tmp231 $tmp229 $tmp230 	%argrw{"wrr"}
	sub		$tmp233 phi ___407_phi 	%argrw{"wrr"}
	cos		$tmp232 $tmp233 	%argrw{"wr"}
	mul		$tmp234 $tmp231 $tmp232 	%argrw{"wrr"}
	cos		$tmp235 ___407_theta 	%argrw{"wr"}
	cos		$tmp236 theta 	%argrw{"wr"}
	mul		$tmp237 $tmp235 $tmp236 	%argrw{"wrr"}
	add		___404_cospsi $tmp234 $tmp237 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:12
#   if (cospsi > 1.0)
	gt		$tmp238 ___404_cospsi $const8 	%line{12} %argrw{"wrr"}
	if		$tmp238 344 344 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:13
#     return 0.0;
	assign		___407_gamma $const12 	%line{13} %argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:14
#   if (cospsi < -1.0)
	lt		$tmp239 ___404_cospsi $const49 	%line{14} %argrw{"wrr"}
	if		$tmp239 348 348 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:15
#     return M_PI;
	assign		___407_gamma $const23 	%line{15} %argrw{"wr"}
	return
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:17
#   return acos(cospsi);
	acos		___407_gamma ___404_cospsi 	%line{17} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:52
#   theta = min(theta, M_PI_2 - 0.001);
	min		___407_theta ___407_theta $const50 	%line{52} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:55
#   float x = radiance[1] * sky_perez_function(config_y, theta, gamma);
	compref		$tmp240 radiance $const11 	%line{55} %argrw{"wrr"}
	functioncall	$const57 371 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:28
#   float ctheta = cos(theta);
	cos		___406_ctheta ___407_theta 	%line{28} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:29
#   float cgamma = cos(gamma);
	cos		___406_cgamma ___407_gamma 	%line{29} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:31
#   return (1.0 + lam[0] * exp(lam[1] / ctheta)) *
	aref		$tmp242 config_y $const7 	%line{31} %argrw{"wrr"}
	aref		$tmp244 config_y $const11 	%argrw{"wrr"}
	div		$tmp245 $tmp244 ___406_ctheta 	%argrw{"wrr"}
	exp		$tmp243 $tmp245 	%argrw{"wr"}
	mul		$tmp246 $tmp242 $tmp243 	%argrw{"wrr"}
	add		$tmp247 $const8 $tmp246 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:32
#          (1.0 + lam[2] * exp(lam[3] * gamma) + lam[4] * cgamma * cgamma);
	aref		$tmp248 config_y $const10 	%line{32} %argrw{"wrr"}
	aref		$tmp250 config_y $const19 	%argrw{"wrr"}
	mul		$tmp251 $tmp250 ___407_gamma 	%argrw{"wrr"}
	exp		$tmp249 $tmp251 	%argrw{"wr"}
	mul		$tmp252 $tmp248 $tmp249 	%argrw{"wrr"}
	add		$tmp253 $const8 $tmp252 	%argrw{"wrr"}
	aref		$tmp254 config_y $const20 	%argrw{"wrr"}
	mul		$tmp255 $tmp254 ___406_cgamma 	%argrw{"wrr"}
	mul		$tmp256 $tmp255 ___406_cgamma 	%argrw{"wrr"}
	add		$tmp257 $tmp253 $tmp256 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:31
#   return (1.0 + lam[0] * exp(lam[1] / ctheta)) *
	mul		$tmp241 $tmp247 $tmp257 	%line{31} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:55
#   float x = radiance[1] * sky_perez_function(config_y, theta, gamma);
	mul		___407_x $tmp240 $tmp241 	%line{55} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:56
#   float y = radiance[2] * sky_perez_function(config_z, theta, gamma);
	compref		$tmp258 radiance $const10 	%line{56} %argrw{"wrr"}
	functioncall	$const57 393 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:28
#   float ctheta = cos(theta);
	cos		___406_ctheta ___407_theta 	%line{28} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:29
#   float cgamma = cos(gamma);
	cos		___406_cgamma ___407_gamma 	%line{29} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:31
#   return (1.0 + lam[0] * exp(lam[1] / ctheta)) *
	aref		$tmp260 config_z $const7 	%line{31} %argrw{"wrr"}
	aref		$tmp262 config_z $const11 	%argrw{"wrr"}
	div		$tmp263 $tmp262 ___406_ctheta 	%argrw{"wrr"}
	exp		$tmp261 $tmp263 	%argrw{"wr"}
	mul		$tmp264 $tmp260 $tmp261 	%argrw{"wrr"}
	add		$tmp265 $const8 $tmp264 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:32
#          (1.0 + lam[2] * exp(lam[3] * gamma) + lam[4] * cgamma * cgamma);
	aref		$tmp266 config_z $const10 	%line{32} %argrw{"wrr"}
	aref		$tmp268 config_z $const19 	%argrw{"wrr"}
	mul		$tmp269 $tmp268 ___407_gamma 	%argrw{"wrr"}
	exp		$tmp267 $tmp269 	%argrw{"wr"}
	mul		$tmp270 $tmp266 $tmp267 	%argrw{"wrr"}
	add		$tmp271 $const8 $tmp270 	%argrw{"wrr"}
	aref		$tmp272 config_z $const20 	%argrw{"wrr"}
	mul		$tmp273 $tmp272 ___406_cgamma 	%argrw{"wrr"}
	mul		$tmp274 $tmp273 ___406_cgamma 	%argrw{"wrr"}
	add		$tmp275 $tmp271 $tmp274 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:31
#   return (1.0 + lam[0] * exp(lam[1] / ctheta)) *
	mul		$tmp259 $tmp265 $tmp275 	%line{31} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:56
#   float y = radiance[2] * sky_perez_function(config_z, theta, gamma);
	mul		___407_y $tmp258 $tmp259 	%line{56} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:57
#   float Y = radiance[0] * sky_perez_function(config_x, theta, gamma);
	compref		$tmp276 radiance $const7 	%line{57} %argrw{"wrr"}
	functioncall	$const57 415 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:28
#   float ctheta = cos(theta);
	cos		___406_ctheta ___407_theta 	%line{28} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:29
#   float cgamma = cos(gamma);
	cos		___406_cgamma ___407_gamma 	%line{29} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:31
#   return (1.0 + lam[0] * exp(lam[1] / ctheta)) *
	aref		$tmp278 config_x $const7 	%line{31} %argrw{"wrr"}
	aref		$tmp280 config_x $const11 	%argrw{"wrr"}
	div		$tmp281 $tmp280 ___406_ctheta 	%argrw{"wrr"}
	exp		$tmp279 $tmp281 	%argrw{"wr"}
	mul		$tmp282 $tmp278 $tmp279 	%argrw{"wrr"}
	add		$tmp283 $const8 $tmp282 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:32
#          (1.0 + lam[2] * exp(lam[3] * gamma) + lam[4] * cgamma * cgamma);
	aref		$tmp284 config_x $const10 	%line{32} %argrw{"wrr"}
	aref		$tmp286 config_x $const19 	%argrw{"wrr"}
	mul		$tmp287 $tmp286 ___407_gamma 	%argrw{"wrr"}
	exp		$tmp285 $tmp287 	%argrw{"wr"}
	mul		$tmp288 $tmp284 $tmp285 	%argrw{"wrr"}
	add		$tmp289 $const8 $tmp288 	%argrw{"wrr"}
	aref		$tmp290 config_x $const20 	%argrw{"wrr"}
	mul		$tmp291 $tmp290 ___406_cgamma 	%argrw{"wrr"}
	mul		$tmp292 $tmp291 ___406_cgamma 	%argrw{"wrr"}
	add		$tmp293 $tmp289 $tmp292 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:31
#   return (1.0 + lam[0] * exp(lam[1] / ctheta)) *
	mul		$tmp277 $tmp283 $tmp293 	%line{31} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:57
#   float Y = radiance[0] * sky_perez_function(config_x, theta, gamma);
	mul		___407_Y $tmp276 $tmp277 	%line{57} %argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:60
#   color xyz = xyY_to_xyz(x, y, Y);
	functioncall	$const58 435 	%line{60} %argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:56
#   if (y != 0.0) {
	neq		$tmp294 ___407_y $const12 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{56} %argrw{"wrr"}
	if		$tmp294 421 422 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:57
#     X = (x / y) * Y;
	div		$tmp295 ___407_x ___407_y 	%line{57} %argrw{"wrr"}
	mul		___354_X $tmp295 ___407_Y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:60
#     X = 0.0;
	assign		___354_X $const12 	%line{60} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:63
#   if (y != 0.0 && Y != 0.0) {
	neq		$tmp296 ___407_y $const12 	%line{63} %argrw{"wrr"}
	neq		$tmp297 $tmp296 $const7 	%argrw{"wrr"}
	if		$tmp297 428 428 	%argrw{"r"}
	neq		$tmp298 ___407_Y $const12 	%argrw{"wrr"}
	neq		$tmp299 $tmp298 $const7 	%argrw{"wrr"}
	assign		$tmp297 $tmp299 	%argrw{"wr"}
	if		$tmp297 433 434 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:64
#     Z = ((1.0 - x - y) / y) * Y;
	sub		$tmp300 $const8 ___407_x 	%line{64} %argrw{"wrr"}
	sub		$tmp301 $tmp300 ___407_y 	%argrw{"wrr"}
	div		$tmp302 $tmp301 ___407_y 	%argrw{"wrr"}
	mul		___354_Z $tmp302 ___407_Y 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:67
#     Z = 0.0;
	assign		___354_Z $const12 	%line{67} %argrw{"wr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:70
#   return color(X, Y, Z);
	color		___407_xyz ___354_X ___407_Y ___354_Z 	%line{70} %argrw{"wrrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:61
#   return xyz_to_rgb(xyz[0], xyz[1], xyz[2]);
	compref		$tmp303 ___407_xyz $const7 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl"} %line{61} %argrw{"wrr"}
	compref		$tmp304 ___407_xyz $const11 	%argrw{"wrr"}
	compref		$tmp305 ___407_xyz $const10 	%argrw{"wrr"}
	functioncall	$const36 455 	%argrw{"r"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   return color(3.240479 * x + -1.537150 * y + -0.498535 * z,
	mul		$tmp306 $const37 $tmp303 	%filename{"F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	mul		$tmp307 $const38 $tmp304 	%argrw{"wrr"}
	add		$tmp308 $tmp306 $tmp307 	%argrw{"wrr"}
	mul		$tmp309 $const39 $tmp305 	%argrw{"wrr"}
	add		$tmp310 $tmp308 $tmp309 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#                -0.969256 * x + 1.875991 * y + 0.041556 * z,
	mul		$tmp311 $const40 $tmp303 	%line{76} %argrw{"wrr"}
	mul		$tmp312 $const41 $tmp304 	%argrw{"wrr"}
	add		$tmp313 $tmp311 $tmp312 	%argrw{"wrr"}
	mul		$tmp314 $const42 $tmp305 	%argrw{"wrr"}
	add		$tmp315 $tmp313 $tmp314 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#                0.055648 * x + -0.204043 * y + 1.057311 * z);
	mul		$tmp316 $const43 $tmp303 	%line{77} %argrw{"wrr"}
	mul		$tmp317 $const44 $tmp304 	%argrw{"wrr"}
	add		$tmp318 $tmp316 $tmp317 	%argrw{"wrr"}
	mul		$tmp319 $const45 $tmp305 	%argrw{"wrr"}
	add		$tmp320 $tmp318 $tmp319 	%argrw{"wrr"}
# F:/Repositories/blender_repo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   return color(3.240479 * x + -1.537150 * y + -0.498535 * z,
	color		Color $tmp310 $tmp315 $tmp320 	%line{75} %argrw{"wrrr"}
	end
