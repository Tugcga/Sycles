OpenShadingLanguage 1.00
# Compiled by oslc 1.11.17
# options: -q -O2 -IF:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders -IF:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders -o F:/Repositories/blenderRepo/build_windows_Full_x64_vc16_Release/intern/cycles/kernel/osl/shaders/node_sky_texture.oso
shader node_sky_texture
param	int	use_mapping	0		%read{2,2} %write{2147483647,-1}
param	matrix	mapping	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		%read{3,3} %write{2147483647,-1} %derivs
param	vector	Vector	0 0 0		%read{1,1} %write{0,0} %derivs %initexpr
param	string	sky_type	"hosek_wilkie"		%read{4,312} %write{2147483647,-1}
param	float	theta	0		%read{147,332} %write{2147483647,-1}
param	float	phi	0		%read{149,328} %write{2147483647,-1}
param	string	filename	""		%read{94,111} %write{2147483647,-1}
param	color	radiance	0 0 0		%read{207,390} %write{2147483647,-1}
param	float[9]	config_x	0 0 0 0 0 0 0 0 0		%read{170,406} %write{2147483647,-1}
param	float[9]	config_y	0 0 0 0 0 0 0 0 0		%read{212,362} %write{2147483647,-1}
param	float[9]	config_z	0 0 0 0 0 0 0 0 0		%read{254,384} %write{2147483647,-1}
param	float[10]	nishita_data	0 0 0 0 0 0 0 0 0 0		%read{7,56} %write{2147483647,-1} %derivs
oparam	color	Color	0 0 0		%read{2147483647,-1} %write{132,450}
global	point	P	%read{0,0} %write{2147483647,-1} %derivs
local	float	___335_X	%read{430,430} %write{416,417}
local	float	___335_Z	%read{430,430} %write{428,429}
local	float	___390_cospsi	%read{156,343} %write{155,334}
local	float	___392_ctheta	%read{352,396} %write{348,392}
local	float	___392_cgamma	%read{363,408} %write{349,393}
local	vector	___393_spherical	%read{322,323} %write{321,321}
local	float	___393_theta	%read{325,392} %write{322,345}
local	float	___393_phi	%read{328,328} %write{323,323}
local	float	___393_gamma	%read{349,402} %write{337,343}
local	float	___393_x	%read{415,425} %write{367,367}
local	float	___393_y	%read{413,427} %write{389,389}
local	float	___393_Y	%read{416,430} %write{411,411}
local	color	___393_xyz	%read{431,433} %write{430,430}
local	float	___394_ctheta	%read{185,272} %write{168,252}
local	float	___394_cgamma	%read{173,265} %write{169,253}
local	float	___394_expM	%read{195,279} %write{172,256}
local	float	___394_rayM	%read{174,282} %write{173,257}
local	float	___394_mieM	%read{201,285} %write{184,268}
local	float	___394_zenith	%read{204,288} %write{185,269}
local	vector	___395_spherical	%read{143,144} %write{142,142}
local	float	___395_theta	%read{146,252} %write{143,166}
local	float	___395_phi	%read{149,149} %write{144,144}
local	float	___395_gamma	%read{169,255} %write{158,164}
local	float	___395_x	%read{294,304} %write{208,208}
local	float	___395_y	%read{295,305} %write{250,250}
local	float	___395_z	%read{297,307} %write{292,292}
local	float	___398_sun_elevation	%read{25,72} %write{7,7}
local	float	___398_sun_rotation	%read{23,105} %write{8,8} %derivs
local	float	___398_angular_diameter	%read{11,65} %write{9,9}
local	float	___398_sun_intensity	%read{68,75} %write{10,10}
local	int	___398_sun_disc	%read{46,46} %write{11,11}
local	float	___398_alpha	%read{2147483647,-1} %write{12,111}
local	color	___398_xyz	%read{83,115} %write{68,112}
local	vector	___398_direction	%read{41,103} %write{19,19} %derivs
local	vector	___399_sun_dir	%read{34,36} %write{32,32}
local	float	___399_sun_dir_angle	%read{43,76} %write{39,39}
local	float	___399_half_angular	%read{43,76} %write{40,40}
local	float	___399_dir_elevation	%read{64,88} %write{42,42} %derivs
local	color	___400_pixel_bottom	%read{67,74} %write{53,53}
local	color	___400_pixel_top	%read{67,74} %write{57,57}
local	float	___400_y	%read{67,74} %write{66,73}
local	float	___400_angle_fraction	%read{77,77} %write{76,76}
local	float	___400_limb_darkening	%read{83,83} %write{82,82}
local	float	___405_x	%read{91,94} %write{87,93} %derivs
local	float	___405_y	%read{94,94} %write{90,90} %derivs
local	float	___409_mul	%read{112,112} %write{102,102}
local	float	___409_x	%read{108,111} %write{106,110} %derivs
local	float	___409_y	%read{111,111} %write{107,107} %derivs
local	vector	p	%read{3,319} %write{1,3} %derivs
const	string	$const1	"nishita_improved"		%read{4,4} %write{2147483647,-1}
temp	int	$tmp1	%read{5,5} %write{4,4}
const	string	$const2	"sky_radiance_nishita"		%read{6,6} %write{2147483647,-1}
const	int	$const3	6		%read{7,284} %write{2147483647,-1}
const	int	$const4	7		%read{8,287} %write{2147483647,-1}
const	int	$const5	8		%read{9,263} %write{2147483647,-1}
const	int	$const6	9		%read{10,10} %write{2147483647,-1}
const	int	$const7	0		%read{11,431} %write{2147483647,-1}
const	float	$const8	1		%read{12,425} %write{2147483647,-1}
const	string	$const9	"sky_spherical_coordinates"		%read{13,315} %write{2147483647,-1}
temp	float	$tmp2	%read{19,19} %write{15,15} %derivs
const	int	$const10	2		%read{14,433} %write{2147483647,-1}
temp	float	$tmp3	%read{15,15} %write{14,14} %derivs
temp	float	$tmp4	%read{19,19} %write{18,18} %derivs
temp	float	$tmp5	%read{18,18} %write{16,16} %derivs
const	int	$const11	1		%read{17,432} %write{2147483647,-1}
temp	float	$tmp6	%read{18,18} %write{17,17} %derivs
const	float	$const12	0		%read{19,429} %write{2147483647,-1}
temp	float	$tmp7	%read{21,21} %write{20,20}
temp	int	$tmp8	%read{22,22} %write{21,21}
const	float	$const13	1.57079637		%read{23,344} %write{2147483647,-1}
temp	float	$tmp9	%read{26,29} %write{23,23}
const	string	$const14	"geographical_to_direction"		%read{24,24} %write{2147483647,-1}
temp	float	$tmp10	%read{27,27} %write{25,25}
temp	float	$tmp11	%read{27,27} %write{26,26}
temp	float	$tmp12	%read{32,32} %write{27,27}
temp	float	$tmp13	%read{30,30} %write{28,28}
temp	float	$tmp14	%read{30,30} %write{29,29}
temp	float	$tmp15	%read{32,32} %write{30,30}
temp	float	$tmp16	%read{32,32} %write{31,31}
const	string	$const15	"precise_angle"		%read{33,33} %write{2147483647,-1}
const	float	$const16	2		%read{39,264} %write{2147483647,-1}
temp	float	$tmp17	%read{39,39} %write{38,38}
temp	float	$tmp18	%read{38,38} %write{35,35}
temp	vector	$tmp19	%read{35,35} %write{34,34}
temp	float	$tmp20	%read{38,38} %write{37,37}
temp	vector	$tmp21	%read{37,37} %write{36,36}
temp	float	$tmp22	%read{42,42} %write{41,41} %derivs
temp	int	$tmp23	%read{44,44} %write{43,43}
temp	int	$tmp24	%read{45,49} %write{44,48}
temp	int	$tmp25	%read{47,47} %write{46,46}
temp	int	$tmp26	%read{48,48} %write{47,47}
temp	float	$tmp27	%read{53,53} %write{50,50}
temp	float	$tmp28	%read{53,53} %write{51,51}
temp	float	$tmp29	%read{53,53} %write{52,52}
const	int	$const17	3		%read{54,401} %write{2147483647,-1}
temp	float	$tmp30	%read{57,57} %write{54,54}
const	int	$const18	4		%read{55,406} %write{2147483647,-1}
temp	float	$tmp31	%read{57,57} %write{55,55}
const	int	$const19	5		%read{56,281} %write{2147483647,-1}
temp	float	$tmp32	%read{57,57} %write{56,56}
temp	float	$tmp33	%read{59,59} %write{58,58}
temp	int	$tmp34	%read{60,60} %write{59,59}
temp	float	$tmp35	%read{62,62} %write{61,61}
temp	int	$tmp36	%read{63,63} %write{62,62}
temp	float	$tmp37	%read{65,65} %write{64,64}
temp	float	$tmp38	%read{66,66} %write{65,65}
const	float	$const20	0.5		%read{66,66} %write{2147483647,-1}
temp	color	$tmp39	%read{68,68} %write{67,67}
temp	float	$tmp40	%read{70,70} %write{69,69}
temp	int	$tmp41	%read{71,71} %write{70,70}
temp	float	$tmp42	%read{73,73} %write{72,72}
temp	color	$tmp43	%read{75,75} %write{74,74}
const	float	$const21	0.600000024		%read{81,81} %write{2147483647,-1}
temp	float	$tmp44	%read{80,80} %write{79,79}
temp	float	$tmp45	%read{78,78} %write{77,77}
temp	float	$tmp46	%read{79,79} %write{78,78}
temp	float	$tmp47	%read{81,81} %write{80,80}
temp	float	$tmp48	%read{82,82} %write{81,81}
temp	float	$tmp49	%read{85,85} %write{84,84} %derivs
const	float	$const22	3.14159274		%read{85,341} %write{2147483647,-1}
temp	float	$tmp50	%read{86,86} %write{85,85} %derivs
temp	float	$tmp51	%read{87,87} %write{86,86} %derivs
const	float	$const23	6.28318548		%read{87,310} %write{2147483647,-1}
temp	float	$tmp52	%read{90,90} %write{89,89} %derivs
temp	float	$tmp53	%read{89,89} %write{88,88} %derivs
temp	int	$tmp54	%read{92,92} %write{91,91}
const	string	$const24	"wrap"		%read{94,111} %write{2147483647,-1}
const	string	$const25	"clamp"		%read{94,94} %write{2147483647,-1}
const	string	$const26	"interp"		%read{94,111} %write{2147483647,-1}
const	string	$const27	"linear"		%read{94,111} %write{2147483647,-1}
const	string	$const28	"alpha"		%read{94,111} %write{2147483647,-1}
temp	float	$tmp55	%read{96,96} %write{95,95}
const	float	$const29	-0.400000006		%read{96,96} %write{2147483647,-1}
temp	int	$tmp56	%read{97,97} %write{96,96}
const	color	$const30	0 0 0		%read{98,98} %write{2147483647,-1}
temp	float	$tmp57	%read{100,100} %write{99,99}
const	float	$const31	2.5		%read{100,100} %write{2147483647,-1}
temp	float	$tmp58	%read{101,101} %write{100,100}
temp	float	$tmp59	%read{102,102} %write{101,101}
const	float	$const32	3		%read{102,102} %write{2147483647,-1}
temp	float	$tmp60	%read{104,104} %write{103,103} %derivs
temp	float	$tmp61	%read{105,105} %write{104,104} %derivs
temp	float	$tmp62	%read{106,106} %write{105,105} %derivs
const	float	$const33	1.5		%read{107,267} %write{2147483647,-1}
temp	int	$tmp63	%read{109,109} %write{108,108}
temp	color	$tmp64	%read{112,112} %write{111,111}
const	string	$const34	"periodic"		%read{111,111} %write{2147483647,-1}
temp	float	$tmp65	%read{117,127} %write{113,113}
temp	float	$tmp66	%read{118,128} %write{114,114}
temp	float	$tmp67	%read{120,130} %write{115,115}
const	string	$const35	"xyz_to_rgb"		%read{116,434} %write{2147483647,-1}
const	float	$const36	3.24047899		%read{117,435} %write{2147483647,-1}
temp	float	$tmp68	%read{119,119} %write{117,117}
const	float	$const37	-1.53715003		%read{118,436} %write{2147483647,-1}
temp	float	$tmp69	%read{119,119} %write{118,118}
temp	float	$tmp70	%read{121,121} %write{119,119}
const	float	$const38	-0.498535007		%read{120,438} %write{2147483647,-1}
temp	float	$tmp71	%read{121,121} %write{120,120}
temp	float	$tmp72	%read{132,132} %write{121,121}
const	float	$const39	-0.969255984		%read{122,440} %write{2147483647,-1}
temp	float	$tmp73	%read{124,124} %write{122,122}
const	float	$const40	1.87599099		%read{123,441} %write{2147483647,-1}
temp	float	$tmp74	%read{124,124} %write{123,123}
temp	float	$tmp75	%read{126,126} %write{124,124}
const	float	$const41	0.0415560007		%read{125,443} %write{2147483647,-1}
temp	float	$tmp76	%read{126,126} %write{125,125}
temp	float	$tmp77	%read{132,132} %write{126,126}
const	float	$const42	0.055647999		%read{127,445} %write{2147483647,-1}
temp	float	$tmp78	%read{129,129} %write{127,127}
const	float	$const43	-0.204043001		%read{128,446} %write{2147483647,-1}
temp	float	$tmp79	%read{129,129} %write{128,128}
temp	float	$tmp80	%read{131,131} %write{129,129}
const	float	$const44	1.05731106		%read{130,448} %write{2147483647,-1}
temp	float	$tmp81	%read{131,131} %write{130,130}
temp	float	$tmp82	%read{132,132} %write{131,131}
const	string	$const45	"hosek_wilkie"		%read{133,133} %write{2147483647,-1}
temp	int	$tmp83	%read{134,134} %write{133,133}
const	string	$const46	"sky_radiance_hosek"		%read{135,135} %write{2147483647,-1}
temp	float	$tmp84	%read{142,142} %write{138,138}
temp	float	$tmp85	%read{138,138} %write{137,137}
temp	float	$tmp86	%read{142,142} %write{141,141}
temp	float	$tmp87	%read{141,141} %write{139,139}
temp	float	$tmp88	%read{141,141} %write{140,140}
const	string	$const47	"sky_angle_between"		%read{145,324} %write{2147483647,-1}
temp	float	$tmp89	%read{148,148} %write{146,146}
temp	float	$tmp90	%read{148,148} %write{147,147}
temp	float	$tmp91	%read{151,151} %write{148,148}
temp	float	$tmp92	%read{151,151} %write{150,150}
temp	float	$tmp93	%read{150,150} %write{149,149}
temp	float	$tmp94	%read{155,155} %write{151,151}
temp	float	$tmp95	%read{154,154} %write{152,152}
temp	float	$tmp96	%read{154,154} %write{153,153}
temp	float	$tmp97	%read{155,155} %write{154,154}
temp	int	$tmp98	%read{157,157} %write{156,156}
const	float	$const48	-1		%read{160,339} %write{2147483647,-1}
temp	int	$tmp99	%read{161,161} %write{160,160}
const	float	$const49	0.00100000005		%read{165,344} %write{2147483647,-1}
temp	float	$tmp100	%read{166,166} %write{165,165}
temp	float	$tmp101	%read{208,208} %write{206,206}
const	string	$const50	"sky_radiance_internal"		%read{167,251} %write{2147483647,-1}
temp	float	$tmp102	%read{171,171} %write{170,170}
temp	float	$tmp103	%read{172,172} %write{171,171}
temp	float	$tmp104	%read{184,184} %write{174,174}
temp	float	$tmp105	%read{184,184} %write{183,183}
temp	float	$tmp106	%read{177,177} %write{175,175}
temp	float	$tmp107	%read{177,177} %write{176,176}
temp	float	$tmp108	%read{178,178} %write{177,177}
temp	float	$tmp109	%read{182,182} %write{178,178}
temp	float	$tmp110	%read{180,180} %write{179,179}
temp	float	$tmp111	%read{181,181} %write{180,180}
temp	float	$tmp112	%read{182,182} %write{181,181}
temp	float	$tmp113	%read{183,183} %write{182,182}
temp	float	$tmp114	%read{191,191} %write{186,186}
temp	float	$tmp115	%read{191,191} %write{190,190}
temp	float	$tmp116	%read{189,189} %write{187,187}
const	float	$const51	0.00999999978		%read{188,272} %write{2147483647,-1}
temp	float	$tmp117	%read{189,189} %write{188,188}
temp	float	$tmp118	%read{190,190} %write{189,189}
temp	float	$tmp119	%read{192,192} %write{191,191}
temp	float	$tmp120	%read{206,206} %write{192,192}
temp	float	$tmp121	%read{196,196} %write{193,193}
temp	float	$tmp122	%read{195,195} %write{194,194}
temp	float	$tmp123	%read{196,196} %write{195,195}
temp	float	$tmp124	%read{199,199} %write{196,196}
temp	float	$tmp125	%read{198,198} %write{197,197}
temp	float	$tmp126	%read{199,199} %write{198,198}
temp	float	$tmp127	%read{202,202} %write{199,199}
temp	float	$tmp128	%read{201,201} %write{200,200}
temp	float	$tmp129	%read{202,202} %write{201,201}
temp	float	$tmp130	%read{205,205} %write{202,202}
temp	float	$tmp131	%read{204,204} %write{203,203}
temp	float	$tmp132	%read{205,205} %write{204,204}
temp	float	$tmp133	%read{206,206} %write{205,205}
temp	float	$tmp134	%read{208,208} %write{207,207}
temp	float	$tmp135	%read{250,250} %write{248,248}
temp	float	$tmp136	%read{213,213} %write{212,212}
temp	float	$tmp137	%read{214,214} %write{213,213}
temp	float	$tmp138	%read{226,226} %write{216,216}
temp	float	$tmp139	%read{226,226} %write{225,225}
temp	float	$tmp140	%read{219,219} %write{217,217}
temp	float	$tmp141	%read{219,219} %write{218,218}
temp	float	$tmp142	%read{220,220} %write{219,219}
temp	float	$tmp143	%read{224,224} %write{220,220}
temp	float	$tmp144	%read{222,222} %write{221,221}
temp	float	$tmp145	%read{223,223} %write{222,222}
temp	float	$tmp146	%read{224,224} %write{223,223}
temp	float	$tmp147	%read{225,225} %write{224,224}
temp	float	$tmp148	%read{233,233} %write{228,228}
temp	float	$tmp149	%read{233,233} %write{232,232}
temp	float	$tmp150	%read{231,231} %write{229,229}
temp	float	$tmp151	%read{231,231} %write{230,230}
temp	float	$tmp152	%read{232,232} %write{231,231}
temp	float	$tmp153	%read{234,234} %write{233,233}
temp	float	$tmp154	%read{248,248} %write{234,234}
temp	float	$tmp155	%read{238,238} %write{235,235}
temp	float	$tmp156	%read{237,237} %write{236,236}
temp	float	$tmp157	%read{238,238} %write{237,237}
temp	float	$tmp158	%read{241,241} %write{238,238}
temp	float	$tmp159	%read{240,240} %write{239,239}
temp	float	$tmp160	%read{241,241} %write{240,240}
temp	float	$tmp161	%read{244,244} %write{241,241}
temp	float	$tmp162	%read{243,243} %write{242,242}
temp	float	$tmp163	%read{244,244} %write{243,243}
temp	float	$tmp164	%read{247,247} %write{244,244}
temp	float	$tmp165	%read{246,246} %write{245,245}
temp	float	$tmp166	%read{247,247} %write{246,246}
temp	float	$tmp167	%read{248,248} %write{247,247}
temp	float	$tmp168	%read{250,250} %write{249,249}
temp	float	$tmp169	%read{292,292} %write{290,290}
temp	float	$tmp170	%read{255,255} %write{254,254}
temp	float	$tmp171	%read{256,256} %write{255,255}
temp	float	$tmp172	%read{268,268} %write{258,258}
temp	float	$tmp173	%read{268,268} %write{267,267}
temp	float	$tmp174	%read{261,261} %write{259,259}
temp	float	$tmp175	%read{261,261} %write{260,260}
temp	float	$tmp176	%read{262,262} %write{261,261}
temp	float	$tmp177	%read{266,266} %write{262,262}
temp	float	$tmp178	%read{264,264} %write{263,263}
temp	float	$tmp179	%read{265,265} %write{264,264}
temp	float	$tmp180	%read{266,266} %write{265,265}
temp	float	$tmp181	%read{267,267} %write{266,266}
temp	float	$tmp182	%read{275,275} %write{270,270}
temp	float	$tmp183	%read{275,275} %write{274,274}
temp	float	$tmp184	%read{273,273} %write{271,271}
temp	float	$tmp185	%read{273,273} %write{272,272}
temp	float	$tmp186	%read{274,274} %write{273,273}
temp	float	$tmp187	%read{276,276} %write{275,275}
temp	float	$tmp188	%read{290,290} %write{276,276}
temp	float	$tmp189	%read{280,280} %write{277,277}
temp	float	$tmp190	%read{279,279} %write{278,278}
temp	float	$tmp191	%read{280,280} %write{279,279}
temp	float	$tmp192	%read{283,283} %write{280,280}
temp	float	$tmp193	%read{282,282} %write{281,281}
temp	float	$tmp194	%read{283,283} %write{282,282}
temp	float	$tmp195	%read{286,286} %write{283,283}
temp	float	$tmp196	%read{285,285} %write{284,284}
temp	float	$tmp197	%read{286,286} %write{285,285}
temp	float	$tmp198	%read{289,289} %write{286,286}
temp	float	$tmp199	%read{288,288} %write{287,287}
temp	float	$tmp200	%read{289,289} %write{288,288}
temp	float	$tmp201	%read{290,290} %write{289,289}
temp	float	$tmp202	%read{292,292} %write{291,291}
temp	color	$tmp203	%read{311,311} %write{309,309}
temp	float	$tmp204	%read{296,296} %write{294,294}
temp	float	$tmp205	%read{296,296} %write{295,295}
temp	float	$tmp206	%read{298,298} %write{296,296}
temp	float	$tmp207	%read{298,298} %write{297,297}
temp	float	$tmp208	%read{309,309} %write{298,298}
temp	float	$tmp209	%read{301,301} %write{299,299}
temp	float	$tmp210	%read{301,301} %write{300,300}
temp	float	$tmp211	%read{303,303} %write{301,301}
temp	float	$tmp212	%read{303,303} %write{302,302}
temp	float	$tmp213	%read{309,309} %write{303,303}
temp	float	$tmp214	%read{306,306} %write{304,304}
temp	float	$tmp215	%read{306,306} %write{305,305}
temp	float	$tmp216	%read{308,308} %write{306,306}
temp	float	$tmp217	%read{308,308} %write{307,307}
temp	float	$tmp218	%read{309,309} %write{308,308}
temp	float	$tmp219	%read{311,311} %write{310,310}
const	float	$const53	683		%read{310,310} %write{2147483647,-1}
const	string	$const54	"preetham"		%read{312,312} %write{2147483647,-1}
temp	int	$tmp220	%read{313,313} %write{312,312}
const	string	$const55	"sky_radiance_preetham"		%read{314,314} %write{2147483647,-1}
temp	float	$tmp221	%read{321,321} %write{317,317}
temp	float	$tmp222	%read{317,317} %write{316,316}
temp	float	$tmp223	%read{321,321} %write{320,320}
temp	float	$tmp224	%read{320,320} %write{318,318}
temp	float	$tmp225	%read{320,320} %write{319,319}
temp	float	$tmp226	%read{327,327} %write{325,325}
temp	float	$tmp227	%read{327,327} %write{326,326}
temp	float	$tmp228	%read{330,330} %write{327,327}
temp	float	$tmp229	%read{330,330} %write{329,329}
temp	float	$tmp230	%read{329,329} %write{328,328}
temp	float	$tmp231	%read{334,334} %write{330,330}
temp	float	$tmp232	%read{333,333} %write{331,331}
temp	float	$tmp233	%read{333,333} %write{332,332}
temp	float	$tmp234	%read{334,334} %write{333,333}
temp	int	$tmp235	%read{336,336} %write{335,335}
temp	int	$tmp236	%read{340,340} %write{339,339}
temp	float	$tmp237	%read{345,345} %write{344,344}
temp	float	$tmp238	%read{367,367} %write{346,346}
temp	float	$tmp239	%read{367,367} %write{366,366}
const	string	$const56	"sky_perez_function"		%read{347,391} %write{2147483647,-1}
temp	float	$tmp240	%read{354,354} %write{350,350}
temp	float	$tmp241	%read{354,354} %write{353,353}
temp	float	$tmp242	%read{352,352} %write{351,351}
temp	float	$tmp243	%read{353,353} %write{352,352}
temp	float	$tmp244	%read{355,355} %write{354,354}
temp	float	$tmp245	%read{366,366} %write{355,355}
temp	float	$tmp246	%read{360,360} %write{356,356}
temp	float	$tmp247	%read{360,360} %write{359,359}
temp	float	$tmp248	%read{358,358} %write{357,357}
temp	float	$tmp249	%read{359,359} %write{358,358}
temp	float	$tmp250	%read{361,361} %write{360,360}
temp	float	$tmp251	%read{365,365} %write{361,361}
temp	float	$tmp252	%read{363,363} %write{362,362}
temp	float	$tmp253	%read{364,364} %write{363,363}
temp	float	$tmp254	%read{365,365} %write{364,364}
temp	float	$tmp255	%read{366,366} %write{365,365}
temp	float	$tmp256	%read{389,389} %write{368,368}
temp	float	$tmp257	%read{389,389} %write{388,388}
temp	float	$tmp258	%read{376,376} %write{372,372}
temp	float	$tmp259	%read{376,376} %write{375,375}
temp	float	$tmp260	%read{374,374} %write{373,373}
temp	float	$tmp261	%read{375,375} %write{374,374}
temp	float	$tmp262	%read{377,377} %write{376,376}
temp	float	$tmp263	%read{388,388} %write{377,377}
temp	float	$tmp264	%read{382,382} %write{378,378}
temp	float	$tmp265	%read{382,382} %write{381,381}
temp	float	$tmp266	%read{380,380} %write{379,379}
temp	float	$tmp267	%read{381,381} %write{380,380}
temp	float	$tmp268	%read{383,383} %write{382,382}
temp	float	$tmp269	%read{387,387} %write{383,383}
temp	float	$tmp270	%read{385,385} %write{384,384}
temp	float	$tmp271	%read{386,386} %write{385,385}
temp	float	$tmp272	%read{387,387} %write{386,386}
temp	float	$tmp273	%read{388,388} %write{387,387}
temp	float	$tmp274	%read{411,411} %write{390,390}
temp	float	$tmp275	%read{411,411} %write{410,410}
temp	float	$tmp276	%read{398,398} %write{394,394}
temp	float	$tmp277	%read{398,398} %write{397,397}
temp	float	$tmp278	%read{396,396} %write{395,395}
temp	float	$tmp279	%read{397,397} %write{396,396}
temp	float	$tmp280	%read{399,399} %write{398,398}
temp	float	$tmp281	%read{410,410} %write{399,399}
temp	float	$tmp282	%read{404,404} %write{400,400}
temp	float	$tmp283	%read{404,404} %write{403,403}
temp	float	$tmp284	%read{402,402} %write{401,401}
temp	float	$tmp285	%read{403,403} %write{402,402}
temp	float	$tmp286	%read{405,405} %write{404,404}
temp	float	$tmp287	%read{409,409} %write{405,405}
temp	float	$tmp288	%read{407,407} %write{406,406}
temp	float	$tmp289	%read{408,408} %write{407,407}
temp	float	$tmp290	%read{409,409} %write{408,408}
temp	float	$tmp291	%read{410,410} %write{409,409}
const	string	$const57	"xyY_to_xyz"		%read{412,412} %write{2147483647,-1}
temp	int	$tmp292	%read{414,414} %write{413,413}
temp	float	$tmp293	%read{416,416} %write{415,415}
temp	int	$tmp294	%read{419,419} %write{418,418}
temp	int	$tmp295	%read{420,424} %write{419,423}
temp	int	$tmp296	%read{422,422} %write{421,421}
temp	int	$tmp297	%read{423,423} %write{422,422}
temp	float	$tmp298	%read{426,426} %write{425,425}
temp	float	$tmp299	%read{427,427} %write{426,426}
temp	float	$tmp300	%read{428,428} %write{427,427}
temp	float	$tmp301	%read{435,445} %write{431,431}
temp	float	$tmp302	%read{436,446} %write{432,432}
temp	float	$tmp303	%read{438,448} %write{433,433}
temp	float	$tmp304	%read{437,437} %write{435,435}
temp	float	$tmp305	%read{437,437} %write{436,436}
temp	float	$tmp306	%read{439,439} %write{437,437}
temp	float	$tmp307	%read{439,439} %write{438,438}
temp	float	$tmp308	%read{450,450} %write{439,439}
temp	float	$tmp309	%read{442,442} %write{440,440}
temp	float	$tmp310	%read{442,442} %write{441,441}
temp	float	$tmp311	%read{444,444} %write{442,442}
temp	float	$tmp312	%read{444,444} %write{443,443}
temp	float	$tmp313	%read{450,450} %write{444,444}
temp	float	$tmp314	%read{447,447} %write{445,445}
temp	float	$tmp315	%read{447,447} %write{446,446}
temp	float	$tmp316	%read{449,449} %write{447,447}
temp	float	$tmp317	%read{449,449} %write{448,448}
temp	float	$tmp318	%read{450,450} %write{449,449}
code Vector
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:201
#     vector Vector = P,
	assign		Vector P 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl"} %line{201} %argrw{"wr"}
code ___main___
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:213
#   vector p = Vector;
	assign		p Vector 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl"} %line{213} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:215
#   if (use_mapping)
	if		use_mapping 4 4 	%line{215} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:216
#     p = transform(mapping, p);
	transformv	p mapping p 	%line{216} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:218
#   if (sky_type == "nishita_improved")
	eq		$tmp1 sky_type $const1 	%line{218} %argrw{"wrr"}
	if		$tmp1 133 133 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:219
#     Color = sky_radiance_nishita(p, nishita_data, filename);
	functioncall	$const2 133 	%line{219} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:120
#   float sun_elevation = nishita_data[6];
	aref		___398_sun_elevation nishita_data $const3 	%line{120} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:121
#   float sun_rotation = nishita_data[7];
	aref		___398_sun_rotation nishita_data $const4 	%line{121} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:122
#   float angular_diameter = nishita_data[8];
	aref		___398_angular_diameter nishita_data $const5 	%line{122} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:123
#   float sun_intensity = nishita_data[9];
	aref		___398_sun_intensity nishita_data $const6 	%line{123} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:124
#   int sun_disc = angular_diameter > 0;
	gt		___398_sun_disc ___398_angular_diameter $const7 	%line{124} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:125
#   float alpha = 1.0;
	assign		___398_alpha $const8 	%line{125} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:128
#   vector direction = sky_spherical_coordinates(dir);
	functioncall	$const9 20 	%line{128} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:21
#   return vector(acos(dir[2]), atan2(dir[0], dir[1]), 0);
	compref		$tmp3 p $const10 	%line{21} %argrw{"wrr"}
	acos		$tmp2 $tmp3 	%argrw{"wr"}
	compref		$tmp5 p $const7 	%argrw{"wrr"}
	compref		$tmp6 p $const11 	%argrw{"wrr"}
	atan2		$tmp4 $tmp5 $tmp6 	%argrw{"wrr"}
	vector		___398_direction $tmp2 $tmp4 $const12 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:131
#   if (dir[2] >= 0.0) {
	compref		$tmp7 p $const10 	%line{131} %argrw{"wrr"}
	ge		$tmp8 $tmp7 $const12 	%argrw{"wrr"}
	if		$tmp8 95 113 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:133
#     vector sun_dir = geographical_to_direction(sun_elevation, sun_rotation + M_PI_2);
	add		$tmp9 ___398_sun_rotation $const13 	%line{133} %argrw{"wrr"}
	functioncall	$const14 33 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:109
#   return vector(cos(lat) * cos(lon), cos(lat) * sin(lon), sin(lat));
	cos		$tmp10 ___398_sun_elevation 	%line{109} %argrw{"wr"}
	cos		$tmp11 $tmp9 	%argrw{"wr"}
	mul		$tmp12 $tmp10 $tmp11 	%argrw{"wrr"}
	cos		$tmp13 ___398_sun_elevation 	%argrw{"wr"}
	sin		$tmp14 $tmp9 	%argrw{"wr"}
	mul		$tmp15 $tmp13 $tmp14 	%argrw{"wrr"}
	sin		$tmp16 ___398_sun_elevation 	%argrw{"wr"}
	vector		___399_sun_dir $tmp12 $tmp15 $tmp16 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:134
#     float sun_dir_angle = precise_angle(dir, sun_dir);
	functioncall	$const15 40 	%line{134} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:114
#   return 2.0 * atan2(length(a - b), length(a + b));
	sub		$tmp19 p ___399_sun_dir 	%line{114} %argrw{"wrr"}
	length		$tmp18 $tmp19 	%argrw{"wr"}
	add		$tmp21 p ___399_sun_dir 	%argrw{"wrr"}
	length		$tmp20 $tmp21 	%argrw{"wr"}
	atan2		$tmp17 $tmp18 $tmp20 	%argrw{"wrr"}
	mul		___399_sun_dir_angle $const16 $tmp17 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:135
#     float half_angular = angular_diameter / 2.0;
	div		___399_half_angular ___398_angular_diameter $const16 	%line{135} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:136
#     float dir_elevation = M_PI_2 - direction[0];
	compref		$tmp22 ___398_direction $const7 	%line{136} %argrw{"wrr"}
	sub		___399_dir_elevation $const13 $tmp22 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:139
#     if (sun_dir_angle < half_angular && sun_disc == 1) {
	lt		$tmp23 ___399_sun_dir_angle ___399_half_angular 	%line{139} %argrw{"wrr"}
	neq		$tmp24 $tmp23 $const7 	%argrw{"wrr"}
	if		$tmp24 49 49 	%argrw{"r"}
	eq		$tmp25 ___398_sun_disc $const11 	%argrw{"wrr"}
	neq		$tmp26 $tmp25 $const7 	%argrw{"wrr"}
	assign		$tmp24 $tmp26 	%argrw{"wr"}
	if		$tmp24 84 95 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:141
#       color pixel_bottom = color(nishita_data[0], nishita_data[1], nishita_data[2]);
	aref		$tmp27 nishita_data $const7 	%line{141} %argrw{"wrr"}
	aref		$tmp28 nishita_data $const11 	%argrw{"wrr"}
	aref		$tmp29 nishita_data $const10 	%argrw{"wrr"}
	color		___400_pixel_bottom $tmp27 $tmp28 $tmp29 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:142
#       color pixel_top = color(nishita_data[3], nishita_data[4], nishita_data[5]);
	aref		$tmp30 nishita_data $const17 	%line{142} %argrw{"wrr"}
	aref		$tmp31 nishita_data $const18 	%argrw{"wrr"}
	aref		$tmp32 nishita_data $const19 	%argrw{"wrr"}
	color		___400_pixel_top $tmp30 $tmp31 $tmp32 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:146
#       if (sun_elevation - half_angular > 0.0) {
	sub		$tmp33 ___398_sun_elevation ___399_half_angular 	%line{146} %argrw{"wrr"}
	gt		$tmp34 $tmp33 $const12 	%argrw{"wrr"}
	if		$tmp34 69 76 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:147
#         if ((sun_elevation + half_angular) > 0.0) {
	add		$tmp35 ___398_sun_elevation ___399_half_angular 	%line{147} %argrw{"wrr"}
	gt		$tmp36 $tmp35 $const12 	%argrw{"wrr"}
	if		$tmp36 69 69 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:148
#           y = ((dir_elevation - sun_elevation) / angular_diameter) + 0.5;
	sub		$tmp37 ___399_dir_elevation ___398_sun_elevation 	%line{148} %argrw{"wrr"}
	div		$tmp38 $tmp37 ___398_angular_diameter 	%argrw{"wrr"}
	add		___400_y $tmp38 $const20 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:149
#           xyz = mix(pixel_bottom, pixel_top, y) * sun_intensity;
	mix		$tmp39 ___400_pixel_bottom ___400_pixel_top ___400_y 	%line{149} %argrw{"wrrr"}
	mul		___398_xyz $tmp39 ___398_sun_intensity 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:153
#         if (sun_elevation + half_angular > 0.0) {
	add		$tmp40 ___398_sun_elevation ___399_half_angular 	%line{153} %argrw{"wrr"}
	gt		$tmp41 $tmp40 $const12 	%argrw{"wrr"}
	if		$tmp41 76 76 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:154
#           y = dir_elevation / (sun_elevation + half_angular);
	add		$tmp42 ___398_sun_elevation ___399_half_angular 	%line{154} %argrw{"wrr"}
	div		___400_y ___399_dir_elevation $tmp42 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:155
#           xyz = mix(pixel_bottom, pixel_top, y) * sun_intensity;
	mix		$tmp43 ___400_pixel_bottom ___400_pixel_top ___400_y 	%line{155} %argrw{"wrrr"}
	mul		___398_xyz $tmp43 ___398_sun_intensity 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:159
#       float angle_fraction = sun_dir_angle / half_angular;
	div		___400_angle_fraction ___399_sun_dir_angle ___399_half_angular 	%line{159} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:160
#       float limb_darkening = (1.0 - 0.6 * (1.0 - sqrt(1.0 - angle_fraction * angle_fraction)));
	mul		$tmp45 ___400_angle_fraction ___400_angle_fraction 	%line{160} %argrw{"wrr"}
	sub		$tmp46 $const8 $tmp45 	%argrw{"wrr"}
	sqrt		$tmp44 $tmp46 	%argrw{"wr"}
	sub		$tmp47 $const8 $tmp44 	%argrw{"wrr"}
	mul		$tmp48 $const21 $tmp47 	%argrw{"wrr"}
	sub		___400_limb_darkening $const8 $tmp48 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:161
#       xyz *= limb_darkening;
	mul		___398_xyz ___398_xyz ___400_limb_darkening 	%line{161} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:166
#       float x = (direction[1] + M_PI + sun_rotation) / M_2PI;
	compref		$tmp49 ___398_direction $const11 	%line{166} %argrw{"wrr"}
	add		$tmp50 $tmp49 $const22 	%argrw{"wrr"}
	add		$tmp51 $tmp50 ___398_sun_rotation 	%argrw{"wrr"}
	div		___405_x $tmp51 $const23 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:168
#       float y = 1.0 - sqrt(dir_elevation / M_PI_2);
	div		$tmp53 ___399_dir_elevation $const13 	%line{168} %argrw{"wrr"}
	sqrt		$tmp52 $tmp53 	%argrw{"wr"}
	sub		___405_y $const8 $tmp52 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:169
#       if (x > 1.0) {
	gt		$tmp54 ___405_x $const8 	%line{169} %argrw{"wrr"}
	if		$tmp54 94 94 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:170
#         x = x - 1.0;
	sub		___405_x ___405_x $const8 	%line{170} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:172
#       xyz = (color)texture(filename, x, y, "wrap", "clamp", "interp", "linear", "alpha", alpha);
	texture		___398_xyz filename ___405_x ___405_y $const24 $const25 $const26 $const27 $const28 ___398_alpha 	%line{172} %argrw{"wrrrrrrrrw"} %argderivs{2,3}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:177
#     if (dir[2] < -0.4) {
	compref		$tmp55 p $const10 	%line{177} %argrw{"wrr"}
	lt		$tmp56 $tmp55 $const29 	%argrw{"wrr"}
	if		$tmp56 99 113 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:178
#       xyz = color(0, 0, 0);
	assign		___398_xyz $const30 	%line{178} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:182
#       float mul = pow(1.0 + dir[2] * 2.5, 3.0);
	compref		$tmp57 p $const10 	%line{182} %argrw{"wrr"}
	mul		$tmp58 $tmp57 $const31 	%argrw{"wrr"}
	add		$tmp59 $const8 $tmp58 	%argrw{"wrr"}
	pow		___409_mul $tmp59 $const32 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:184
#       float x = (direction[1] + M_PI + sun_rotation) / M_2PI;
	compref		$tmp60 ___398_direction $const11 	%line{184} %argrw{"wrr"}
	add		$tmp61 $tmp60 $const22 	%argrw{"wrr"}
	add		$tmp62 $tmp61 ___398_sun_rotation 	%argrw{"wrr"}
	div		___409_x $tmp62 $const23 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:185
#       float y = 1.5;
	assign		___409_y $const33 	%line{185} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:186
#       if (x > 1.0) {
	gt		$tmp63 ___409_x $const8 	%line{186} %argrw{"wrr"}
	if		$tmp63 111 111 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:187
#         x = x - 1.0;
	sub		___409_x ___409_x $const8 	%line{187} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:189
#       xyz = (color)texture(
	texture		$tmp64 filename ___409_x ___409_y $const24 $const34 $const26 $const27 $const28 ___398_alpha 	%line{189} %argrw{"wrrrrrrrrw"} %argderivs{2,3}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:190
#                 filename, x, y, "wrap", "periodic", "interp", "linear", "alpha", alpha) *
	mul		___398_xyz $tmp64 ___409_mul 	%line{190} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:195
#   return xyz_to_rgb(xyz[0], xyz[1], xyz[2]);
	compref		$tmp65 ___398_xyz $const7 	%line{195} %argrw{"wrr"}
	compref		$tmp66 ___398_xyz $const11 	%argrw{"wrr"}
	compref		$tmp67 ___398_xyz $const10 	%argrw{"wrr"}
	functioncall	$const35 133 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:65
#   return color(3.240479 * x + -1.537150 * y + -0.498535 * z,
	mul		$tmp68 $const36 $tmp65 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{65} %argrw{"wrr"}
	mul		$tmp69 $const37 $tmp66 	%argrw{"wrr"}
	add		$tmp70 $tmp68 $tmp69 	%argrw{"wrr"}
	mul		$tmp71 $const38 $tmp67 	%argrw{"wrr"}
	add		$tmp72 $tmp70 $tmp71 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:66
#                -0.969256 * x + 1.875991 * y + 0.041556 * z,
	mul		$tmp73 $const39 $tmp65 	%line{66} %argrw{"wrr"}
	mul		$tmp74 $const40 $tmp66 	%argrw{"wrr"}
	add		$tmp75 $tmp73 $tmp74 	%argrw{"wrr"}
	mul		$tmp76 $const41 $tmp67 	%argrw{"wrr"}
	add		$tmp77 $tmp75 $tmp76 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:67
#                0.055648 * x + -0.204043 * y + 1.057311 * z);
	mul		$tmp78 $const42 $tmp65 	%line{67} %argrw{"wrr"}
	mul		$tmp79 $const43 $tmp66 	%argrw{"wrr"}
	add		$tmp80 $tmp78 $tmp79 	%argrw{"wrr"}
	mul		$tmp81 $const44 $tmp67 	%argrw{"wrr"}
	add		$tmp82 $tmp80 $tmp81 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:65
#   return color(3.240479 * x + -1.537150 * y + -0.498535 * z,
	color		Color $tmp72 $tmp77 $tmp82 	%line{65} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:220
#   if (sky_type == "hosek_wilkie")
	eq		$tmp83 sky_type $const45 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl"} %line{220} %argrw{"wrr"}
	if		$tmp83 312 312 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:221
#     Color = sky_radiance_hosek(p, phi, theta, radiance, config_x, config_y, config_z);
	functioncall	$const46 312 	%line{221} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:87
#   vector spherical = sky_spherical_coordinates(dir);
	functioncall	$const9 143 	%line{87} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:21
#   return vector(acos(dir[2]), atan2(dir[0], dir[1]), 0);
	compref		$tmp85 p $const10 	%line{21} %argrw{"wrr"}
	acos		$tmp84 $tmp85 	%argrw{"wr"}
	compref		$tmp87 p $const7 	%argrw{"wrr"}
	compref		$tmp88 p $const11 	%argrw{"wrr"}
	atan2		$tmp86 $tmp87 $tmp88 	%argrw{"wrr"}
	vector		___395_spherical $tmp84 $tmp86 $const12 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:88
#   float theta = spherical[0];
	compref		___395_theta ___395_spherical $const7 	%line{88} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:89
#   float phi = spherical[1];
	compref		___395_phi ___395_spherical $const11 	%line{89} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:92
#   float gamma = sky_angle_between(theta, phi, suntheta, sunphi);
	functioncall	$const47 165 	%line{92} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:9
#   float cospsi = sin(thetav) * sin(theta) * cos(phi - phiv) + cos(thetav) * cos(theta);
	sin		$tmp89 ___395_theta 	%line{9} %argrw{"wr"}
	sin		$tmp90 theta 	%argrw{"wr"}
	mul		$tmp91 $tmp89 $tmp90 	%argrw{"wrr"}
	sub		$tmp93 phi ___395_phi 	%argrw{"wrr"}
	cos		$tmp92 $tmp93 	%argrw{"wr"}
	mul		$tmp94 $tmp91 $tmp92 	%argrw{"wrr"}
	cos		$tmp95 ___395_theta 	%argrw{"wr"}
	cos		$tmp96 theta 	%argrw{"wr"}
	mul		$tmp97 $tmp95 $tmp96 	%argrw{"wrr"}
	add		___390_cospsi $tmp94 $tmp97 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:11
#   if (cospsi > 1.0)
	gt		$tmp98 ___390_cospsi $const8 	%line{11} %argrw{"wrr"}
	if		$tmp98 160 160 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:12
#     return 0.0;
	assign		___395_gamma $const12 	%line{12} %argrw{"wr"}
	return
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:13
#   if (cospsi < -1.0)
	lt		$tmp99 ___390_cospsi $const48 	%line{13} %argrw{"wrr"}
	if		$tmp99 164 164 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:14
#     return M_PI;
	assign		___395_gamma $const22 	%line{14} %argrw{"wr"}
	return
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:16
#   return acos(cospsi);
	acos		___395_gamma ___390_cospsi 	%line{16} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:95
#   theta = min(theta, M_PI_2 - 0.001);
	sub		$tmp100 $const13 $const49 	%line{95} %argrw{"wrr"}
	min		___395_theta ___395_theta $tmp100 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:98
#   float x = sky_radiance_internal(config_x, theta, gamma) * radiance[0];
	functioncall	$const50 207 	%line{98} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:66
#   float ctheta = cos(theta);
	cos		___394_ctheta ___395_theta 	%line{66} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:67
#   float cgamma = cos(gamma);
	cos		___394_cgamma ___395_gamma 	%line{67} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:69
#   float expM = exp(config[4] * gamma);
	aref		$tmp102 config_x $const18 	%line{69} %argrw{"wrr"}
	mul		$tmp103 $tmp102 ___395_gamma 	%argrw{"wrr"}
	exp		___394_expM $tmp103 	%argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:70
#   float rayM = cgamma * cgamma;
	mul		___394_rayM ___394_cgamma ___394_cgamma 	%line{70} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:71
#   float mieM = (1.0 + rayM) / pow((1.0 + config[8] * config[8] - 2.0 * config[8] * cgamma), 1.5);
	add		$tmp104 $const8 ___394_rayM 	%line{71} %argrw{"wrr"}
	aref		$tmp106 config_x $const5 	%argrw{"wrr"}
	aref		$tmp107 config_x $const5 	%argrw{"wrr"}
	mul		$tmp108 $tmp106 $tmp107 	%argrw{"wrr"}
	add		$tmp109 $const8 $tmp108 	%argrw{"wrr"}
	aref		$tmp110 config_x $const5 	%argrw{"wrr"}
	mul		$tmp111 $const16 $tmp110 	%argrw{"wrr"}
	mul		$tmp112 $tmp111 ___394_cgamma 	%argrw{"wrr"}
	sub		$tmp113 $tmp109 $tmp112 	%argrw{"wrr"}
	pow		$tmp105 $tmp113 $const33 	%argrw{"wrr"}
	div		___394_mieM $tmp104 $tmp105 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:72
#   float zenith = sqrt(ctheta);
	sqrt		___394_zenith ___394_ctheta 	%line{72} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:74
#   return (1.0 + config[0] * exp(config[1] / (ctheta + 0.01))) *
	aref		$tmp114 config_x $const7 	%line{74} %argrw{"wrr"}
	aref		$tmp116 config_x $const11 	%argrw{"wrr"}
	add		$tmp117 ___394_ctheta $const51 	%argrw{"wrr"}
	div		$tmp118 $tmp116 $tmp117 	%argrw{"wrr"}
	exp		$tmp115 $tmp118 	%argrw{"wr"}
	mul		$tmp119 $tmp114 $tmp115 	%argrw{"wrr"}
	add		$tmp120 $const8 $tmp119 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:75
#          (config[2] + config[3] * expM + config[5] * rayM + config[6] * mieM + config[7] * zenith);
	aref		$tmp121 config_x $const10 	%line{75} %argrw{"wrr"}
	aref		$tmp122 config_x $const17 	%argrw{"wrr"}
	mul		$tmp123 $tmp122 ___394_expM 	%argrw{"wrr"}
	add		$tmp124 $tmp121 $tmp123 	%argrw{"wrr"}
	aref		$tmp125 config_x $const19 	%argrw{"wrr"}
	mul		$tmp126 $tmp125 ___394_rayM 	%argrw{"wrr"}
	add		$tmp127 $tmp124 $tmp126 	%argrw{"wrr"}
	aref		$tmp128 config_x $const3 	%argrw{"wrr"}
	mul		$tmp129 $tmp128 ___394_mieM 	%argrw{"wrr"}
	add		$tmp130 $tmp127 $tmp129 	%argrw{"wrr"}
	aref		$tmp131 config_x $const4 	%argrw{"wrr"}
	mul		$tmp132 $tmp131 ___394_zenith 	%argrw{"wrr"}
	add		$tmp133 $tmp130 $tmp132 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:74
#   return (1.0 + config[0] * exp(config[1] / (ctheta + 0.01))) *
	mul		$tmp101 $tmp120 $tmp133 	%line{74} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:98
#   float x = sky_radiance_internal(config_x, theta, gamma) * radiance[0];
	compref		$tmp134 radiance $const7 	%line{98} %argrw{"wrr"}
	mul		___395_x $tmp101 $tmp134 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:99
#   float y = sky_radiance_internal(config_y, theta, gamma) * radiance[1];
	functioncall	$const50 249 	%line{99} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:66
#   float ctheta = cos(theta);
	cos		___394_ctheta ___395_theta 	%line{66} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:67
#   float cgamma = cos(gamma);
	cos		___394_cgamma ___395_gamma 	%line{67} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:69
#   float expM = exp(config[4] * gamma);
	aref		$tmp136 config_y $const18 	%line{69} %argrw{"wrr"}
	mul		$tmp137 $tmp136 ___395_gamma 	%argrw{"wrr"}
	exp		___394_expM $tmp137 	%argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:70
#   float rayM = cgamma * cgamma;
	mul		___394_rayM ___394_cgamma ___394_cgamma 	%line{70} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:71
#   float mieM = (1.0 + rayM) / pow((1.0 + config[8] * config[8] - 2.0 * config[8] * cgamma), 1.5);
	add		$tmp138 $const8 ___394_rayM 	%line{71} %argrw{"wrr"}
	aref		$tmp140 config_y $const5 	%argrw{"wrr"}
	aref		$tmp141 config_y $const5 	%argrw{"wrr"}
	mul		$tmp142 $tmp140 $tmp141 	%argrw{"wrr"}
	add		$tmp143 $const8 $tmp142 	%argrw{"wrr"}
	aref		$tmp144 config_y $const5 	%argrw{"wrr"}
	mul		$tmp145 $const16 $tmp144 	%argrw{"wrr"}
	mul		$tmp146 $tmp145 ___394_cgamma 	%argrw{"wrr"}
	sub		$tmp147 $tmp143 $tmp146 	%argrw{"wrr"}
	pow		$tmp139 $tmp147 $const33 	%argrw{"wrr"}
	div		___394_mieM $tmp138 $tmp139 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:72
#   float zenith = sqrt(ctheta);
	sqrt		___394_zenith ___394_ctheta 	%line{72} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:74
#   return (1.0 + config[0] * exp(config[1] / (ctheta + 0.01))) *
	aref		$tmp148 config_y $const7 	%line{74} %argrw{"wrr"}
	aref		$tmp150 config_y $const11 	%argrw{"wrr"}
	add		$tmp151 ___394_ctheta $const51 	%argrw{"wrr"}
	div		$tmp152 $tmp150 $tmp151 	%argrw{"wrr"}
	exp		$tmp149 $tmp152 	%argrw{"wr"}
	mul		$tmp153 $tmp148 $tmp149 	%argrw{"wrr"}
	add		$tmp154 $const8 $tmp153 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:75
#          (config[2] + config[3] * expM + config[5] * rayM + config[6] * mieM + config[7] * zenith);
	aref		$tmp155 config_y $const10 	%line{75} %argrw{"wrr"}
	aref		$tmp156 config_y $const17 	%argrw{"wrr"}
	mul		$tmp157 $tmp156 ___394_expM 	%argrw{"wrr"}
	add		$tmp158 $tmp155 $tmp157 	%argrw{"wrr"}
	aref		$tmp159 config_y $const19 	%argrw{"wrr"}
	mul		$tmp160 $tmp159 ___394_rayM 	%argrw{"wrr"}
	add		$tmp161 $tmp158 $tmp160 	%argrw{"wrr"}
	aref		$tmp162 config_y $const3 	%argrw{"wrr"}
	mul		$tmp163 $tmp162 ___394_mieM 	%argrw{"wrr"}
	add		$tmp164 $tmp161 $tmp163 	%argrw{"wrr"}
	aref		$tmp165 config_y $const4 	%argrw{"wrr"}
	mul		$tmp166 $tmp165 ___394_zenith 	%argrw{"wrr"}
	add		$tmp167 $tmp164 $tmp166 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:74
#   return (1.0 + config[0] * exp(config[1] / (ctheta + 0.01))) *
	mul		$tmp135 $tmp154 $tmp167 	%line{74} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:99
#   float y = sky_radiance_internal(config_y, theta, gamma) * radiance[1];
	compref		$tmp168 radiance $const11 	%line{99} %argrw{"wrr"}
	mul		___395_y $tmp135 $tmp168 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:100
#   float z = sky_radiance_internal(config_z, theta, gamma) * radiance[2];
	functioncall	$const50 291 	%line{100} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:66
#   float ctheta = cos(theta);
	cos		___394_ctheta ___395_theta 	%line{66} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:67
#   float cgamma = cos(gamma);
	cos		___394_cgamma ___395_gamma 	%line{67} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:69
#   float expM = exp(config[4] * gamma);
	aref		$tmp170 config_z $const18 	%line{69} %argrw{"wrr"}
	mul		$tmp171 $tmp170 ___395_gamma 	%argrw{"wrr"}
	exp		___394_expM $tmp171 	%argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:70
#   float rayM = cgamma * cgamma;
	mul		___394_rayM ___394_cgamma ___394_cgamma 	%line{70} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:71
#   float mieM = (1.0 + rayM) / pow((1.0 + config[8] * config[8] - 2.0 * config[8] * cgamma), 1.5);
	add		$tmp172 $const8 ___394_rayM 	%line{71} %argrw{"wrr"}
	aref		$tmp174 config_z $const5 	%argrw{"wrr"}
	aref		$tmp175 config_z $const5 	%argrw{"wrr"}
	mul		$tmp176 $tmp174 $tmp175 	%argrw{"wrr"}
	add		$tmp177 $const8 $tmp176 	%argrw{"wrr"}
	aref		$tmp178 config_z $const5 	%argrw{"wrr"}
	mul		$tmp179 $const16 $tmp178 	%argrw{"wrr"}
	mul		$tmp180 $tmp179 ___394_cgamma 	%argrw{"wrr"}
	sub		$tmp181 $tmp177 $tmp180 	%argrw{"wrr"}
	pow		$tmp173 $tmp181 $const33 	%argrw{"wrr"}
	div		___394_mieM $tmp172 $tmp173 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:72
#   float zenith = sqrt(ctheta);
	sqrt		___394_zenith ___394_ctheta 	%line{72} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:74
#   return (1.0 + config[0] * exp(config[1] / (ctheta + 0.01))) *
	aref		$tmp182 config_z $const7 	%line{74} %argrw{"wrr"}
	aref		$tmp184 config_z $const11 	%argrw{"wrr"}
	add		$tmp185 ___394_ctheta $const51 	%argrw{"wrr"}
	div		$tmp186 $tmp184 $tmp185 	%argrw{"wrr"}
	exp		$tmp183 $tmp186 	%argrw{"wr"}
	mul		$tmp187 $tmp182 $tmp183 	%argrw{"wrr"}
	add		$tmp188 $const8 $tmp187 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:75
#          (config[2] + config[3] * expM + config[5] * rayM + config[6] * mieM + config[7] * zenith);
	aref		$tmp189 config_z $const10 	%line{75} %argrw{"wrr"}
	aref		$tmp190 config_z $const17 	%argrw{"wrr"}
	mul		$tmp191 $tmp190 ___394_expM 	%argrw{"wrr"}
	add		$tmp192 $tmp189 $tmp191 	%argrw{"wrr"}
	aref		$tmp193 config_z $const19 	%argrw{"wrr"}
	mul		$tmp194 $tmp193 ___394_rayM 	%argrw{"wrr"}
	add		$tmp195 $tmp192 $tmp194 	%argrw{"wrr"}
	aref		$tmp196 config_z $const3 	%argrw{"wrr"}
	mul		$tmp197 $tmp196 ___394_mieM 	%argrw{"wrr"}
	add		$tmp198 $tmp195 $tmp197 	%argrw{"wrr"}
	aref		$tmp199 config_z $const4 	%argrw{"wrr"}
	mul		$tmp200 $tmp199 ___394_zenith 	%argrw{"wrr"}
	add		$tmp201 $tmp198 $tmp200 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:74
#   return (1.0 + config[0] * exp(config[1] / (ctheta + 0.01))) *
	mul		$tmp169 $tmp188 $tmp201 	%line{74} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:100
#   float z = sky_radiance_internal(config_z, theta, gamma) * radiance[2];
	compref		$tmp202 radiance $const10 	%line{100} %argrw{"wrr"}
	mul		___395_z $tmp169 $tmp202 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:103
#   return xyz_to_rgb(x, y, z) * (M_2PI / 683);
	functioncall	$const35 310 	%line{103} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:65
#   return color(3.240479 * x + -1.537150 * y + -0.498535 * z,
	mul		$tmp204 $const36 ___395_x 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{65} %argrw{"wrr"}
	mul		$tmp205 $const37 ___395_y 	%argrw{"wrr"}
	add		$tmp206 $tmp204 $tmp205 	%argrw{"wrr"}
	mul		$tmp207 $const38 ___395_z 	%argrw{"wrr"}
	add		$tmp208 $tmp206 $tmp207 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:66
#                -0.969256 * x + 1.875991 * y + 0.041556 * z,
	mul		$tmp209 $const39 ___395_x 	%line{66} %argrw{"wrr"}
	mul		$tmp210 $const40 ___395_y 	%argrw{"wrr"}
	add		$tmp211 $tmp209 $tmp210 	%argrw{"wrr"}
	mul		$tmp212 $const41 ___395_z 	%argrw{"wrr"}
	add		$tmp213 $tmp211 $tmp212 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:67
#                0.055648 * x + -0.204043 * y + 1.057311 * z);
	mul		$tmp214 $const42 ___395_x 	%line{67} %argrw{"wrr"}
	mul		$tmp215 $const43 ___395_y 	%argrw{"wrr"}
	add		$tmp216 $tmp214 $tmp215 	%argrw{"wrr"}
	mul		$tmp217 $const44 ___395_z 	%argrw{"wrr"}
	add		$tmp218 $tmp216 $tmp217 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:65
#   return color(3.240479 * x + -1.537150 * y + -0.498535 * z,
	color		$tmp203 $tmp208 $tmp213 $tmp218 	%line{65} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:103
#   return xyz_to_rgb(x, y, z) * (M_2PI / 683);
	div		$tmp219 $const23 $const53 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl"} %line{103} %argrw{"wrr"}
	mul		Color $tmp203 $tmp219 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:222
#   if (sky_type == "preetham")
	eq		$tmp220 sky_type $const54 	%line{222} %argrw{"wrr"}
	if		$tmp220 451 451 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:223
#     Color = sky_radiance_preetham(p, phi, theta, radiance, config_x, config_y, config_z);
	functioncall	$const55 451 	%line{223} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:43
#   vector spherical = sky_spherical_coordinates(dir);
	functioncall	$const9 322 	%line{43} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:21
#   return vector(acos(dir[2]), atan2(dir[0], dir[1]), 0);
	compref		$tmp222 p $const10 	%line{21} %argrw{"wrr"}
	acos		$tmp221 $tmp222 	%argrw{"wr"}
	compref		$tmp224 p $const7 	%argrw{"wrr"}
	compref		$tmp225 p $const11 	%argrw{"wrr"}
	atan2		$tmp223 $tmp224 $tmp225 	%argrw{"wrr"}
	vector		___393_spherical $tmp221 $tmp223 $const12 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:44
#   float theta = spherical[0];
	compref		___393_theta ___393_spherical $const7 	%line{44} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:45
#   float phi = spherical[1];
	compref		___393_phi ___393_spherical $const11 	%line{45} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:48
#   float gamma = sky_angle_between(theta, phi, suntheta, sunphi);
	functioncall	$const47 344 	%line{48} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:9
#   float cospsi = sin(thetav) * sin(theta) * cos(phi - phiv) + cos(thetav) * cos(theta);
	sin		$tmp226 ___393_theta 	%line{9} %argrw{"wr"}
	sin		$tmp227 theta 	%argrw{"wr"}
	mul		$tmp228 $tmp226 $tmp227 	%argrw{"wrr"}
	sub		$tmp230 phi ___393_phi 	%argrw{"wrr"}
	cos		$tmp229 $tmp230 	%argrw{"wr"}
	mul		$tmp231 $tmp228 $tmp229 	%argrw{"wrr"}
	cos		$tmp232 ___393_theta 	%argrw{"wr"}
	cos		$tmp233 theta 	%argrw{"wr"}
	mul		$tmp234 $tmp232 $tmp233 	%argrw{"wrr"}
	add		___390_cospsi $tmp231 $tmp234 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:11
#   if (cospsi > 1.0)
	gt		$tmp235 ___390_cospsi $const8 	%line{11} %argrw{"wrr"}
	if		$tmp235 339 339 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:12
#     return 0.0;
	assign		___393_gamma $const12 	%line{12} %argrw{"wr"}
	return
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:13
#   if (cospsi < -1.0)
	lt		$tmp236 ___390_cospsi $const48 	%line{13} %argrw{"wrr"}
	if		$tmp236 343 343 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:14
#     return M_PI;
	assign		___393_gamma $const22 	%line{14} %argrw{"wr"}
	return
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:16
#   return acos(cospsi);
	acos		___393_gamma ___390_cospsi 	%line{16} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:51
#   theta = min(theta, M_PI_2 - 0.001);
	sub		$tmp237 $const13 $const49 	%line{51} %argrw{"wrr"}
	min		___393_theta ___393_theta $tmp237 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:54
#   float x = radiance[1] * sky_perez_function(config_y, theta, gamma);
	compref		$tmp238 radiance $const11 	%line{54} %argrw{"wrr"}
	functioncall	$const56 367 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:27
#   float ctheta = cos(theta);
	cos		___392_ctheta ___393_theta 	%line{27} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:28
#   float cgamma = cos(gamma);
	cos		___392_cgamma ___393_gamma 	%line{28} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:30
#   return (1.0 + lam[0] * exp(lam[1] / ctheta)) *
	aref		$tmp240 config_y $const7 	%line{30} %argrw{"wrr"}
	aref		$tmp242 config_y $const11 	%argrw{"wrr"}
	div		$tmp243 $tmp242 ___392_ctheta 	%argrw{"wrr"}
	exp		$tmp241 $tmp243 	%argrw{"wr"}
	mul		$tmp244 $tmp240 $tmp241 	%argrw{"wrr"}
	add		$tmp245 $const8 $tmp244 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:31
#          (1.0 + lam[2] * exp(lam[3] * gamma) + lam[4] * cgamma * cgamma);
	aref		$tmp246 config_y $const10 	%line{31} %argrw{"wrr"}
	aref		$tmp248 config_y $const17 	%argrw{"wrr"}
	mul		$tmp249 $tmp248 ___393_gamma 	%argrw{"wrr"}
	exp		$tmp247 $tmp249 	%argrw{"wr"}
	mul		$tmp250 $tmp246 $tmp247 	%argrw{"wrr"}
	add		$tmp251 $const8 $tmp250 	%argrw{"wrr"}
	aref		$tmp252 config_y $const18 	%argrw{"wrr"}
	mul		$tmp253 $tmp252 ___392_cgamma 	%argrw{"wrr"}
	mul		$tmp254 $tmp253 ___392_cgamma 	%argrw{"wrr"}
	add		$tmp255 $tmp251 $tmp254 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:30
#   return (1.0 + lam[0] * exp(lam[1] / ctheta)) *
	mul		$tmp239 $tmp245 $tmp255 	%line{30} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:54
#   float x = radiance[1] * sky_perez_function(config_y, theta, gamma);
	mul		___393_x $tmp238 $tmp239 	%line{54} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:55
#   float y = radiance[2] * sky_perez_function(config_z, theta, gamma);
	compref		$tmp256 radiance $const10 	%line{55} %argrw{"wrr"}
	functioncall	$const56 389 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:27
#   float ctheta = cos(theta);
	cos		___392_ctheta ___393_theta 	%line{27} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:28
#   float cgamma = cos(gamma);
	cos		___392_cgamma ___393_gamma 	%line{28} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:30
#   return (1.0 + lam[0] * exp(lam[1] / ctheta)) *
	aref		$tmp258 config_z $const7 	%line{30} %argrw{"wrr"}
	aref		$tmp260 config_z $const11 	%argrw{"wrr"}
	div		$tmp261 $tmp260 ___392_ctheta 	%argrw{"wrr"}
	exp		$tmp259 $tmp261 	%argrw{"wr"}
	mul		$tmp262 $tmp258 $tmp259 	%argrw{"wrr"}
	add		$tmp263 $const8 $tmp262 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:31
#          (1.0 + lam[2] * exp(lam[3] * gamma) + lam[4] * cgamma * cgamma);
	aref		$tmp264 config_z $const10 	%line{31} %argrw{"wrr"}
	aref		$tmp266 config_z $const17 	%argrw{"wrr"}
	mul		$tmp267 $tmp266 ___393_gamma 	%argrw{"wrr"}
	exp		$tmp265 $tmp267 	%argrw{"wr"}
	mul		$tmp268 $tmp264 $tmp265 	%argrw{"wrr"}
	add		$tmp269 $const8 $tmp268 	%argrw{"wrr"}
	aref		$tmp270 config_z $const18 	%argrw{"wrr"}
	mul		$tmp271 $tmp270 ___392_cgamma 	%argrw{"wrr"}
	mul		$tmp272 $tmp271 ___392_cgamma 	%argrw{"wrr"}
	add		$tmp273 $tmp269 $tmp272 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:30
#   return (1.0 + lam[0] * exp(lam[1] / ctheta)) *
	mul		$tmp257 $tmp263 $tmp273 	%line{30} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:55
#   float y = radiance[2] * sky_perez_function(config_z, theta, gamma);
	mul		___393_y $tmp256 $tmp257 	%line{55} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:56
#   float Y = radiance[0] * sky_perez_function(config_x, theta, gamma);
	compref		$tmp274 radiance $const7 	%line{56} %argrw{"wrr"}
	functioncall	$const56 411 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:27
#   float ctheta = cos(theta);
	cos		___392_ctheta ___393_theta 	%line{27} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:28
#   float cgamma = cos(gamma);
	cos		___392_cgamma ___393_gamma 	%line{28} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:30
#   return (1.0 + lam[0] * exp(lam[1] / ctheta)) *
	aref		$tmp276 config_x $const7 	%line{30} %argrw{"wrr"}
	aref		$tmp278 config_x $const11 	%argrw{"wrr"}
	div		$tmp279 $tmp278 ___392_ctheta 	%argrw{"wrr"}
	exp		$tmp277 $tmp279 	%argrw{"wr"}
	mul		$tmp280 $tmp276 $tmp277 	%argrw{"wrr"}
	add		$tmp281 $const8 $tmp280 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:31
#          (1.0 + lam[2] * exp(lam[3] * gamma) + lam[4] * cgamma * cgamma);
	aref		$tmp282 config_x $const10 	%line{31} %argrw{"wrr"}
	aref		$tmp284 config_x $const17 	%argrw{"wrr"}
	mul		$tmp285 $tmp284 ___393_gamma 	%argrw{"wrr"}
	exp		$tmp283 $tmp285 	%argrw{"wr"}
	mul		$tmp286 $tmp282 $tmp283 	%argrw{"wrr"}
	add		$tmp287 $const8 $tmp286 	%argrw{"wrr"}
	aref		$tmp288 config_x $const18 	%argrw{"wrr"}
	mul		$tmp289 $tmp288 ___392_cgamma 	%argrw{"wrr"}
	mul		$tmp290 $tmp289 ___392_cgamma 	%argrw{"wrr"}
	add		$tmp291 $tmp287 $tmp290 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:30
#   return (1.0 + lam[0] * exp(lam[1] / ctheta)) *
	mul		$tmp275 $tmp281 $tmp291 	%line{30} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:56
#   float Y = radiance[0] * sky_perez_function(config_x, theta, gamma);
	mul		___393_Y $tmp274 $tmp275 	%line{56} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:59
#   color xyz = xyY_to_xyz(x, y, Y);
	functioncall	$const57 431 	%line{59} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:50
#   if (y != 0.0)
	neq		$tmp292 ___393_y $const12 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{50} %argrw{"wrr"}
	if		$tmp292 417 418 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:51
#     X = (x / y) * Y;
	div		$tmp293 ___393_x ___393_y 	%line{51} %argrw{"wrr"}
	mul		___335_X $tmp293 ___393_Y 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:53
#     X = 0.0;
	assign		___335_X $const12 	%line{53} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:55
#   if (y != 0.0 && Y != 0.0)
	neq		$tmp294 ___393_y $const12 	%line{55} %argrw{"wrr"}
	neq		$tmp295 $tmp294 $const7 	%argrw{"wrr"}
	if		$tmp295 424 424 	%argrw{"r"}
	neq		$tmp296 ___393_Y $const12 	%argrw{"wrr"}
	neq		$tmp297 $tmp296 $const7 	%argrw{"wrr"}
	assign		$tmp295 $tmp297 	%argrw{"wr"}
	if		$tmp295 429 430 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:56
#     Z = ((1.0 - x - y) / y) * Y;
	sub		$tmp298 $const8 ___393_x 	%line{56} %argrw{"wrr"}
	sub		$tmp299 $tmp298 ___393_y 	%argrw{"wrr"}
	div		$tmp300 $tmp299 ___393_y 	%argrw{"wrr"}
	mul		___335_Z $tmp300 ___393_Y 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:58
#     Z = 0.0;
	assign		___335_Z $const12 	%line{58} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:60
#   return color(X, Y, Z);
	color		___393_xyz ___335_X ___393_Y ___335_Z 	%line{60} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl:60
#   return xyz_to_rgb(xyz[0], xyz[1], xyz[2]);
	compref		$tmp301 ___393_xyz $const7 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_sky_texture.osl"} %argrw{"wrr"}
	compref		$tmp302 ___393_xyz $const11 	%argrw{"wrr"}
	compref		$tmp303 ___393_xyz $const10 	%argrw{"wrr"}
	functioncall	$const35 451 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:65
#   return color(3.240479 * x + -1.537150 * y + -0.498535 * z,
	mul		$tmp304 $const36 $tmp301 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{65} %argrw{"wrr"}
	mul		$tmp305 $const37 $tmp302 	%argrw{"wrr"}
	add		$tmp306 $tmp304 $tmp305 	%argrw{"wrr"}
	mul		$tmp307 $const38 $tmp303 	%argrw{"wrr"}
	add		$tmp308 $tmp306 $tmp307 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:66
#                -0.969256 * x + 1.875991 * y + 0.041556 * z,
	mul		$tmp309 $const39 $tmp301 	%line{66} %argrw{"wrr"}
	mul		$tmp310 $const40 $tmp302 	%argrw{"wrr"}
	add		$tmp311 $tmp309 $tmp310 	%argrw{"wrr"}
	mul		$tmp312 $const41 $tmp303 	%argrw{"wrr"}
	add		$tmp313 $tmp311 $tmp312 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:67
#                0.055648 * x + -0.204043 * y + 1.057311 * z);
	mul		$tmp314 $const42 $tmp301 	%line{67} %argrw{"wrr"}
	mul		$tmp315 $const43 $tmp302 	%argrw{"wrr"}
	add		$tmp316 $tmp314 $tmp315 	%argrw{"wrr"}
	mul		$tmp317 $const44 $tmp303 	%argrw{"wrr"}
	add		$tmp318 $tmp316 $tmp317 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:65
#   return color(3.240479 * x + -1.537150 * y + -0.498535 * z,
	color		Color $tmp308 $tmp313 $tmp318 	%line{65} %argrw{"wrrr"}
	end
