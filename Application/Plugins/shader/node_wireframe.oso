OpenShadingLanguage 1.00
# Compiled by oslc 1.13.7.0
# options: -q -O2 -IC:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders -IC:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders -o C:/Users/blender/git/blender-vdev/build_release/intern/cycles/kernel/osl/shaders/node_wireframe.oso
shader node_wireframe
param	string	bump_offset	"center"		%read{75,158} %write{2147483647,-1}
param	int	use_pixel_size	0		%read{33,195} %write{2147483647,-1}
param	float	Size	0.00999999978		%read{48,210} %write{2147483647,-1}
oparam	float	Fac	0		%read{154,240} %write{3,240}
global	point	P	%read{34,234} %write{78,161} %derivs
global	vector	I	%read{36,205} %write{2147483647,-1}
local	int	___344_np	%read{23,234} %write{5,184}
local	point[64]	___344_p	%read{53,234} %write{10,188}
local	float	___344_pixelWidth	%read{49,234} %write{6,212}
local	float	___347_pixelWidthX	%read{46,208} %write{39,201}
local	float	___347_pixelWidthY	%read{46,208} %write{45,207}
local	int	___348_i	%read{53,234} %write{52,234}
local	int	___349_i2	%read{53,234} %write{53,234}
local	vector	___349_dir	%read{53,234} %write{53,234}
local	vector	___349_edge	%read{53,234} %write{53,234}
local	vector	___349_crs	%read{53,234} %write{53,234}
local	point	___374_dx	%read{78,155} %write{77,77} %derivs
local	point	___375_dy	%read{161,238} %write{160,160} %derivs
const	string	$const1	"triangles"		%read{7,180} %write{2147483647,-1}
const	string	$const2	"wireframe"		%read{0,162} %write{2147483647,-1}
temp	int	$tmp1	%read{2,2} %write{1,1}
const	string	$const3	"path:diffuse"		%read{1,163} %write{2147483647,-1}
const	float	$const4	0		%read{3,193} %write{2147483647,-1}
const	int	$const5	0		%read{5,235} %write{2147483647,-1}
const	int	$const6	1		%read{6,234} %write{2147483647,-1}
temp	int	$tmp2	%read{8,8} %write{7,7}
const	int	$const7	3		%read{9,185} %write{2147483647,-1}
temp	int	$tmp3	%read{11,11} %write{10,10}
const	string	$const8	"geom:trianglevertices"		%read{10,172} %write{2147483647,-1}
temp	int	$tmp4	%read{12,12} %write{11,11}
const	string	$const9	"polygons"		%read{15,177} %write{2147483647,-1}
temp	int	$tmp5	%read{16,16} %write{15,15}
temp	int	$tmp6	%read{17,21} %write{16,20}
const	string	$const10	"patches"		%read{18,180} %write{2147483647,-1}
temp	int	$tmp7	%read{19,19} %write{18,18}
temp	int	$tmp8	%read{20,20} %write{19,19}
temp	int	$tmp9	%read{2147483647,-1} %write{22,22}
const	string	$const11	"geom:numpolyvertices"		%read{22,184} %write{2147483647,-1}
temp	int	$tmp10	%read{24,24} %write{23,23}
temp	int	$tmp11	%read{25,30} %write{24,29}
temp	int	$tmp12	%read{27,27} %write{26,26}
const	string	$const12	"geom:polyvertices"		%read{26,188} %write{2147483647,-1}
temp	int	$tmp13	%read{28,28} %write{27,27}
temp	int	$tmp14	%read{29,29} %write{28,28}
temp	vector	$tmp15	%read{38,38} %write{34,34}
temp	float	$tmp16	%read{37,37} %write{36,36}
temp	vector	$tmp17	%read{36,36} %write{35,35}
temp	vector	$tmp18	%read{38,38} %write{37,37}
temp	vector	$tmp19	%read{39,39} %write{38,38}
temp	vector	$tmp20	%read{44,44} %write{40,40}
temp	float	$tmp21	%read{43,43} %write{42,42}
temp	vector	$tmp22	%read{42,42} %write{41,41}
temp	vector	$tmp23	%read{44,44} %write{43,43}
temp	vector	$tmp24	%read{45,45} %write{44,44}
temp	float	$tmp25	%read{47,47} %write{46,46}
const	float	$const14	2		%read{47,209} %write{2147483647,-1}
const	float	$const15	0.5		%read{48,210} %write{2147483647,-1}
temp	float	$tmp26	%read{49,49} %write{48,48}
temp	int	$tmp27	%read{53,72} %write{53,72}
temp	int	$tmp28	%read{51,72} %write{52,72}
temp	point	$tmp29	%read{53,72} %write{53,72}
temp	point	$tmp30	%read{53,72} %write{53,72}
temp	point	$tmp31	%read{53,72} %write{53,72}
temp	float	$tmp32	%read{53,72} %write{53,72}
temp	float	$tmp33	%read{53,72} %write{53,72}
temp	float	$tmp34	%read{53,72} %write{53,72}
temp	int	$tmp35	%read{53,72} %write{53,72}
temp	int	$tmp36	%read{2147483647,-1} %write{53,72}
const	string	$const16	"dx"		%read{75,75} %write{2147483647,-1}
temp	int	$tmp37	%read{76,76} %write{75,75}
temp	float	$tmp38	%read{154,154} %write{82,152}
temp	int	$tmp39	%read{81,81} %write{80,80}
temp	int	$tmp40	%read{87,87} %write{86,86}
temp	int	$tmp41	%read{90,90} %write{89,89}
temp	int	$tmp42	%read{91,91} %write{90,90}
temp	int	$tmp43	%read{95,95} %write{94,94}
temp	int	$tmp44	%read{96,100} %write{95,99}
temp	int	$tmp45	%read{98,98} %write{97,97}
temp	int	$tmp46	%read{99,99} %write{98,98}
temp	int	$tmp47	%read{2147483647,-1} %write{101,101}
temp	int	$tmp48	%read{103,103} %write{102,102}
temp	int	$tmp49	%read{104,109} %write{103,108}
temp	int	$tmp50	%read{106,106} %write{105,105}
temp	int	$tmp51	%read{107,107} %write{106,106}
temp	int	$tmp52	%read{108,108} %write{107,107}
temp	vector	$tmp53	%read{117,117} %write{113,113}
temp	float	$tmp54	%read{116,116} %write{115,115}
temp	vector	$tmp55	%read{115,115} %write{114,114}
temp	vector	$tmp56	%read{117,117} %write{116,116}
temp	vector	$tmp57	%read{118,118} %write{117,117}
temp	vector	$tmp58	%read{123,123} %write{119,119}
temp	float	$tmp59	%read{122,122} %write{121,121}
temp	vector	$tmp60	%read{121,121} %write{120,120}
temp	vector	$tmp61	%read{123,123} %write{122,122}
temp	vector	$tmp62	%read{124,124} %write{123,123}
temp	float	$tmp63	%read{126,126} %write{125,125}
temp	float	$tmp64	%read{128,128} %write{127,127}
temp	int	$tmp65	%read{132,151} %write{132,151}
temp	int	$tmp66	%read{130,151} %write{131,151}
temp	point	$tmp67	%read{132,151} %write{132,151}
temp	point	$tmp68	%read{132,151} %write{132,151}
temp	point	$tmp69	%read{132,151} %write{132,151}
temp	float	$tmp70	%read{132,151} %write{132,151}
temp	float	$tmp71	%read{132,151} %write{132,151}
temp	float	$tmp72	%read{132,151} %write{132,151}
temp	int	$tmp73	%read{132,151} %write{132,151}
temp	int	$tmp74	%read{2147483647,-1} %write{132,151}
temp	float	$tmp75	%read{156,156} %write{154,154}
temp	float	$tmp76	%read{156,156} %write{155,155}
temp	float	$tmp77	%read{157,157} %write{156,156}
const	string	$const17	"dy"		%read{158,158} %write{2147483647,-1}
temp	int	$tmp78	%read{159,159} %write{158,158}
temp	float	$tmp79	%read{237,237} %write{165,235}
temp	int	$tmp80	%read{164,164} %write{163,163}
temp	int	$tmp81	%read{170,170} %write{169,169}
temp	int	$tmp82	%read{173,173} %write{172,172}
temp	int	$tmp83	%read{174,174} %write{173,173}
temp	int	$tmp84	%read{178,178} %write{177,177}
temp	int	$tmp85	%read{179,183} %write{178,182}
temp	int	$tmp86	%read{181,181} %write{180,180}
temp	int	$tmp87	%read{182,182} %write{181,181}
temp	int	$tmp88	%read{2147483647,-1} %write{184,184}
temp	int	$tmp89	%read{186,186} %write{185,185}
temp	int	$tmp90	%read{187,192} %write{186,191}
temp	int	$tmp91	%read{189,189} %write{188,188}
temp	int	$tmp92	%read{190,190} %write{189,189}
temp	int	$tmp93	%read{191,191} %write{190,190}
temp	vector	$tmp94	%read{200,200} %write{196,196}
temp	float	$tmp95	%read{199,199} %write{198,198}
temp	vector	$tmp96	%read{198,198} %write{197,197}
temp	vector	$tmp97	%read{200,200} %write{199,199}
temp	vector	$tmp98	%read{201,201} %write{200,200}
temp	vector	$tmp99	%read{206,206} %write{202,202}
temp	float	$tmp100	%read{205,205} %write{204,204}
temp	vector	$tmp101	%read{204,204} %write{203,203}
temp	vector	$tmp102	%read{206,206} %write{205,205}
temp	vector	$tmp103	%read{207,207} %write{206,206}
temp	float	$tmp104	%read{209,209} %write{208,208}
temp	float	$tmp105	%read{211,211} %write{210,210}
temp	int	$tmp106	%read{215,234} %write{215,234}
temp	int	$tmp107	%read{213,234} %write{214,234}
temp	point	$tmp108	%read{215,234} %write{215,234}
temp	point	$tmp109	%read{215,234} %write{215,234}
temp	point	$tmp110	%read{215,234} %write{215,234}
temp	float	$tmp111	%read{215,234} %write{215,234}
temp	float	$tmp112	%read{215,234} %write{215,234}
temp	float	$tmp113	%read{215,234} %write{215,234}
temp	int	$tmp114	%read{215,234} %write{215,234}
temp	int	$tmp115	%read{2147483647,-1} %write{215,234}
temp	float	$tmp116	%read{239,239} %write{237,237}
temp	float	$tmp117	%read{239,239} %write{238,238}
temp	float	$tmp118	%read{240,240} %write{239,239}
code ___main___
# C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl:13
#   Fac = wireframe("triangles", Size, use_pixel_size);
	functioncall	$const2 75 	%filename{"C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl"} %line{13} %argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:16
#    if (raytype("path:diffuse")) return 0.0;
	raytype		$tmp1 $const3 	%filename{"C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h"} %line{16} %argrw{"wr"}
	if		$tmp1 5 5 	%argrw{"r"}
	assign		Fac $const4 	%argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:18
#    int np = 0;
	assign		___344_np $const5 	%line{18} %argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:20
#    float pixelWidth = 1;
	assign		___344_pixelWidth $const6 	%line{20} %argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:22
#    if (edge_type == "triangles")
	eq		$tmp2 $const1 $const1 	%line{22} %argrw{"wrr"}
	if		$tmp2 15 33 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:24
#       np = 3;
	assign		___344_np $const7 	%line{24} %argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:25
#       if (!getattribute("geom:trianglevertices", p))
	getattribute	$tmp3 $const8 ___344_p 	%line{25} %argrw{"wrw"}
	eq		$tmp4 $tmp3 $const5 	%argrw{"wrr"}
	if		$tmp4 15 15 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:26
#          return 0.0;
	assign		Fac $const4 	%line{26} %argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:28
#    else if (edge_type == "polygons" || edge_type == "patches")
	eq		$tmp5 $const1 $const9 	%line{28} %argrw{"wrr"}
	neq		$tmp6 $tmp5 $const5 	%argrw{"wrr"}
	if		$tmp6 18 21 	%argrw{"r"}
	eq		$tmp7 $const1 $const10 	%argrw{"wrr"}
	neq		$tmp8 $tmp7 $const5 	%argrw{"wrr"}
	assign		$tmp6 $tmp8 	%argrw{"wr"}
	if		$tmp6 33 33 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:30
#       getattribute("geom:numpolyvertices", np);
	getattribute	$tmp9 $const11 ___344_np 	%line{30} %argrw{"wrw"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:31
#       if (np < 3 || !getattribute("geom:polyvertices", p))
	lt		$tmp10 ___344_np $const7 	%line{31} %argrw{"wrr"}
	neq		$tmp11 $tmp10 $const5 	%argrw{"wrr"}
	if		$tmp11 26 30 	%argrw{"r"}
	getattribute	$tmp12 $const12 ___344_p 	%argrw{"wrw"}
	eq		$tmp13 $tmp12 $const5 	%argrw{"wrr"}
	neq		$tmp14 $tmp13 $const5 	%argrw{"wrr"}
	assign		$tmp11 $tmp14 	%argrw{"wr"}
	if		$tmp11 33 33 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:32
#          return 0.0;
	assign		Fac $const4 	%line{32} %argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:35
#    if (raster)
	if		use_pixel_size 48 48 	%line{35} %argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:39
#       float pixelWidthX = length(Dx(P) - dot(Dx(P), I) * I);
	Dx		$tmp15 P 	%line{39} %argrw{"wr"} %argderivs{1}
	Dx		$tmp17 P 	%argrw{"wr"} %argderivs{1}
	dot		$tmp16 $tmp17 I 	%argrw{"wrr"}
	mul		$tmp18 $tmp16 I 	%argrw{"wrr"}
	sub		$tmp19 $tmp15 $tmp18 	%argrw{"wrr"}
	length		___347_pixelWidthX $tmp19 	%argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:40
#       float pixelWidthY = length(Dy(P) - dot(Dy(P), I) * I);
	Dy		$tmp20 P 	%line{40} %argrw{"wr"} %argderivs{1}
	Dy		$tmp22 P 	%argrw{"wr"} %argderivs{1}
	dot		$tmp21 $tmp22 I 	%argrw{"wrr"}
	mul		$tmp23 $tmp21 I 	%argrw{"wrr"}
	sub		$tmp24 $tmp20 $tmp23 	%argrw{"wrr"}
	length		___347_pixelWidthY $tmp24 	%argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:42
#       pixelWidth = (pixelWidthX + pixelWidthY) / 2;
	add		$tmp25 ___347_pixelWidthX ___347_pixelWidthY 	%line{42} %argrw{"wrr"}
	div		___344_pixelWidth $tmp25 $const14 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:47
#    pixelWidth *= 0.5 * line_width;
	mul		$tmp26 $const15 Size 	%line{47} %argrw{"wrr"}
	mul		___344_pixelWidth ___344_pixelWidth $tmp26 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:48
#    pixelWidth *= pixelWidth;
	mul		___344_pixelWidth ___344_pixelWidth ___344_pixelWidth 	%line{48} %argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:49
#    for (int i = 0; i < np; i++)
	for		$tmp28 53 55 71 73 	%line{49} %argrw{"r"}
	assign		___348_i $const5 	%argrw{"wr"}
	lt		$tmp27 ___348_i ___344_np 	%argrw{"wrr"}
	neq		$tmp28 $tmp27 $const5 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:51
#       int i2 = i ? i - 1 : np - 1;
	if		___348_i 57 58 	%line{51} %argrw{"r"}
	sub		___349_i2 ___348_i $const6 	%argrw{"wrr"}
	sub		___349_i2 ___344_np $const6 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:52
#       vector dir = P - p[i];
	aref		$tmp29 ___344_p ___348_i 	%line{52} %argrw{"wrr"}
	sub		___349_dir P $tmp29 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:53
#       vector edge = p[i] - p[i2];
	aref		$tmp30 ___344_p ___348_i 	%line{53} %argrw{"wrr"}
	aref		$tmp31 ___344_p ___349_i2 	%argrw{"wrr"}
	sub		___349_edge $tmp30 $tmp31 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:54
#       vector crs = cross(edge, dir);
	cross		___349_crs ___349_edge ___349_dir 	%line{54} %argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:58
#       if (dot(crs, crs) < (dot(edge, edge) * pixelWidth))
	dot		$tmp32 ___349_crs ___349_crs 	%line{58} %argrw{"wrr"}
	dot		$tmp33 ___349_edge ___349_edge 	%argrw{"wrr"}
	mul		$tmp34 $tmp33 ___344_pixelWidth 	%argrw{"wrr"}
	lt		$tmp35 $tmp32 $tmp34 	%argrw{"wrr"}
	if		$tmp35 71 71 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:59
#          return 1;
	assign		Fac $const6 	%line{59} %argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:49
#    for (int i = 0; i < np; i++)
	assign		$tmp36 ___348_i 	%line{49} %argrw{"wr"}
	add		___348_i ___348_i $const6 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:61
#    return 0;
	assign		Fac $const5 	%line{61} %argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl:18
#   if (bump_offset == "dx") {
	eq		$tmp37 bump_offset $const16 	%filename{"C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl"} %line{18} %argrw{"wrr"}
	if		$tmp37 158 241 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl:19
#     point dx = Dx(P);
	Dx		___374_dx P 	%line{19} %argrw{"wr"} %argderivs{1}
# C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl:20
#     P -= dx;
	sub		P P ___374_dx 	%line{20} %argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl:21
#     Fac += (Fac - wireframe("triangles", Size, use_pixel_size)) / length(dx);
	functioncall	$const2 154 	%line{21} %argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:16
#    if (raytype("path:diffuse")) return 0.0;
	raytype		$tmp39 $const3 	%filename{"C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h"} %line{16} %argrw{"wr"}
	if		$tmp39 84 84 	%argrw{"r"}
	assign		$tmp38 $const4 	%argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:18
#    int np = 0;
	assign		___344_np $const5 	%line{18} %argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:20
#    float pixelWidth = 1;
	assign		___344_pixelWidth $const6 	%line{20} %argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:22
#    if (edge_type == "triangles")
	eq		$tmp40 $const1 $const1 	%line{22} %argrw{"wrr"}
	if		$tmp40 94 112 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:24
#       np = 3;
	assign		___344_np $const7 	%line{24} %argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:25
#       if (!getattribute("geom:trianglevertices", p))
	getattribute	$tmp41 $const8 ___344_p 	%line{25} %argrw{"wrw"}
	eq		$tmp42 $tmp41 $const5 	%argrw{"wrr"}
	if		$tmp42 94 94 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:26
#          return 0.0;
	assign		$tmp38 $const4 	%line{26} %argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:28
#    else if (edge_type == "polygons" || edge_type == "patches")
	eq		$tmp43 $const1 $const9 	%line{28} %argrw{"wrr"}
	neq		$tmp44 $tmp43 $const5 	%argrw{"wrr"}
	if		$tmp44 97 100 	%argrw{"r"}
	eq		$tmp45 $const1 $const10 	%argrw{"wrr"}
	neq		$tmp46 $tmp45 $const5 	%argrw{"wrr"}
	assign		$tmp44 $tmp46 	%argrw{"wr"}
	if		$tmp44 112 112 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:30
#       getattribute("geom:numpolyvertices", np);
	getattribute	$tmp47 $const11 ___344_np 	%line{30} %argrw{"wrw"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:31
#       if (np < 3 || !getattribute("geom:polyvertices", p))
	lt		$tmp48 ___344_np $const7 	%line{31} %argrw{"wrr"}
	neq		$tmp49 $tmp48 $const5 	%argrw{"wrr"}
	if		$tmp49 105 109 	%argrw{"r"}
	getattribute	$tmp50 $const12 ___344_p 	%argrw{"wrw"}
	eq		$tmp51 $tmp50 $const5 	%argrw{"wrr"}
	neq		$tmp52 $tmp51 $const5 	%argrw{"wrr"}
	assign		$tmp49 $tmp52 	%argrw{"wr"}
	if		$tmp49 112 112 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:32
#          return 0.0;
	assign		$tmp38 $const4 	%line{32} %argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:35
#    if (raster)
	if		use_pixel_size 127 127 	%line{35} %argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:39
#       float pixelWidthX = length(Dx(P) - dot(Dx(P), I) * I);
	Dx		$tmp53 P 	%line{39} %argrw{"wr"} %argderivs{1}
	Dx		$tmp55 P 	%argrw{"wr"} %argderivs{1}
	dot		$tmp54 $tmp55 I 	%argrw{"wrr"}
	mul		$tmp56 $tmp54 I 	%argrw{"wrr"}
	sub		$tmp57 $tmp53 $tmp56 	%argrw{"wrr"}
	length		___347_pixelWidthX $tmp57 	%argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:40
#       float pixelWidthY = length(Dy(P) - dot(Dy(P), I) * I);
	Dy		$tmp58 P 	%line{40} %argrw{"wr"} %argderivs{1}
	Dy		$tmp60 P 	%argrw{"wr"} %argderivs{1}
	dot		$tmp59 $tmp60 I 	%argrw{"wrr"}
	mul		$tmp61 $tmp59 I 	%argrw{"wrr"}
	sub		$tmp62 $tmp58 $tmp61 	%argrw{"wrr"}
	length		___347_pixelWidthY $tmp62 	%argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:42
#       pixelWidth = (pixelWidthX + pixelWidthY) / 2;
	add		$tmp63 ___347_pixelWidthX ___347_pixelWidthY 	%line{42} %argrw{"wrr"}
	div		___344_pixelWidth $tmp63 $const14 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:47
#    pixelWidth *= 0.5 * line_width;
	mul		$tmp64 $const15 Size 	%line{47} %argrw{"wrr"}
	mul		___344_pixelWidth ___344_pixelWidth $tmp64 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:48
#    pixelWidth *= pixelWidth;
	mul		___344_pixelWidth ___344_pixelWidth ___344_pixelWidth 	%line{48} %argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:49
#    for (int i = 0; i < np; i++)
	for		$tmp66 132 134 150 152 	%line{49} %argrw{"r"}
	assign		___348_i $const5 	%argrw{"wr"}
	lt		$tmp65 ___348_i ___344_np 	%argrw{"wrr"}
	neq		$tmp66 $tmp65 $const5 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:51
#       int i2 = i ? i - 1 : np - 1;
	if		___348_i 136 137 	%line{51} %argrw{"r"}
	sub		___349_i2 ___348_i $const6 	%argrw{"wrr"}
	sub		___349_i2 ___344_np $const6 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:52
#       vector dir = P - p[i];
	aref		$tmp67 ___344_p ___348_i 	%line{52} %argrw{"wrr"}
	sub		___349_dir P $tmp67 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:53
#       vector edge = p[i] - p[i2];
	aref		$tmp68 ___344_p ___348_i 	%line{53} %argrw{"wrr"}
	aref		$tmp69 ___344_p ___349_i2 	%argrw{"wrr"}
	sub		___349_edge $tmp68 $tmp69 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:54
#       vector crs = cross(edge, dir);
	cross		___349_crs ___349_edge ___349_dir 	%line{54} %argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:58
#       if (dot(crs, crs) < (dot(edge, edge) * pixelWidth))
	dot		$tmp70 ___349_crs ___349_crs 	%line{58} %argrw{"wrr"}
	dot		$tmp71 ___349_edge ___349_edge 	%argrw{"wrr"}
	mul		$tmp72 $tmp71 ___344_pixelWidth 	%argrw{"wrr"}
	lt		$tmp73 $tmp70 $tmp72 	%argrw{"wrr"}
	if		$tmp73 150 150 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:59
#          return 1;
	assign		$tmp38 $const6 	%line{59} %argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:49
#    for (int i = 0; i < np; i++)
	assign		$tmp74 ___348_i 	%line{49} %argrw{"wr"}
	add		___348_i ___348_i $const6 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:61
#    return 0;
	assign		$tmp38 $const5 	%line{61} %argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl:21
#     Fac += (Fac - wireframe("triangles", Size, use_pixel_size)) / length(dx);
	sub		$tmp75 Fac $tmp38 	%filename{"C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl"} %line{21} %argrw{"wrr"}
	length		$tmp76 ___374_dx 	%argrw{"wr"}
	div		$tmp77 $tmp75 $tmp76 	%argrw{"wrr"}
	add		Fac Fac $tmp77 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl:23
#   else if (bump_offset == "dy") {
	eq		$tmp78 bump_offset $const17 	%line{23} %argrw{"wrr"}
	if		$tmp78 241 241 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl:24
#     point dy = Dy(P);
	Dy		___375_dy P 	%line{24} %argrw{"wr"} %argderivs{1}
# C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl:25
#     P -= dy;
	sub		P P ___375_dy 	%line{25} %argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl:26
#     Fac += (Fac - wireframe("triangles", Size, use_pixel_size)) / length(dy);
	functioncall	$const2 237 	%line{26} %argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:16
#    if (raytype("path:diffuse")) return 0.0;
	raytype		$tmp80 $const3 	%filename{"C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h"} %line{16} %argrw{"wr"}
	if		$tmp80 167 167 	%argrw{"r"}
	assign		$tmp79 $const4 	%argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:18
#    int np = 0;
	assign		___344_np $const5 	%line{18} %argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:20
#    float pixelWidth = 1;
	assign		___344_pixelWidth $const6 	%line{20} %argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:22
#    if (edge_type == "triangles")
	eq		$tmp81 $const1 $const1 	%line{22} %argrw{"wrr"}
	if		$tmp81 177 195 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:24
#       np = 3;
	assign		___344_np $const7 	%line{24} %argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:25
#       if (!getattribute("geom:trianglevertices", p))
	getattribute	$tmp82 $const8 ___344_p 	%line{25} %argrw{"wrw"}
	eq		$tmp83 $tmp82 $const5 	%argrw{"wrr"}
	if		$tmp83 177 177 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:26
#          return 0.0;
	assign		$tmp79 $const4 	%line{26} %argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:28
#    else if (edge_type == "polygons" || edge_type == "patches")
	eq		$tmp84 $const1 $const9 	%line{28} %argrw{"wrr"}
	neq		$tmp85 $tmp84 $const5 	%argrw{"wrr"}
	if		$tmp85 180 183 	%argrw{"r"}
	eq		$tmp86 $const1 $const10 	%argrw{"wrr"}
	neq		$tmp87 $tmp86 $const5 	%argrw{"wrr"}
	assign		$tmp85 $tmp87 	%argrw{"wr"}
	if		$tmp85 195 195 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:30
#       getattribute("geom:numpolyvertices", np);
	getattribute	$tmp88 $const11 ___344_np 	%line{30} %argrw{"wrw"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:31
#       if (np < 3 || !getattribute("geom:polyvertices", p))
	lt		$tmp89 ___344_np $const7 	%line{31} %argrw{"wrr"}
	neq		$tmp90 $tmp89 $const5 	%argrw{"wrr"}
	if		$tmp90 188 192 	%argrw{"r"}
	getattribute	$tmp91 $const12 ___344_p 	%argrw{"wrw"}
	eq		$tmp92 $tmp91 $const5 	%argrw{"wrr"}
	neq		$tmp93 $tmp92 $const5 	%argrw{"wrr"}
	assign		$tmp90 $tmp93 	%argrw{"wr"}
	if		$tmp90 195 195 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:32
#          return 0.0;
	assign		$tmp79 $const4 	%line{32} %argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:35
#    if (raster)
	if		use_pixel_size 210 210 	%line{35} %argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:39
#       float pixelWidthX = length(Dx(P) - dot(Dx(P), I) * I);
	Dx		$tmp94 P 	%line{39} %argrw{"wr"} %argderivs{1}
	Dx		$tmp96 P 	%argrw{"wr"} %argderivs{1}
	dot		$tmp95 $tmp96 I 	%argrw{"wrr"}
	mul		$tmp97 $tmp95 I 	%argrw{"wrr"}
	sub		$tmp98 $tmp94 $tmp97 	%argrw{"wrr"}
	length		___347_pixelWidthX $tmp98 	%argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:40
#       float pixelWidthY = length(Dy(P) - dot(Dy(P), I) * I);
	Dy		$tmp99 P 	%line{40} %argrw{"wr"} %argderivs{1}
	Dy		$tmp101 P 	%argrw{"wr"} %argderivs{1}
	dot		$tmp100 $tmp101 I 	%argrw{"wrr"}
	mul		$tmp102 $tmp100 I 	%argrw{"wrr"}
	sub		$tmp103 $tmp99 $tmp102 	%argrw{"wrr"}
	length		___347_pixelWidthY $tmp103 	%argrw{"wr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:42
#       pixelWidth = (pixelWidthX + pixelWidthY) / 2;
	add		$tmp104 ___347_pixelWidthX ___347_pixelWidthY 	%line{42} %argrw{"wrr"}
	div		___344_pixelWidth $tmp104 $const14 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:47
#    pixelWidth *= 0.5 * line_width;
	mul		$tmp105 $const15 Size 	%line{47} %argrw{"wrr"}
	mul		___344_pixelWidth ___344_pixelWidth $tmp105 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:48
#    pixelWidth *= pixelWidth;
	mul		___344_pixelWidth ___344_pixelWidth ___344_pixelWidth 	%line{48} %argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:49
#    for (int i = 0; i < np; i++)
	for		$tmp107 215 217 233 235 	%line{49} %argrw{"r"}
	assign		___348_i $const5 	%argrw{"wr"}
	lt		$tmp106 ___348_i ___344_np 	%argrw{"wrr"}
	neq		$tmp107 $tmp106 $const5 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:51
#       int i2 = i ? i - 1 : np - 1;
	if		___348_i 219 220 	%line{51} %argrw{"r"}
	sub		___349_i2 ___348_i $const6 	%argrw{"wrr"}
	sub		___349_i2 ___344_np $const6 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:52
#       vector dir = P - p[i];
	aref		$tmp108 ___344_p ___348_i 	%line{52} %argrw{"wrr"}
	sub		___349_dir P $tmp108 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:53
#       vector edge = p[i] - p[i2];
	aref		$tmp109 ___344_p ___348_i 	%line{53} %argrw{"wrr"}
	aref		$tmp110 ___344_p ___349_i2 	%argrw{"wrr"}
	sub		___349_edge $tmp109 $tmp110 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:54
#       vector crs = cross(edge, dir);
	cross		___349_crs ___349_edge ___349_dir 	%line{54} %argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:58
#       if (dot(crs, crs) < (dot(edge, edge) * pixelWidth))
	dot		$tmp111 ___349_crs ___349_crs 	%line{58} %argrw{"wrr"}
	dot		$tmp112 ___349_edge ___349_edge 	%argrw{"wrr"}
	mul		$tmp113 $tmp112 ___344_pixelWidth 	%argrw{"wrr"}
	lt		$tmp114 $tmp111 $tmp113 	%argrw{"wrr"}
	if		$tmp114 233 233 	%argrw{"r"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:59
#          return 1;
	assign		$tmp79 $const6 	%line{59} %argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:49
#    for (int i = 0; i < np; i++)
	assign		$tmp115 ___348_i 	%line{49} %argrw{"wr"}
	add		___348_i ___348_i $const6 	%argrw{"wrr"}
# C:/Users/blender/git/blender-vdev/blender.git/lib/windows_x64/osl/share/OSL/shaders\\oslutil.h:61
#    return 0;
	assign		$tmp79 $const5 	%line{61} %argrw{"wr"}
	return
# C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl:26
#     Fac += (Fac - wireframe("triangles", Size, use_pixel_size)) / length(dy);
	sub		$tmp116 Fac $tmp79 	%filename{"C:/Users/blender/git/blender-vdev/blender.git/intern/cycles/kernel/osl/shaders/node_wireframe.osl"} %line{26} %argrw{"wrr"}
	length		$tmp117 ___375_dy 	%argrw{"wr"}
	div		$tmp118 $tmp116 $tmp117 	%argrw{"wrr"}
	add		Fac Fac $tmp118 	%argrw{"wrr"}
	end
