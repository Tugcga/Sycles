OpenShadingLanguage 1.00
# Compiled by oslc 1.11.17
# options: -q -O2 -IF:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders -IF:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders -o F:/Repositories/blenderRepo/build_windows_Full_x64_vc16_Release/intern/cycles/kernel/osl/shaders/node_mix.oso
shader node_mix
param	string	mix_type	"mix"		%read{3,855} %write{2147483647,-1}
param	int	use_clamp	0		%read{911,911} %write{2147483647,-1}
param	float	Fac	0.5		%read{1,1} %write{2147483647,-1}
param	color	Color1	0 0 0		%read{6,903} %write{2147483647,-1}
param	color	Color2	0 0 0		%read{6,904} %write{2147483647,-1}
oparam	color	Color	0 0 0		%read{913,924} %write{6,929}
local	float	___337_cmax	%read{276,777} %write{270,751}
local	float	___337_cmin	%read{276,757} %write{275,756}
local	float	___337_h	%read{306,791} %write{282,790}
local	float	___337_s	%read{283,791} %write{280,762}
local	float	___337_v	%read{310,791} %write{277,758}
local	float	___337_cdelta	%read{280,769} %write{276,757}
local	color	___337_c	%read{292,785} %write{288,769}
local	float	___342_i	%read{374,831} %write{373,807}
local	float	___342_f	%read{375,815} %write{374,808}
local	float	___342_p	%read{387,834} %write{377,811}
local	float	___342_q	%read{390,834} %write{380,814}
local	float	___342_t	%read{387,833} %write{384,818}
local	float	___342_h	%read{369,808} %write{363,806}
local	float	___342_s	%read{366,816} %write{364,798}
local	float	___342_v	%read{368,834} %write{365,799}
local	color	___342_rgb	%read{401,835} %write{368,834}
local	float	___393_tm	%read{21,21} %write{20,20}
local	float	___394_tm	%read{40,87} %write{31,31}
local	color	___394_outcol	%read{33,93} %write{32,92}
local	float	___396_tm	%read{108,130} %write{102,102}
local	color	___396_outcol	%read{107,137} %write{103,136}
local	color	___400_outcol	%read{158,203} %write{157,202}
local	float	___401_tmp	%read{164,172} %write{163,168}
local	float	___402_tmp	%read{179,187} %write{178,183}
local	float	___403_tmp	%read{194,202} %write{193,198}
local	float	___404_tmp	%read{212,259} %write{211,252}
local	float	___404_tm	%read{211,245} %write{207,207}
local	color	___404_outcol	%read{215,260} %write{208,259}
local	color	___405_outcol	%read{315,403} %write{264,402}
local	color	___405_hsv2	%read{311,360} %write{310,310}
local	color	___406_hsv	%read{363,365} %write{359,361}
local	color	___406_tmp	%read{402,402} %write{401,401}
local	float	___407_tm	%read{505,505} %write{407,407}
local	color	___407_outcol	%read{410,550} %write{408,549}
local	color	___407_hsv	%read{455,513} %write{454,509}
local	color	___408_hsv2	%read{506,506} %write{503,503}
local	float	___409_tm	%read{648,648} %write{554,554}
local	color	___409_hsv	%read{647,656} %write{600,652}
local	color	___409_hsv2	%read{649,649} %write{646,646}
local	color	___410_outcol	%read{747,837} %write{696,836}
local	color	___410_hsv2	%read{743,794} %write{742,742}
local	color	___411_hsv	%read{797,799} %write{791,795}
local	color	___411_tmp	%read{836,836} %write{835,835}
local	float	___412_tm	%read{847,847} %write{841,841}
local	color	___412_one	%read{843,848} %write{842,842}
local	color	___412_scr	%read{851,851} %write{846,846}
local	color	___413_outcol	%read{910,910} %write{858,909}
local	color	___414_outcol	%read{929,929} %write{913,928}
local	float	t	%read{6,907} %write{2,2}
const	float	$const1	0		%read{2,927} %write{2147483647,-1}
const	float	$const2	1		%read{1,926} %write{2147483647,-1}
const	string	$const3	"clamp"		%read{0,925} %write{2147483647,-1}
temp	float	$tmp1	%read{2,2} %write{1,1}
const	string	$const4	"mix"		%read{3,3} %write{2147483647,-1}
temp	int	$tmp2	%read{4,4} %write{3,3}
const	string	$const5	"node_mix_blend"		%read{5,5} %write{2147483647,-1}
const	string	$const6	"add"		%read{7,7} %write{2147483647,-1}
temp	int	$tmp3	%read{8,8} %write{7,7}
const	string	$const7	"node_mix_add"		%read{9,9} %write{2147483647,-1}
temp	color	$tmp4	%read{11,11} %write{10,10}
const	string	$const8	"multiply"		%read{12,12} %write{2147483647,-1}
temp	int	$tmp5	%read{13,13} %write{12,12}
const	string	$const9	"node_mix_mul"		%read{14,14} %write{2147483647,-1}
temp	color	$tmp6	%read{16,16} %write{15,15}
const	string	$const10	"screen"		%read{17,17} %write{2147483647,-1}
temp	int	$tmp7	%read{18,18} %write{17,17}
const	string	$const11	"node_mix_screen"		%read{19,19} %write{2147483647,-1}
const	color	$const12	1 1 1		%read{22,842} %write{2147483647,-1}
temp	color	$tmp9	%read{24,24} %write{21,21}
temp	color	$tmp11	%read{23,23} %write{22,22}
temp	color	$tmp12	%read{24,24} %write{23,23}
temp	color	$tmp13	%read{26,26} %write{24,24}
temp	color	$tmp15	%read{26,26} %write{25,25}
temp	color	$tmp16	%read{27,27} %write{26,26}
const	string	$const13	"overlay"		%read{28,28} %write{2147483647,-1}
temp	int	$tmp17	%read{29,29} %write{28,28}
const	string	$const14	"node_mix_overlay"		%read{30,30} %write{2147483647,-1}
const	int	$const15	0		%read{33,918} %write{2147483647,-1}
temp	float	$tmp18	%read{34,34} %write{33,33}
const	float	$const16	0.5		%read{34,898} %write{2147483647,-1}
temp	int	$tmp19	%read{35,35} %write{34,34}
temp	float	$tmp20	%read{41,41} %write{36,36}
const	float	$const17	2		%read{37,905} %write{2147483647,-1}
temp	float	$tmp21	%read{39,39} %write{37,37}
temp	float	$tmp22	%read{39,39} %write{38,38}
temp	float	$tmp23	%read{40,40} %write{39,39}
temp	float	$tmp24	%read{41,41} %write{40,40}
temp	float	$tmp25	%read{42,42} %write{41,41}
temp	float	$tmp26	%read{46,46} %write{43,43}
temp	float	$tmp27	%read{45,45} %write{44,44}
temp	float	$tmp28	%read{46,46} %write{45,45}
temp	float	$tmp29	%read{47,47} %write{46,46}
temp	float	$tmp30	%read{50,50} %write{47,47}
temp	float	$tmp31	%read{49,49} %write{48,48}
temp	float	$tmp32	%read{50,50} %write{49,49}
temp	float	$tmp33	%read{51,51} %write{50,50}
temp	float	$tmp34	%read{52,52} %write{51,51}
const	int	$const18	1		%read{53,923} %write{2147483647,-1}
temp	float	$tmp35	%read{54,54} %write{53,53}
temp	int	$tmp36	%read{55,55} %write{54,54}
temp	float	$tmp37	%read{61,61} %write{56,56}
temp	float	$tmp38	%read{59,59} %write{57,57}
temp	float	$tmp39	%read{59,59} %write{58,58}
temp	float	$tmp40	%read{60,60} %write{59,59}
temp	float	$tmp41	%read{61,61} %write{60,60}
temp	float	$tmp42	%read{62,62} %write{61,61}
temp	float	$tmp43	%read{66,66} %write{63,63}
temp	float	$tmp44	%read{65,65} %write{64,64}
temp	float	$tmp45	%read{66,66} %write{65,65}
temp	float	$tmp46	%read{67,67} %write{66,66}
temp	float	$tmp47	%read{70,70} %write{67,67}
temp	float	$tmp48	%read{69,69} %write{68,68}
temp	float	$tmp49	%read{70,70} %write{69,69}
temp	float	$tmp50	%read{71,71} %write{70,70}
temp	float	$tmp51	%read{72,72} %write{71,71}
const	int	$const19	2		%read{73,928} %write{2147483647,-1}
temp	float	$tmp52	%read{74,74} %write{73,73}
temp	int	$tmp53	%read{75,75} %write{74,74}
temp	float	$tmp54	%read{81,81} %write{76,76}
temp	float	$tmp55	%read{79,79} %write{77,77}
temp	float	$tmp56	%read{79,79} %write{78,78}
temp	float	$tmp57	%read{80,80} %write{79,79}
temp	float	$tmp58	%read{81,81} %write{80,80}
temp	float	$tmp59	%read{82,82} %write{81,81}
temp	float	$tmp60	%read{86,86} %write{83,83}
temp	float	$tmp61	%read{85,85} %write{84,84}
temp	float	$tmp62	%read{86,86} %write{85,85}
temp	float	$tmp63	%read{87,87} %write{86,86}
temp	float	$tmp64	%read{90,90} %write{87,87}
temp	float	$tmp65	%read{89,89} %write{88,88}
temp	float	$tmp66	%read{90,90} %write{89,89}
temp	float	$tmp67	%read{91,91} %write{90,90}
temp	float	$tmp68	%read{92,92} %write{91,91}
const	string	$const20	"subtract"		%read{94,94} %write{2147483647,-1}
temp	int	$tmp69	%read{95,95} %write{94,94}
const	string	$const21	"node_mix_sub"		%read{96,96} %write{2147483647,-1}
temp	color	$tmp70	%read{98,98} %write{97,97}
const	string	$const22	"divide"		%read{99,99} %write{2147483647,-1}
temp	int	$tmp71	%read{100,100} %write{99,99}
const	string	$const23	"node_mix_div"		%read{101,101} %write{2147483647,-1}
temp	float	$tmp72	%read{105,105} %write{104,104}
temp	int	$tmp73	%read{106,106} %write{105,105}
temp	float	$tmp74	%read{108,108} %write{107,107}
temp	float	$tmp75	%read{113,113} %write{108,108}
temp	float	$tmp76	%read{110,110} %write{109,109}
temp	float	$tmp77	%read{112,112} %write{110,110}
temp	float	$tmp78	%read{112,112} %write{111,111}
temp	float	$tmp79	%read{113,113} %write{112,112}
temp	float	$tmp80	%read{114,114} %write{113,113}
temp	float	$tmp81	%read{116,116} %write{115,115}
temp	int	$tmp82	%read{117,117} %write{116,116}
temp	float	$tmp83	%read{119,119} %write{118,118}
temp	float	$tmp84	%read{124,124} %write{119,119}
temp	float	$tmp85	%read{121,121} %write{120,120}
temp	float	$tmp86	%read{123,123} %write{121,121}
temp	float	$tmp87	%read{123,123} %write{122,122}
temp	float	$tmp88	%read{124,124} %write{123,123}
temp	float	$tmp89	%read{125,125} %write{124,124}
temp	float	$tmp90	%read{127,127} %write{126,126}
temp	int	$tmp91	%read{128,128} %write{127,127}
temp	float	$tmp92	%read{130,130} %write{129,129}
temp	float	$tmp93	%read{135,135} %write{130,130}
temp	float	$tmp94	%read{132,132} %write{131,131}
temp	float	$tmp95	%read{134,134} %write{132,132}
temp	float	$tmp96	%read{134,134} %write{133,133}
temp	float	$tmp97	%read{135,135} %write{134,134}
temp	float	$tmp98	%read{136,136} %write{135,135}
const	string	$const24	"difference"		%read{138,138} %write{2147483647,-1}
temp	int	$tmp99	%read{139,139} %write{138,138}
const	string	$const25	"node_mix_diff"		%read{140,140} %write{2147483647,-1}
temp	color	$tmp100	%read{143,143} %write{142,142}
temp	color	$tmp101	%read{142,142} %write{141,141}
const	string	$const26	"darken"		%read{144,144} %write{2147483647,-1}
temp	int	$tmp102	%read{145,145} %write{144,144}
const	string	$const27	"node_mix_dark"		%read{146,146} %write{2147483647,-1}
temp	color	$tmp103	%read{148,148} %write{147,147}
const	string	$const28	"lighten"		%read{149,149} %write{2147483647,-1}
temp	int	$tmp104	%read{150,150} %write{149,149}
const	string	$const29	"node_mix_light"		%read{151,151} %write{2147483647,-1}
temp	color	$tmp105	%read{153,153} %write{152,152}
const	string	$const30	"dodge"		%read{154,154} %write{2147483647,-1}
temp	int	$tmp106	%read{155,155} %write{154,154}
const	string	$const31	"node_mix_dodge"		%read{156,156} %write{2147483647,-1}
temp	float	$tmp107	%read{159,159} %write{158,158}
temp	int	$tmp108	%read{160,160} %write{159,159}
temp	float	$tmp109	%read{162,162} %write{161,161}
temp	float	$tmp110	%read{163,163} %write{162,162}
temp	int	$tmp111	%read{165,165} %write{164,164}
temp	float	$tmp112	%read{168,168} %write{167,167}
temp	int	$tmp113	%read{170,170} %write{169,169}
temp	float	$tmp114	%read{174,174} %write{173,173}
temp	int	$tmp115	%read{175,175} %write{174,174}
temp	float	$tmp116	%read{177,177} %write{176,176}
temp	float	$tmp117	%read{178,178} %write{177,177}
temp	int	$tmp118	%read{180,180} %write{179,179}
temp	float	$tmp119	%read{183,183} %write{182,182}
temp	int	$tmp120	%read{185,185} %write{184,184}
temp	float	$tmp121	%read{189,189} %write{188,188}
temp	int	$tmp122	%read{190,190} %write{189,189}
temp	float	$tmp123	%read{192,192} %write{191,191}
temp	float	$tmp124	%read{193,193} %write{192,192}
temp	int	$tmp125	%read{195,195} %write{194,194}
temp	float	$tmp126	%read{198,198} %write{197,197}
temp	int	$tmp127	%read{200,200} %write{199,199}
const	string	$const32	"burn"		%read{204,204} %write{2147483647,-1}
temp	int	$tmp128	%read{205,205} %write{204,204}
const	string	$const33	"node_mix_burn"		%read{206,206} %write{2147483647,-1}
temp	float	$tmp129	%read{210,210} %write{209,209}
temp	float	$tmp130	%read{211,211} %write{210,210}
temp	int	$tmp131	%read{213,213} %write{212,212}
temp	float	$tmp132	%read{216,216} %write{215,215}
temp	float	$tmp133	%read{217,217} %write{216,216}
temp	float	$tmp134	%read{218,218} %write{217,217}
temp	int	$tmp135	%read{220,220} %write{219,219}
temp	int	$tmp136	%read{223,223} %write{222,222}
temp	float	$tmp137	%read{227,227} %write{226,226}
temp	float	$tmp138	%read{228,228} %write{227,227}
temp	int	$tmp139	%read{230,230} %write{229,229}
temp	float	$tmp140	%read{233,233} %write{232,232}
temp	float	$tmp141	%read{234,234} %write{233,233}
temp	float	$tmp142	%read{235,235} %write{234,234}
temp	int	$tmp143	%read{237,237} %write{236,236}
temp	int	$tmp144	%read{240,240} %write{239,239}
temp	float	$tmp145	%read{244,244} %write{243,243}
temp	float	$tmp146	%read{245,245} %write{244,244}
temp	int	$tmp147	%read{247,247} %write{246,246}
temp	float	$tmp148	%read{250,250} %write{249,249}
temp	float	$tmp149	%read{251,251} %write{250,250}
temp	float	$tmp150	%read{252,252} %write{251,251}
temp	int	$tmp151	%read{254,254} %write{253,253}
temp	int	$tmp152	%read{257,257} %write{256,256}
const	string	$const34	"hue"		%read{261,261} %write{2147483647,-1}
temp	int	$tmp153	%read{262,262} %write{261,261}
const	string	$const35	"node_mix_hue"		%read{263,263} %write{2147483647,-1}
const	string	$const36	"rgb_to_hsv"		%read{265,746} %write{2147483647,-1}
temp	float	$tmp154	%read{270,270} %write{266,266}
temp	float	$tmp155	%read{270,270} %write{269,269}
temp	float	$tmp156	%read{269,269} %write{267,267}
temp	float	$tmp157	%read{269,269} %write{268,268}
temp	float	$tmp158	%read{275,275} %write{271,271}
temp	float	$tmp159	%read{275,275} %write{274,274}
temp	float	$tmp160	%read{274,274} %write{272,272}
temp	float	$tmp161	%read{274,274} %write{273,273}
temp	int	$tmp162	%read{279,279} %write{278,278}
temp	int	$tmp163	%read{284,284} %write{283,283}
temp	color	$tmp164	%read{287,287} %write{286,286}
temp	color	$tmp165	%read{288,288} %write{287,287}
temp	float	$tmp166	%read{290,290} %write{289,289}
temp	int	$tmp167	%read{291,291} %write{290,290}
temp	float	$tmp168	%read{294,294} %write{292,292}
temp	float	$tmp169	%read{294,294} %write{293,293}
temp	float	$tmp170	%read{296,296} %write{295,295}
temp	int	$tmp171	%read{297,297} %write{296,296}
temp	float	$tmp172	%read{299,299} %write{298,298}
temp	float	$tmp173	%read{301,301} %write{299,299}
temp	float	$tmp174	%read{301,301} %write{300,300}
const	float	$const37	4		%read{303,831} %write{2147483647,-1}
temp	float	$tmp175	%read{303,303} %write{302,302}
temp	float	$tmp176	%read{305,305} %write{303,303}
temp	float	$tmp177	%read{305,305} %write{304,304}
const	float	$const38	6		%read{306,806} %write{2147483647,-1}
temp	int	$tmp178	%read{308,308} %write{307,307}
temp	float	$tmp179	%read{312,312} %write{311,311}
temp	int	$tmp180	%read{313,313} %write{312,312}
temp	float	$tmp181	%read{319,319} %write{315,315}
temp	float	$tmp182	%read{319,319} %write{318,318}
temp	float	$tmp183	%read{318,318} %write{316,316}
temp	float	$tmp184	%read{318,318} %write{317,317}
temp	float	$tmp185	%read{324,324} %write{320,320}
temp	float	$tmp186	%read{324,324} %write{323,323}
temp	float	$tmp187	%read{323,323} %write{321,321}
temp	float	$tmp188	%read{323,323} %write{322,322}
temp	int	$tmp189	%read{328,328} %write{327,327}
temp	int	$tmp190	%read{333,333} %write{332,332}
temp	color	$tmp191	%read{336,336} %write{335,335}
temp	color	$tmp192	%read{337,337} %write{336,336}
temp	float	$tmp193	%read{339,339} %write{338,338}
temp	int	$tmp194	%read{340,340} %write{339,339}
temp	float	$tmp195	%read{343,343} %write{341,341}
temp	float	$tmp196	%read{343,343} %write{342,342}
temp	float	$tmp197	%read{345,345} %write{344,344}
temp	int	$tmp198	%read{346,346} %write{345,345}
temp	float	$tmp199	%read{348,348} %write{347,347}
temp	float	$tmp200	%read{350,350} %write{348,348}
temp	float	$tmp201	%read{350,350} %write{349,349}
temp	float	$tmp202	%read{352,352} %write{351,351}
temp	float	$tmp203	%read{354,354} %write{352,352}
temp	float	$tmp204	%read{354,354} %write{353,353}
temp	int	$tmp205	%read{357,357} %write{356,356}
temp	float	$tmp206	%read{361,361} %write{360,360}
const	string	$const39	"hsv_to_rgb"		%read{362,796} %write{2147483647,-1}
temp	int	$tmp207	%read{367,367} %write{366,366}
temp	int	$tmp208	%read{370,370} %write{369,369}
temp	float	$tmp209	%read{377,377} %write{376,376}
temp	float	$tmp210	%read{379,379} %write{378,378}
temp	float	$tmp211	%read{380,380} %write{379,379}
temp	float	$tmp212	%read{382,382} %write{381,381}
temp	float	$tmp213	%read{383,383} %write{382,382}
temp	float	$tmp214	%read{384,384} %write{383,383}
temp	int	$tmp215	%read{386,386} %write{385,385}
temp	int	$tmp216	%read{389,389} %write{388,388}
temp	int	$tmp217	%read{392,392} %write{391,391}
const	float	$const40	3		%read{394,828} %write{2147483647,-1}
temp	int	$tmp218	%read{395,395} %write{394,394}
temp	int	$tmp219	%read{398,398} %write{397,397}
const	string	$const41	"saturation"		%read{404,404} %write{2147483647,-1}
temp	int	$tmp220	%read{405,405} %write{404,404}
const	string	$const42	"node_mix_sat"		%read{406,406} %write{2147483647,-1}
temp	float	$tmp221	%read{414,414} %write{410,410}
temp	float	$tmp222	%read{414,414} %write{413,413}
temp	float	$tmp223	%read{413,413} %write{411,411}
temp	float	$tmp224	%read{413,413} %write{412,412}
temp	float	$tmp225	%read{419,419} %write{415,415}
temp	float	$tmp226	%read{419,419} %write{418,418}
temp	float	$tmp227	%read{418,418} %write{416,416}
temp	float	$tmp228	%read{418,418} %write{417,417}
temp	int	$tmp229	%read{423,423} %write{422,422}
temp	int	$tmp230	%read{428,428} %write{427,427}
temp	color	$tmp231	%read{431,431} %write{430,430}
temp	color	$tmp232	%read{432,432} %write{431,431}
temp	float	$tmp233	%read{434,434} %write{433,433}
temp	int	$tmp234	%read{435,435} %write{434,434}
temp	float	$tmp235	%read{438,438} %write{436,436}
temp	float	$tmp236	%read{438,438} %write{437,437}
temp	float	$tmp237	%read{440,440} %write{439,439}
temp	int	$tmp238	%read{441,441} %write{440,440}
temp	float	$tmp239	%read{443,443} %write{442,442}
temp	float	$tmp240	%read{445,445} %write{443,443}
temp	float	$tmp241	%read{445,445} %write{444,444}
temp	float	$tmp242	%read{447,447} %write{446,446}
temp	float	$tmp243	%read{449,449} %write{447,447}
temp	float	$tmp244	%read{449,449} %write{448,448}
temp	int	$tmp245	%read{452,452} %write{451,451}
temp	float	$tmp246	%read{456,456} %write{455,455}
temp	int	$tmp247	%read{457,457} %write{456,456}
temp	float	$tmp248	%read{463,463} %write{459,459}
temp	float	$tmp249	%read{463,463} %write{462,462}
temp	float	$tmp250	%read{462,462} %write{460,460}
temp	float	$tmp251	%read{462,462} %write{461,461}
temp	float	$tmp252	%read{468,468} %write{464,464}
temp	float	$tmp253	%read{468,468} %write{467,467}
temp	float	$tmp254	%read{467,467} %write{465,465}
temp	float	$tmp255	%read{467,467} %write{466,466}
temp	int	$tmp256	%read{472,472} %write{471,471}
temp	int	$tmp257	%read{477,477} %write{476,476}
temp	color	$tmp258	%read{480,480} %write{479,479}
temp	color	$tmp259	%read{481,481} %write{480,480}
temp	float	$tmp260	%read{483,483} %write{482,482}
temp	int	$tmp261	%read{484,484} %write{483,483}
temp	float	$tmp262	%read{487,487} %write{485,485}
temp	float	$tmp263	%read{487,487} %write{486,486}
temp	float	$tmp264	%read{489,489} %write{488,488}
temp	int	$tmp265	%read{490,490} %write{489,489}
temp	float	$tmp266	%read{492,492} %write{491,491}
temp	float	$tmp267	%read{494,494} %write{492,492}
temp	float	$tmp268	%read{494,494} %write{493,493}
temp	float	$tmp269	%read{496,496} %write{495,495}
temp	float	$tmp270	%read{498,498} %write{496,496}
temp	float	$tmp271	%read{498,498} %write{497,497}
temp	int	$tmp272	%read{501,501} %write{500,500}
temp	float	$tmp273	%read{505,505} %write{504,504}
temp	float	$tmp274	%read{508,508} %write{505,505}
temp	float	$tmp275	%read{507,507} %write{506,506}
temp	float	$tmp276	%read{508,508} %write{507,507}
temp	float	$tmp277	%read{509,509} %write{508,508}
temp	int	$tmp278	%read{515,515} %write{514,514}
temp	int	$tmp279	%read{518,518} %write{517,517}
temp	float	$tmp280	%read{525,525} %write{524,524}
temp	float	$tmp281	%read{527,527} %write{526,526}
temp	float	$tmp282	%read{528,528} %write{527,527}
temp	float	$tmp283	%read{530,530} %write{529,529}
temp	float	$tmp284	%read{531,531} %write{530,530}
temp	float	$tmp285	%read{532,532} %write{531,531}
temp	int	$tmp286	%read{534,534} %write{533,533}
temp	int	$tmp287	%read{537,537} %write{536,536}
temp	int	$tmp288	%read{540,540} %write{539,539}
temp	int	$tmp289	%read{543,543} %write{542,542}
temp	int	$tmp290	%read{546,546} %write{545,545}
const	string	$const43	"value"		%read{551,551} %write{2147483647,-1}
temp	int	$tmp291	%read{552,552} %write{551,551}
const	string	$const44	"node_mix_val"		%read{553,553} %write{2147483647,-1}
temp	float	$tmp292	%read{560,560} %write{556,556}
temp	float	$tmp293	%read{560,560} %write{559,559}
temp	float	$tmp294	%read{559,559} %write{557,557}
temp	float	$tmp295	%read{559,559} %write{558,558}
temp	float	$tmp296	%read{565,565} %write{561,561}
temp	float	$tmp297	%read{565,565} %write{564,564}
temp	float	$tmp298	%read{564,564} %write{562,562}
temp	float	$tmp299	%read{564,564} %write{563,563}
temp	int	$tmp300	%read{569,569} %write{568,568}
temp	int	$tmp301	%read{574,574} %write{573,573}
temp	color	$tmp302	%read{577,577} %write{576,576}
temp	color	$tmp303	%read{578,578} %write{577,577}
temp	float	$tmp304	%read{580,580} %write{579,579}
temp	int	$tmp305	%read{581,581} %write{580,580}
temp	float	$tmp306	%read{584,584} %write{582,582}
temp	float	$tmp307	%read{584,584} %write{583,583}
temp	float	$tmp308	%read{586,586} %write{585,585}
temp	int	$tmp309	%read{587,587} %write{586,586}
temp	float	$tmp310	%read{589,589} %write{588,588}
temp	float	$tmp311	%read{591,591} %write{589,589}
temp	float	$tmp312	%read{591,591} %write{590,590}
temp	float	$tmp313	%read{593,593} %write{592,592}
temp	float	$tmp314	%read{595,595} %write{593,593}
temp	float	$tmp315	%read{595,595} %write{594,594}
temp	int	$tmp316	%read{598,598} %write{597,597}
temp	float	$tmp317	%read{606,606} %write{602,602}
temp	float	$tmp318	%read{606,606} %write{605,605}
temp	float	$tmp319	%read{605,605} %write{603,603}
temp	float	$tmp320	%read{605,605} %write{604,604}
temp	float	$tmp321	%read{611,611} %write{607,607}
temp	float	$tmp322	%read{611,611} %write{610,610}
temp	float	$tmp323	%read{610,610} %write{608,608}
temp	float	$tmp324	%read{610,610} %write{609,609}
temp	int	$tmp325	%read{615,615} %write{614,614}
temp	int	$tmp326	%read{620,620} %write{619,619}
temp	color	$tmp327	%read{623,623} %write{622,622}
temp	color	$tmp328	%read{624,624} %write{623,623}
temp	float	$tmp329	%read{626,626} %write{625,625}
temp	int	$tmp330	%read{627,627} %write{626,626}
temp	float	$tmp331	%read{630,630} %write{628,628}
temp	float	$tmp332	%read{630,630} %write{629,629}
temp	float	$tmp333	%read{632,632} %write{631,631}
temp	int	$tmp334	%read{633,633} %write{632,632}
temp	float	$tmp335	%read{635,635} %write{634,634}
temp	float	$tmp336	%read{637,637} %write{635,635}
temp	float	$tmp337	%read{637,637} %write{636,636}
temp	float	$tmp338	%read{639,639} %write{638,638}
temp	float	$tmp339	%read{641,641} %write{639,639}
temp	float	$tmp340	%read{641,641} %write{640,640}
temp	int	$tmp341	%read{644,644} %write{643,643}
temp	float	$tmp342	%read{648,648} %write{647,647}
temp	float	$tmp343	%read{651,651} %write{648,648}
temp	float	$tmp344	%read{650,650} %write{649,649}
temp	float	$tmp345	%read{651,651} %write{650,650}
temp	float	$tmp346	%read{652,652} %write{651,651}
temp	int	$tmp347	%read{658,658} %write{657,657}
temp	int	$tmp348	%read{661,661} %write{660,660}
temp	float	$tmp349	%read{668,668} %write{667,667}
temp	float	$tmp350	%read{670,670} %write{669,669}
temp	float	$tmp351	%read{671,671} %write{670,670}
temp	float	$tmp352	%read{673,673} %write{672,672}
temp	float	$tmp353	%read{674,674} %write{673,673}
temp	float	$tmp354	%read{675,675} %write{674,674}
temp	int	$tmp355	%read{677,677} %write{676,676}
temp	int	$tmp356	%read{680,680} %write{679,679}
temp	int	$tmp357	%read{683,683} %write{682,682}
temp	int	$tmp358	%read{686,686} %write{685,685}
temp	int	$tmp359	%read{689,689} %write{688,688}
const	string	$const45	"color"		%read{693,693} %write{2147483647,-1}
temp	int	$tmp360	%read{694,694} %write{693,693}
const	string	$const46	"node_mix_color"		%read{695,695} %write{2147483647,-1}
temp	float	$tmp361	%read{702,702} %write{698,698}
temp	float	$tmp362	%read{702,702} %write{701,701}
temp	float	$tmp363	%read{701,701} %write{699,699}
temp	float	$tmp364	%read{701,701} %write{700,700}
temp	float	$tmp365	%read{707,707} %write{703,703}
temp	float	$tmp366	%read{707,707} %write{706,706}
temp	float	$tmp367	%read{706,706} %write{704,704}
temp	float	$tmp368	%read{706,706} %write{705,705}
temp	int	$tmp369	%read{711,711} %write{710,710}
temp	int	$tmp370	%read{716,716} %write{715,715}
temp	color	$tmp371	%read{719,719} %write{718,718}
temp	color	$tmp372	%read{720,720} %write{719,719}
temp	float	$tmp373	%read{722,722} %write{721,721}
temp	int	$tmp374	%read{723,723} %write{722,722}
temp	float	$tmp375	%read{726,726} %write{724,724}
temp	float	$tmp376	%read{726,726} %write{725,725}
temp	float	$tmp377	%read{728,728} %write{727,727}
temp	int	$tmp378	%read{729,729} %write{728,728}
temp	float	$tmp379	%read{731,731} %write{730,730}
temp	float	$tmp380	%read{733,733} %write{731,731}
temp	float	$tmp381	%read{733,733} %write{732,732}
temp	float	$tmp382	%read{735,735} %write{734,734}
temp	float	$tmp383	%read{737,737} %write{735,735}
temp	float	$tmp384	%read{737,737} %write{736,736}
temp	int	$tmp385	%read{740,740} %write{739,739}
temp	float	$tmp386	%read{744,744} %write{743,743}
temp	int	$tmp387	%read{745,745} %write{744,744}
temp	float	$tmp388	%read{751,751} %write{747,747}
temp	float	$tmp389	%read{751,751} %write{750,750}
temp	float	$tmp390	%read{750,750} %write{748,748}
temp	float	$tmp391	%read{750,750} %write{749,749}
temp	float	$tmp392	%read{756,756} %write{752,752}
temp	float	$tmp393	%read{756,756} %write{755,755}
temp	float	$tmp394	%read{755,755} %write{753,753}
temp	float	$tmp395	%read{755,755} %write{754,754}
temp	int	$tmp396	%read{760,760} %write{759,759}
temp	int	$tmp397	%read{765,765} %write{764,764}
temp	color	$tmp398	%read{768,768} %write{767,767}
temp	color	$tmp399	%read{769,769} %write{768,768}
temp	float	$tmp400	%read{771,771} %write{770,770}
temp	int	$tmp401	%read{772,772} %write{771,771}
temp	float	$tmp402	%read{775,775} %write{773,773}
temp	float	$tmp403	%read{775,775} %write{774,774}
temp	float	$tmp404	%read{777,777} %write{776,776}
temp	int	$tmp405	%read{778,778} %write{777,777}
temp	float	$tmp406	%read{780,780} %write{779,779}
temp	float	$tmp407	%read{782,782} %write{780,780}
temp	float	$tmp408	%read{782,782} %write{781,781}
temp	float	$tmp409	%read{784,784} %write{783,783}
temp	float	$tmp410	%read{786,786} %write{784,784}
temp	float	$tmp411	%read{786,786} %write{785,785}
temp	int	$tmp412	%read{789,789} %write{788,788}
temp	float	$tmp413	%read{793,793} %write{792,792}
temp	float	$tmp414	%read{795,795} %write{794,794}
temp	int	$tmp415	%read{801,801} %write{800,800}
temp	int	$tmp416	%read{804,804} %write{803,803}
temp	float	$tmp417	%read{811,811} %write{810,810}
temp	float	$tmp418	%read{813,813} %write{812,812}
temp	float	$tmp419	%read{814,814} %write{813,813}
temp	float	$tmp420	%read{816,816} %write{815,815}
temp	float	$tmp421	%read{817,817} %write{816,816}
temp	float	$tmp422	%read{818,818} %write{817,817}
temp	int	$tmp423	%read{820,820} %write{819,819}
temp	int	$tmp424	%read{823,823} %write{822,822}
temp	int	$tmp425	%read{826,826} %write{825,825}
temp	int	$tmp426	%read{829,829} %write{828,828}
temp	int	$tmp427	%read{832,832} %write{831,831}
const	string	$const47	"soft_light"		%read{838,838} %write{2147483647,-1}
temp	int	$tmp428	%read{839,839} %write{838,838}
const	string	$const48	"node_mix_soft"		%read{840,840} %write{2147483647,-1}
temp	color	$tmp429	%read{845,845} %write{843,843}
temp	color	$tmp430	%read{845,845} %write{844,844}
temp	color	$tmp431	%read{846,846} %write{845,845}
temp	color	$tmp432	%read{854,854} %write{847,847}
temp	color	$tmp433	%read{849,849} %write{848,848}
temp	color	$tmp434	%read{850,850} %write{849,849}
temp	color	$tmp435	%read{852,852} %write{850,850}
temp	color	$tmp436	%read{852,852} %write{851,851}
temp	color	$tmp437	%read{853,853} %write{852,852}
temp	color	$tmp438	%read{854,854} %write{853,853}
const	string	$const49	"linear_light"		%read{855,855} %write{2147483647,-1}
temp	int	$tmp439	%read{856,856} %write{855,855}
const	string	$const50	"node_mix_linear"		%read{857,857} %write{2147483647,-1}
temp	float	$tmp440	%read{860,860} %write{859,859}
temp	int	$tmp441	%read{861,861} %write{860,860}
temp	float	$tmp442	%read{867,867} %write{862,862}
temp	float	$tmp443	%read{864,864} %write{863,863}
temp	float	$tmp444	%read{865,865} %write{864,864}
temp	float	$tmp445	%read{866,866} %write{865,865}
temp	float	$tmp446	%read{867,867} %write{866,866}
temp	float	$tmp447	%read{868,868} %write{867,867}
temp	float	$tmp448	%read{874,874} %write{869,869}
temp	float	$tmp449	%read{871,871} %write{870,870}
temp	float	$tmp450	%read{872,872} %write{871,871}
temp	float	$tmp451	%read{873,873} %write{872,872}
temp	float	$tmp452	%read{874,874} %write{873,873}
temp	float	$tmp453	%read{875,875} %write{874,874}
temp	float	$tmp454	%read{877,877} %write{876,876}
temp	int	$tmp455	%read{878,878} %write{877,877}
temp	float	$tmp456	%read{884,884} %write{879,879}
temp	float	$tmp457	%read{881,881} %write{880,880}
temp	float	$tmp458	%read{882,882} %write{881,881}
temp	float	$tmp459	%read{883,883} %write{882,882}
temp	float	$tmp460	%read{884,884} %write{883,883}
temp	float	$tmp461	%read{885,885} %write{884,884}
temp	float	$tmp462	%read{891,891} %write{886,886}
temp	float	$tmp463	%read{888,888} %write{887,887}
temp	float	$tmp464	%read{889,889} %write{888,888}
temp	float	$tmp465	%read{890,890} %write{889,889}
temp	float	$tmp466	%read{891,891} %write{890,890}
temp	float	$tmp467	%read{892,892} %write{891,891}
temp	float	$tmp468	%read{894,894} %write{893,893}
temp	int	$tmp469	%read{895,895} %write{894,894}
temp	float	$tmp470	%read{901,901} %write{896,896}
temp	float	$tmp471	%read{898,898} %write{897,897}
temp	float	$tmp472	%read{899,899} %write{898,898}
temp	float	$tmp473	%read{900,900} %write{899,899}
temp	float	$tmp474	%read{901,901} %write{900,900}
temp	float	$tmp475	%read{902,902} %write{901,901}
temp	float	$tmp476	%read{908,908} %write{903,903}
temp	float	$tmp477	%read{905,905} %write{904,904}
temp	float	$tmp478	%read{906,906} %write{905,905}
temp	float	$tmp479	%read{907,907} %write{906,906}
temp	float	$tmp480	%read{908,908} %write{907,907}
temp	float	$tmp481	%read{909,909} %write{908,908}
const	string	$const51	"node_mix_clamp"		%read{912,912} %write{2147483647,-1}
temp	float	$tmp482	%read{918,918} %write{917,917}
temp	float	$tmp483	%read{916,916} %write{914,914}
temp	float	$tmp484	%read{917,917} %write{916,916}
temp	float	$tmp485	%read{923,923} %write{922,922}
temp	float	$tmp486	%read{921,921} %write{919,919}
temp	float	$tmp487	%read{922,922} %write{921,921}
temp	float	$tmp488	%read{928,928} %write{927,927}
temp	float	$tmp489	%read{926,926} %write{924,924}
temp	float	$tmp490	%read{927,927} %write{926,926}
code ___main___
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:276
#   float t = clamp(Fac, 0.0, 1.0);
	functioncall	$const3 3 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{276} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1 Fac $const2 	%filename{"F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		t $tmp1 $const1 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:278
#   if (mix_type == "mix")
	eq		$tmp2 mix_type $const4 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{278} %argrw{"wrr"}
	if		$tmp2 7 7 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:279
#     Color = node_mix_blend(t, Color1, Color2);
	functioncall	$const5 7 	%line{279} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:9
#   return mix(col1, col2, t);
	mix		Color Color1 Color2 t 	%line{9} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:280
#   if (mix_type == "add")
	eq		$tmp3 mix_type $const6 	%line{280} %argrw{"wrr"}
	if		$tmp3 12 12 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:281
#     Color = node_mix_add(t, Color1, Color2);
	functioncall	$const7 12 	%line{281} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:14
#   return mix(col1, col1 + col2, t);
	add		$tmp4 Color1 Color2 	%line{14} %argrw{"wrr"}
	mix		Color Color1 $tmp4 t 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:282
#   if (mix_type == "multiply")
	eq		$tmp5 mix_type $const8 	%line{282} %argrw{"wrr"}
	if		$tmp5 17 17 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:283
#     Color = node_mix_mul(t, Color1, Color2);
	functioncall	$const9 17 	%line{283} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:19
#   return mix(col1, col1 * col2, t);
	mul		$tmp6 Color1 Color2 	%line{19} %argrw{"wrr"}
	mix		Color Color1 $tmp6 t 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:284
#   if (mix_type == "screen")
	eq		$tmp7 mix_type $const10 	%line{284} %argrw{"wrr"}
	if		$tmp7 28 28 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:285
#     Color = node_mix_screen(t, Color1, Color2);
	functioncall	$const11 28 	%line{285} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:24
#   float tm = 1.0 - t;
	sub		___393_tm $const2 t 	%line{24} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:26
#   return color(1.0) - (color(tm) + t * (color(1.0) - col2)) * (color(1.0) - col1);
	assign		$tmp9 ___393_tm 	%line{26} %argrw{"wr"}
	sub		$tmp11 $const12 Color2 	%argrw{"wrr"}
	mul		$tmp12 t $tmp11 	%argrw{"wrr"}
	add		$tmp13 $tmp9 $tmp12 	%argrw{"wrr"}
	sub		$tmp15 $const12 Color1 	%argrw{"wrr"}
	mul		$tmp16 $tmp13 $tmp15 	%argrw{"wrr"}
	sub		Color $const12 $tmp16 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:286
#   if (mix_type == "overlay")
	eq		$tmp17 mix_type $const13 	%line{286} %argrw{"wrr"}
	if		$tmp17 94 94 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:287
#     Color = node_mix_overlay(t, Color1, Color2);
	functioncall	$const14 94 	%line{287} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:31
#   float tm = 1.0 - t;
	sub		___394_tm $const2 t 	%line{31} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:33
#   color outcol = col1;
	assign		___394_outcol Color1 	%line{33} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:35
#   if (outcol[0] < 0.5)
	compref		$tmp18 ___394_outcol $const15 	%line{35} %argrw{"wrr"}
	lt		$tmp19 $tmp18 $const16 	%argrw{"wrr"}
	if		$tmp19 43 53 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:36
#     outcol[0] *= tm + 2.0 * t * col2[0];
	compref		$tmp20 ___394_outcol $const15 	%line{36} %argrw{"wrr"}
	mul		$tmp21 $const17 t 	%argrw{"wrr"}
	compref		$tmp22 Color2 $const15 	%argrw{"wrr"}
	mul		$tmp23 $tmp21 $tmp22 	%argrw{"wrr"}
	add		$tmp24 ___394_tm $tmp23 	%argrw{"wrr"}
	mul		$tmp25 $tmp20 $tmp24 	%argrw{"wrr"}
	compassign	___394_outcol $const15 $tmp25 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:38
#     outcol[0] = 1.0 - (tm + 2.0 * t * (1.0 - col2[0])) * (1.0 - outcol[0]);
	mul		$tmp26 $const17 t 	%line{38} %argrw{"wrr"}
	compref		$tmp27 Color2 $const15 	%argrw{"wrr"}
	sub		$tmp28 $const2 $tmp27 	%argrw{"wrr"}
	mul		$tmp29 $tmp26 $tmp28 	%argrw{"wrr"}
	add		$tmp30 ___394_tm $tmp29 	%argrw{"wrr"}
	compref		$tmp31 ___394_outcol $const15 	%argrw{"wrr"}
	sub		$tmp32 $const2 $tmp31 	%argrw{"wrr"}
	mul		$tmp33 $tmp30 $tmp32 	%argrw{"wrr"}
	sub		$tmp34 $const2 $tmp33 	%argrw{"wrr"}
	compassign	___394_outcol $const15 $tmp34 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:40
#   if (outcol[1] < 0.5)
	compref		$tmp35 ___394_outcol $const18 	%line{40} %argrw{"wrr"}
	lt		$tmp36 $tmp35 $const16 	%argrw{"wrr"}
	if		$tmp36 63 73 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:41
#     outcol[1] *= tm + 2.0 * t * col2[1];
	compref		$tmp37 ___394_outcol $const18 	%line{41} %argrw{"wrr"}
	mul		$tmp38 $const17 t 	%argrw{"wrr"}
	compref		$tmp39 Color2 $const18 	%argrw{"wrr"}
	mul		$tmp40 $tmp38 $tmp39 	%argrw{"wrr"}
	add		$tmp41 ___394_tm $tmp40 	%argrw{"wrr"}
	mul		$tmp42 $tmp37 $tmp41 	%argrw{"wrr"}
	compassign	___394_outcol $const18 $tmp42 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:43
#     outcol[1] = 1.0 - (tm + 2.0 * t * (1.0 - col2[1])) * (1.0 - outcol[1]);
	mul		$tmp43 $const17 t 	%line{43} %argrw{"wrr"}
	compref		$tmp44 Color2 $const18 	%argrw{"wrr"}
	sub		$tmp45 $const2 $tmp44 	%argrw{"wrr"}
	mul		$tmp46 $tmp43 $tmp45 	%argrw{"wrr"}
	add		$tmp47 ___394_tm $tmp46 	%argrw{"wrr"}
	compref		$tmp48 ___394_outcol $const18 	%argrw{"wrr"}
	sub		$tmp49 $const2 $tmp48 	%argrw{"wrr"}
	mul		$tmp50 $tmp47 $tmp49 	%argrw{"wrr"}
	sub		$tmp51 $const2 $tmp50 	%argrw{"wrr"}
	compassign	___394_outcol $const18 $tmp51 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:45
#   if (outcol[2] < 0.5)
	compref		$tmp52 ___394_outcol $const19 	%line{45} %argrw{"wrr"}
	lt		$tmp53 $tmp52 $const16 	%argrw{"wrr"}
	if		$tmp53 83 93 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:46
#     outcol[2] *= tm + 2.0 * t * col2[2];
	compref		$tmp54 ___394_outcol $const19 	%line{46} %argrw{"wrr"}
	mul		$tmp55 $const17 t 	%argrw{"wrr"}
	compref		$tmp56 Color2 $const19 	%argrw{"wrr"}
	mul		$tmp57 $tmp55 $tmp56 	%argrw{"wrr"}
	add		$tmp58 ___394_tm $tmp57 	%argrw{"wrr"}
	mul		$tmp59 $tmp54 $tmp58 	%argrw{"wrr"}
	compassign	___394_outcol $const19 $tmp59 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:48
#     outcol[2] = 1.0 - (tm + 2.0 * t * (1.0 - col2[2])) * (1.0 - outcol[2]);
	mul		$tmp60 $const17 t 	%line{48} %argrw{"wrr"}
	compref		$tmp61 Color2 $const19 	%argrw{"wrr"}
	sub		$tmp62 $const2 $tmp61 	%argrw{"wrr"}
	mul		$tmp63 $tmp60 $tmp62 	%argrw{"wrr"}
	add		$tmp64 ___394_tm $tmp63 	%argrw{"wrr"}
	compref		$tmp65 ___394_outcol $const19 	%argrw{"wrr"}
	sub		$tmp66 $const2 $tmp65 	%argrw{"wrr"}
	mul		$tmp67 $tmp64 $tmp66 	%argrw{"wrr"}
	sub		$tmp68 $const2 $tmp67 	%argrw{"wrr"}
	compassign	___394_outcol $const19 $tmp68 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:50
#   return outcol;
	assign		Color ___394_outcol 	%line{50} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:288
#   if (mix_type == "subtract")
	eq		$tmp69 mix_type $const20 	%line{288} %argrw{"wrr"}
	if		$tmp69 99 99 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:289
#     Color = node_mix_sub(t, Color1, Color2);
	functioncall	$const21 99 	%line{289} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:55
#   return mix(col1, col1 - col2, t);
	sub		$tmp70 Color1 Color2 	%line{55} %argrw{"wrr"}
	mix		Color Color1 $tmp70 t 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:290
#   if (mix_type == "divide")
	eq		$tmp71 mix_type $const22 	%line{290} %argrw{"wrr"}
	if		$tmp71 138 138 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:291
#     Color = node_mix_div(t, Color1, Color2);
	functioncall	$const23 138 	%line{291} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:60
#   float tm = 1.0 - t;
	sub		___396_tm $const2 t 	%line{60} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:62
#   color outcol = col1;
	assign		___396_outcol Color1 	%line{62} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:64
#   if (col2[0] != 0.0)
	compref		$tmp72 Color2 $const15 	%line{64} %argrw{"wrr"}
	neq		$tmp73 $tmp72 $const1 	%argrw{"wrr"}
	if		$tmp73 115 115 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:65
#     outcol[0] = tm * outcol[0] + t * outcol[0] / col2[0];
	compref		$tmp74 ___396_outcol $const15 	%line{65} %argrw{"wrr"}
	mul		$tmp75 ___396_tm $tmp74 	%argrw{"wrr"}
	compref		$tmp76 ___396_outcol $const15 	%argrw{"wrr"}
	mul		$tmp77 t $tmp76 	%argrw{"wrr"}
	compref		$tmp78 Color2 $const15 	%argrw{"wrr"}
	div		$tmp79 $tmp77 $tmp78 	%argrw{"wrr"}
	add		$tmp80 $tmp75 $tmp79 	%argrw{"wrr"}
	compassign	___396_outcol $const15 $tmp80 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:66
#   if (col2[1] != 0.0)
	compref		$tmp81 Color2 $const18 	%line{66} %argrw{"wrr"}
	neq		$tmp82 $tmp81 $const1 	%argrw{"wrr"}
	if		$tmp82 126 126 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:67
#     outcol[1] = tm * outcol[1] + t * outcol[1] / col2[1];
	compref		$tmp83 ___396_outcol $const18 	%line{67} %argrw{"wrr"}
	mul		$tmp84 ___396_tm $tmp83 	%argrw{"wrr"}
	compref		$tmp85 ___396_outcol $const18 	%argrw{"wrr"}
	mul		$tmp86 t $tmp85 	%argrw{"wrr"}
	compref		$tmp87 Color2 $const18 	%argrw{"wrr"}
	div		$tmp88 $tmp86 $tmp87 	%argrw{"wrr"}
	add		$tmp89 $tmp84 $tmp88 	%argrw{"wrr"}
	compassign	___396_outcol $const18 $tmp89 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:68
#   if (col2[2] != 0.0)
	compref		$tmp90 Color2 $const19 	%line{68} %argrw{"wrr"}
	neq		$tmp91 $tmp90 $const1 	%argrw{"wrr"}
	if		$tmp91 137 137 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:69
#     outcol[2] = tm * outcol[2] + t * outcol[2] / col2[2];
	compref		$tmp92 ___396_outcol $const19 	%line{69} %argrw{"wrr"}
	mul		$tmp93 ___396_tm $tmp92 	%argrw{"wrr"}
	compref		$tmp94 ___396_outcol $const19 	%argrw{"wrr"}
	mul		$tmp95 t $tmp94 	%argrw{"wrr"}
	compref		$tmp96 Color2 $const19 	%argrw{"wrr"}
	div		$tmp97 $tmp95 $tmp96 	%argrw{"wrr"}
	add		$tmp98 $tmp93 $tmp97 	%argrw{"wrr"}
	compassign	___396_outcol $const19 $tmp98 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:71
#   return outcol;
	assign		Color ___396_outcol 	%line{71} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:292
#   if (mix_type == "difference")
	eq		$tmp99 mix_type $const24 	%line{292} %argrw{"wrr"}
	if		$tmp99 144 144 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:293
#     Color = node_mix_diff(t, Color1, Color2);
	functioncall	$const25 144 	%line{293} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:76
#   return mix(col1, abs(col1 - col2), t);
	sub		$tmp101 Color1 Color2 	%line{76} %argrw{"wrr"}
	abs		$tmp100 $tmp101 	%argrw{"wr"}
	mix		Color Color1 $tmp100 t 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:294
#   if (mix_type == "darken")
	eq		$tmp102 mix_type $const26 	%line{294} %argrw{"wrr"}
	if		$tmp102 149 149 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:295
#     Color = node_mix_dark(t, Color1, Color2);
	functioncall	$const27 149 	%line{295} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:81
#   return mix(col1, min(col1, col2), t);
	min		$tmp103 Color1 Color2 	%line{81} %argrw{"wrr"}
	mix		Color Color1 $tmp103 t 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:296
#   if (mix_type == "lighten")
	eq		$tmp104 mix_type $const28 	%line{296} %argrw{"wrr"}
	if		$tmp104 154 154 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:297
#     Color = node_mix_light(t, Color1, Color2);
	functioncall	$const29 154 	%line{297} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:86
#   return mix(col1, max(col1, col2), t);
	max		$tmp105 Color1 Color2 	%line{86} %argrw{"wrr"}
	mix		Color Color1 $tmp105 t 	%argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:298
#   if (mix_type == "dodge")
	eq		$tmp106 mix_type $const30 	%line{298} %argrw{"wrr"}
	if		$tmp106 204 204 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:299
#     Color = node_mix_dodge(t, Color1, Color2);
	functioncall	$const31 204 	%line{299} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:91
#   color outcol = col1;
	assign		___400_outcol Color1 	%line{91} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:93
#   if (outcol[0] != 0.0) {
	compref		$tmp107 ___400_outcol $const15 	%line{93} %argrw{"wrr"}
	neq		$tmp108 $tmp107 $const1 	%argrw{"wrr"}
	if		$tmp108 173 173 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:94
#     float tmp = 1.0 - t * col2[0];
	compref		$tmp109 Color2 $const15 	%line{94} %argrw{"wrr"}
	mul		$tmp110 t $tmp109 	%argrw{"wrr"}
	sub		___401_tmp $const2 $tmp110 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:95
#     if (tmp <= 0.0)
	le		$tmp111 ___401_tmp $const1 	%line{95} %argrw{"wrr"}
	if		$tmp111 167 173 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:96
#       outcol[0] = 1.0;
	compassign	___400_outcol $const15 $const2 	%line{96} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:97
#     else if ((tmp = outcol[0] / tmp) > 1.0)
	compref		$tmp112 ___400_outcol $const15 	%line{97} %argrw{"wrr"}
	div		___401_tmp $tmp112 ___401_tmp 	%argrw{"wrr"}
	gt		$tmp113 ___401_tmp $const2 	%argrw{"wrr"}
	if		$tmp113 172 173 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:98
#       outcol[0] = 1.0;
	compassign	___400_outcol $const15 $const2 	%line{98} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:100
#       outcol[0] = tmp;
	compassign	___400_outcol $const15 ___401_tmp 	%line{100} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:102
#   if (outcol[1] != 0.0) {
	compref		$tmp114 ___400_outcol $const18 	%line{102} %argrw{"wrr"}
	neq		$tmp115 $tmp114 $const1 	%argrw{"wrr"}
	if		$tmp115 188 188 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:103
#     float tmp = 1.0 - t * col2[1];
	compref		$tmp116 Color2 $const18 	%line{103} %argrw{"wrr"}
	mul		$tmp117 t $tmp116 	%argrw{"wrr"}
	sub		___402_tmp $const2 $tmp117 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:104
#     if (tmp <= 0.0)
	le		$tmp118 ___402_tmp $const1 	%line{104} %argrw{"wrr"}
	if		$tmp118 182 188 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:105
#       outcol[1] = 1.0;
	compassign	___400_outcol $const18 $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:106
#     else if ((tmp = outcol[1] / tmp) > 1.0)
	compref		$tmp119 ___400_outcol $const18 	%line{106} %argrw{"wrr"}
	div		___402_tmp $tmp119 ___402_tmp 	%argrw{"wrr"}
	gt		$tmp120 ___402_tmp $const2 	%argrw{"wrr"}
	if		$tmp120 187 188 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:107
#       outcol[1] = 1.0;
	compassign	___400_outcol $const18 $const2 	%line{107} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:109
#       outcol[1] = tmp;
	compassign	___400_outcol $const18 ___402_tmp 	%line{109} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:111
#   if (outcol[2] != 0.0) {
	compref		$tmp121 ___400_outcol $const19 	%line{111} %argrw{"wrr"}
	neq		$tmp122 $tmp121 $const1 	%argrw{"wrr"}
	if		$tmp122 203 203 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:112
#     float tmp = 1.0 - t * col2[2];
	compref		$tmp123 Color2 $const19 	%line{112} %argrw{"wrr"}
	mul		$tmp124 t $tmp123 	%argrw{"wrr"}
	sub		___403_tmp $const2 $tmp124 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:113
#     if (tmp <= 0.0)
	le		$tmp125 ___403_tmp $const1 	%line{113} %argrw{"wrr"}
	if		$tmp125 197 203 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:114
#       outcol[2] = 1.0;
	compassign	___400_outcol $const19 $const2 	%line{114} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:115
#     else if ((tmp = outcol[2] / tmp) > 1.0)
	compref		$tmp126 ___400_outcol $const19 	%line{115} %argrw{"wrr"}
	div		___403_tmp $tmp126 ___403_tmp 	%argrw{"wrr"}
	gt		$tmp127 ___403_tmp $const2 	%argrw{"wrr"}
	if		$tmp127 202 203 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:116
#       outcol[2] = 1.0;
	compassign	___400_outcol $const19 $const2 	%line{116} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:118
#       outcol[2] = tmp;
	compassign	___400_outcol $const19 ___403_tmp 	%line{118} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:121
#   return outcol;
	assign		Color ___400_outcol 	%line{121} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:300
#   if (mix_type == "burn")
	eq		$tmp128 mix_type $const32 	%line{300} %argrw{"wrr"}
	if		$tmp128 261 261 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:301
#     Color = node_mix_burn(t, Color1, Color2);
	functioncall	$const33 261 	%line{301} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:126
#   float tmp, tm = 1.0 - t;
	sub		___404_tm $const2 t 	%line{126} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:128
#   color outcol = col1;
	assign		___404_outcol Color1 	%line{128} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:130
#   tmp = tm + t * col2[0];
	compref		$tmp129 Color2 $const15 	%line{130} %argrw{"wrr"}
	mul		$tmp130 t $tmp129 	%argrw{"wrr"}
	add		___404_tmp ___404_tm $tmp130 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:131
#   if (tmp <= 0.0)
	le		$tmp131 ___404_tmp $const1 	%line{131} %argrw{"wrr"}
	if		$tmp131 215 226 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:132
#     outcol[0] = 0.0;
	compassign	___404_outcol $const15 $const1 	%line{132} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:133
#   else if ((tmp = (1.0 - (1.0 - outcol[0]) / tmp)) < 0.0)
	compref		$tmp132 ___404_outcol $const15 	%line{133} %argrw{"wrr"}
	sub		$tmp133 $const2 $tmp132 	%argrw{"wrr"}
	div		$tmp134 $tmp133 ___404_tmp 	%argrw{"wrr"}
	sub		___404_tmp $const2 $tmp134 	%argrw{"wrr"}
	lt		$tmp135 ___404_tmp $const1 	%argrw{"wrr"}
	if		$tmp135 222 226 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:134
#     outcol[0] = 0.0;
	compassign	___404_outcol $const15 $const1 	%line{134} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:135
#   else if (tmp > 1.0)
	gt		$tmp136 ___404_tmp $const2 	%line{135} %argrw{"wrr"}
	if		$tmp136 225 226 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:136
#     outcol[0] = 1.0;
	compassign	___404_outcol $const15 $const2 	%line{136} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:138
#     outcol[0] = tmp;
	compassign	___404_outcol $const15 ___404_tmp 	%line{138} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:140
#   tmp = tm + t * col2[1];
	compref		$tmp137 Color2 $const18 	%line{140} %argrw{"wrr"}
	mul		$tmp138 t $tmp137 	%argrw{"wrr"}
	add		___404_tmp ___404_tm $tmp138 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:141
#   if (tmp <= 0.0)
	le		$tmp139 ___404_tmp $const1 	%line{141} %argrw{"wrr"}
	if		$tmp139 232 243 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:142
#     outcol[1] = 0.0;
	compassign	___404_outcol $const18 $const1 	%line{142} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:143
#   else if ((tmp = (1.0 - (1.0 - outcol[1]) / tmp)) < 0.0)
	compref		$tmp140 ___404_outcol $const18 	%line{143} %argrw{"wrr"}
	sub		$tmp141 $const2 $tmp140 	%argrw{"wrr"}
	div		$tmp142 $tmp141 ___404_tmp 	%argrw{"wrr"}
	sub		___404_tmp $const2 $tmp142 	%argrw{"wrr"}
	lt		$tmp143 ___404_tmp $const1 	%argrw{"wrr"}
	if		$tmp143 239 243 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:144
#     outcol[1] = 0.0;
	compassign	___404_outcol $const18 $const1 	%line{144} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:145
#   else if (tmp > 1.0)
	gt		$tmp144 ___404_tmp $const2 	%line{145} %argrw{"wrr"}
	if		$tmp144 242 243 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:146
#     outcol[1] = 1.0;
	compassign	___404_outcol $const18 $const2 	%line{146} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:148
#     outcol[1] = tmp;
	compassign	___404_outcol $const18 ___404_tmp 	%line{148} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:150
#   tmp = tm + t * col2[2];
	compref		$tmp145 Color2 $const19 	%line{150} %argrw{"wrr"}
	mul		$tmp146 t $tmp145 	%argrw{"wrr"}
	add		___404_tmp ___404_tm $tmp146 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:151
#   if (tmp <= 0.0)
	le		$tmp147 ___404_tmp $const1 	%line{151} %argrw{"wrr"}
	if		$tmp147 249 260 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:152
#     outcol[2] = 0.0;
	compassign	___404_outcol $const19 $const1 	%line{152} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:153
#   else if ((tmp = (1.0 - (1.0 - outcol[2]) / tmp)) < 0.0)
	compref		$tmp148 ___404_outcol $const19 	%line{153} %argrw{"wrr"}
	sub		$tmp149 $const2 $tmp148 	%argrw{"wrr"}
	div		$tmp150 $tmp149 ___404_tmp 	%argrw{"wrr"}
	sub		___404_tmp $const2 $tmp150 	%argrw{"wrr"}
	lt		$tmp151 ___404_tmp $const1 	%argrw{"wrr"}
	if		$tmp151 256 260 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:154
#     outcol[2] = 0.0;
	compassign	___404_outcol $const19 $const1 	%line{154} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:155
#   else if (tmp > 1.0)
	gt		$tmp152 ___404_tmp $const2 	%line{155} %argrw{"wrr"}
	if		$tmp152 259 260 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:156
#     outcol[2] = 1.0;
	compassign	___404_outcol $const19 $const2 	%line{156} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:158
#     outcol[2] = tmp;
	compassign	___404_outcol $const19 ___404_tmp 	%line{158} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:160
#   return outcol;
	assign		Color ___404_outcol 	%line{160} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:302
#   if (mix_type == "hue")
	eq		$tmp153 mix_type $const34 	%line{302} %argrw{"wrr"}
	if		$tmp153 404 404 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:303
#     Color = node_mix_hue(t, Color1, Color2);
	functioncall	$const35 404 	%line{303} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:165
#   color outcol = col1;
	assign		___405_outcol Color1 	%line{165} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:166
#   color hsv2 = rgb_to_hsv(col2);
	functioncall	$const36 311 	%line{166} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp154 Color2 $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp156 Color2 $const18 	%argrw{"wrr"}
	compref		$tmp157 Color2 $const19 	%argrw{"wrr"}
	max		$tmp155 $tmp156 $tmp157 	%argrw{"wrr"}
	max		___337_cmax $tmp154 $tmp155 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp158 Color2 $const15 	%line{76} %argrw{"wrr"}
	compref		$tmp160 Color2 $const18 	%argrw{"wrr"}
	compref		$tmp161 Color2 $const19 	%argrw{"wrr"}
	min		$tmp159 $tmp160 $tmp161 	%argrw{"wrr"}
	min		___337_cmin $tmp158 $tmp159 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp162 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp162 281 283 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp163 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp163 286 310 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp164 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp165 $tmp164 Color2 	%argrw{"wrr"}
	div		___337_c $tmp165 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp166 Color2 $const15 	%line{95} %argrw{"wrr"}
	eq		$tmp167 $tmp166 ___337_cmax 	%argrw{"wrr"}
	if		$tmp167 295 306 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp168 ___337_c $const19 	%line{96} %argrw{"wrr"}
	compref		$tmp169 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp168 $tmp169 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp170 Color2 $const18 	%line{97} %argrw{"wrr"}
	eq		$tmp171 $tmp170 ___337_cmax 	%argrw{"wrr"}
	if		$tmp171 302 306 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp172 ___337_c $const15 	%line{98} %argrw{"wrr"}
	add		$tmp173 $const17 $tmp172 	%argrw{"wrr"}
	compref		$tmp174 ___337_c $const19 	%argrw{"wrr"}
	sub		___337_h $tmp173 $tmp174 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp175 ___337_c $const18 	%line{100} %argrw{"wrr"}
	add		$tmp176 $const37 $tmp175 	%argrw{"wrr"}
	compref		$tmp177 ___337_c $const15 	%argrw{"wrr"}
	sub		___337_h $tmp176 $tmp177 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const38 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp178 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp178 310 310 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___405_hsv2 ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:168
#   if (hsv2[1] != 0.0) {
	compref		$tmp179 ___405_hsv2 $const18 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{168} %argrw{"wrr"}
	neq		$tmp180 $tmp179 $const1 	%argrw{"wrr"}
	if		$tmp180 403 403 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:169
#     color hsv = rgb_to_hsv(outcol);
	functioncall	$const36 360 	%line{169} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp181 ___405_outcol $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp183 ___405_outcol $const18 	%argrw{"wrr"}
	compref		$tmp184 ___405_outcol $const19 	%argrw{"wrr"}
	max		$tmp182 $tmp183 $tmp184 	%argrw{"wrr"}
	max		___337_cmax $tmp181 $tmp182 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp185 ___405_outcol $const15 	%line{76} %argrw{"wrr"}
	compref		$tmp187 ___405_outcol $const18 	%argrw{"wrr"}
	compref		$tmp188 ___405_outcol $const19 	%argrw{"wrr"}
	min		$tmp186 $tmp187 $tmp188 	%argrw{"wrr"}
	min		___337_cmin $tmp185 $tmp186 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp189 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp189 330 332 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp190 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp190 335 359 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp191 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp192 $tmp191 ___405_outcol 	%argrw{"wrr"}
	div		___337_c $tmp192 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp193 ___405_outcol $const15 	%line{95} %argrw{"wrr"}
	eq		$tmp194 $tmp193 ___337_cmax 	%argrw{"wrr"}
	if		$tmp194 344 355 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp195 ___337_c $const19 	%line{96} %argrw{"wrr"}
	compref		$tmp196 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp195 $tmp196 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp197 ___405_outcol $const18 	%line{97} %argrw{"wrr"}
	eq		$tmp198 $tmp197 ___337_cmax 	%argrw{"wrr"}
	if		$tmp198 351 355 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp199 ___337_c $const15 	%line{98} %argrw{"wrr"}
	add		$tmp200 $const17 $tmp199 	%argrw{"wrr"}
	compref		$tmp201 ___337_c $const19 	%argrw{"wrr"}
	sub		___337_h $tmp200 $tmp201 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp202 ___337_c $const18 	%line{100} %argrw{"wrr"}
	add		$tmp203 $const37 $tmp202 	%argrw{"wrr"}
	compref		$tmp204 ___337_c $const15 	%argrw{"wrr"}
	sub		___337_h $tmp203 $tmp204 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const38 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp205 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp205 359 359 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___406_hsv ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:170
#     hsv[0] = hsv2[0];
	compref		$tmp206 ___405_hsv2 $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{170} %argrw{"wrr"}
	compassign	___406_hsv $const15 $tmp206 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:171
#     color tmp = hsv_to_rgb(hsv);
	functioncall	$const39 402 	%line{171} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:116
#   h = hsv[0];
	compref		___342_h ___406_hsv $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{116} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:117
#   s = hsv[1];
	compref		___342_s ___406_hsv $const18 	%line{117} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:118
#   v = hsv[2];
	compref		___342_v ___406_hsv $const19 	%line{118} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:120
#   if (s == 0.0) {
	eq		$tmp207 ___342_s $const1 	%line{120} %argrw{"wrr"}
	if		$tmp207 369 401 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:121
#     rgb = color(v, v, v);
	color		___342_rgb ___342_v ___342_v ___342_v 	%line{121} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:124
#     if (h == 1.0)
	eq		$tmp208 ___342_h $const2 	%line{124} %argrw{"wrr"}
	if		$tmp208 372 372 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:125
#       h = 0.0;
	assign		___342_h $const1 	%line{125} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:127
#     h *= 6.0;
	mul		___342_h ___342_h $const38 	%line{127} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:128
#     i = floor(h);
	floor		___342_i ___342_h 	%line{128} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:129
#     f = h - i;
	sub		___342_f ___342_h ___342_i 	%line{129} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:130
#     rgb = color(f, f, f);
	color		___342_rgb ___342_f ___342_f ___342_f 	%line{130} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:131
#     p = v * (1.0 - s);
	sub		$tmp209 $const2 ___342_s 	%line{131} %argrw{"wrr"}
	mul		___342_p ___342_v $tmp209 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:132
#     q = v * (1.0 - (s * f));
	mul		$tmp210 ___342_s ___342_f 	%line{132} %argrw{"wrr"}
	sub		$tmp211 $const2 $tmp210 	%argrw{"wrr"}
	mul		___342_q ___342_v $tmp211 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:133
#     t = v * (1.0 - (s * (1.0 - f)));
	sub		$tmp212 $const2 ___342_f 	%line{133} %argrw{"wrr"}
	mul		$tmp213 ___342_s $tmp212 	%argrw{"wrr"}
	sub		$tmp214 $const2 $tmp213 	%argrw{"wrr"}
	mul		___342_t ___342_v $tmp214 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:135
#     if (i == 0.0)
	eq		$tmp215 ___342_i $const1 	%line{135} %argrw{"wrr"}
	if		$tmp215 388 401 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:136
#       rgb = color(v, t, p);
	color		___342_rgb ___342_v ___342_t ___342_p 	%line{136} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:137
#     else if (i == 1.0)
	eq		$tmp216 ___342_i $const2 	%line{137} %argrw{"wrr"}
	if		$tmp216 391 401 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:138
#       rgb = color(q, v, p);
	color		___342_rgb ___342_q ___342_v ___342_p 	%line{138} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:139
#     else if (i == 2.0)
	eq		$tmp217 ___342_i $const17 	%line{139} %argrw{"wrr"}
	if		$tmp217 394 401 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:140
#       rgb = color(p, v, t);
	color		___342_rgb ___342_p ___342_v ___342_t 	%line{140} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:141
#     else if (i == 3.0)
	eq		$tmp218 ___342_i $const40 	%line{141} %argrw{"wrr"}
	if		$tmp218 397 401 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:142
#       rgb = color(p, q, v);
	color		___342_rgb ___342_p ___342_q ___342_v 	%line{142} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:143
#     else if (i == 4.0)
	eq		$tmp219 ___342_i $const37 	%line{143} %argrw{"wrr"}
	if		$tmp219 400 401 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:144
#       rgb = color(t, p, v);
	color		___342_rgb ___342_t ___342_p ___342_v 	%line{144} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:146
#       rgb = color(v, p, q);
	color		___342_rgb ___342_v ___342_p ___342_q 	%line{146} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:149
#   return rgb;
	assign		___406_tmp ___342_rgb 	%line{149} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:173
#     outcol = mix(outcol, tmp, t);
	mix		___405_outcol ___405_outcol ___406_tmp t 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{173} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:176
#   return outcol;
	assign		Color ___405_outcol 	%line{176} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:304
#   if (mix_type == "saturation")
	eq		$tmp220 mix_type $const41 	%line{304} %argrw{"wrr"}
	if		$tmp220 551 551 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:305
#     Color = node_mix_sat(t, Color1, Color2);
	functioncall	$const42 551 	%line{305} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:181
#   float tm = 1.0 - t;
	sub		___407_tm $const2 t 	%line{181} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:183
#   color outcol = col1;
	assign		___407_outcol Color1 	%line{183} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:185
#   color hsv = rgb_to_hsv(outcol);
	functioncall	$const36 455 	%line{185} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp221 ___407_outcol $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp223 ___407_outcol $const18 	%argrw{"wrr"}
	compref		$tmp224 ___407_outcol $const19 	%argrw{"wrr"}
	max		$tmp222 $tmp223 $tmp224 	%argrw{"wrr"}
	max		___337_cmax $tmp221 $tmp222 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp225 ___407_outcol $const15 	%line{76} %argrw{"wrr"}
	compref		$tmp227 ___407_outcol $const18 	%argrw{"wrr"}
	compref		$tmp228 ___407_outcol $const19 	%argrw{"wrr"}
	min		$tmp226 $tmp227 $tmp228 	%argrw{"wrr"}
	min		___337_cmin $tmp225 $tmp226 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp229 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp229 425 427 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp230 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp230 430 454 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp231 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp232 $tmp231 ___407_outcol 	%argrw{"wrr"}
	div		___337_c $tmp232 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp233 ___407_outcol $const15 	%line{95} %argrw{"wrr"}
	eq		$tmp234 $tmp233 ___337_cmax 	%argrw{"wrr"}
	if		$tmp234 439 450 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp235 ___337_c $const19 	%line{96} %argrw{"wrr"}
	compref		$tmp236 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp235 $tmp236 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp237 ___407_outcol $const18 	%line{97} %argrw{"wrr"}
	eq		$tmp238 $tmp237 ___337_cmax 	%argrw{"wrr"}
	if		$tmp238 446 450 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp239 ___337_c $const15 	%line{98} %argrw{"wrr"}
	add		$tmp240 $const17 $tmp239 	%argrw{"wrr"}
	compref		$tmp241 ___337_c $const19 	%argrw{"wrr"}
	sub		___337_h $tmp240 $tmp241 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp242 ___337_c $const18 	%line{100} %argrw{"wrr"}
	add		$tmp243 $const37 $tmp242 	%argrw{"wrr"}
	compref		$tmp244 ___337_c $const15 	%argrw{"wrr"}
	sub		___337_h $tmp243 $tmp244 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const38 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp245 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp245 454 454 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___407_hsv ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:187
#   if (hsv[1] != 0.0) {
	compref		$tmp246 ___407_hsv $const18 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{187} %argrw{"wrr"}
	neq		$tmp247 $tmp246 $const1 	%argrw{"wrr"}
	if		$tmp247 550 550 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:188
#     color hsv2 = rgb_to_hsv(col2);
	functioncall	$const36 504 	%line{188} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp248 Color2 $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp250 Color2 $const18 	%argrw{"wrr"}
	compref		$tmp251 Color2 $const19 	%argrw{"wrr"}
	max		$tmp249 $tmp250 $tmp251 	%argrw{"wrr"}
	max		___337_cmax $tmp248 $tmp249 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp252 Color2 $const15 	%line{76} %argrw{"wrr"}
	compref		$tmp254 Color2 $const18 	%argrw{"wrr"}
	compref		$tmp255 Color2 $const19 	%argrw{"wrr"}
	min		$tmp253 $tmp254 $tmp255 	%argrw{"wrr"}
	min		___337_cmin $tmp252 $tmp253 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp256 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp256 474 476 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp257 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp257 479 503 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp258 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp259 $tmp258 Color2 	%argrw{"wrr"}
	div		___337_c $tmp259 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp260 Color2 $const15 	%line{95} %argrw{"wrr"}
	eq		$tmp261 $tmp260 ___337_cmax 	%argrw{"wrr"}
	if		$tmp261 488 499 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp262 ___337_c $const19 	%line{96} %argrw{"wrr"}
	compref		$tmp263 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp262 $tmp263 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp264 Color2 $const18 	%line{97} %argrw{"wrr"}
	eq		$tmp265 $tmp264 ___337_cmax 	%argrw{"wrr"}
	if		$tmp265 495 499 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp266 ___337_c $const15 	%line{98} %argrw{"wrr"}
	add		$tmp267 $const17 $tmp266 	%argrw{"wrr"}
	compref		$tmp268 ___337_c $const19 	%argrw{"wrr"}
	sub		___337_h $tmp267 $tmp268 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp269 ___337_c $const18 	%line{100} %argrw{"wrr"}
	add		$tmp270 $const37 $tmp269 	%argrw{"wrr"}
	compref		$tmp271 ___337_c $const15 	%argrw{"wrr"}
	sub		___337_h $tmp270 $tmp271 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const38 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp272 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp272 503 503 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___408_hsv2 ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:190
#     hsv[1] = tm * hsv[1] + t * hsv2[1];
	compref		$tmp273 ___407_hsv $const18 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{190} %argrw{"wrr"}
	mul		$tmp274 ___407_tm $tmp273 	%argrw{"wrr"}
	compref		$tmp275 ___408_hsv2 $const18 	%argrw{"wrr"}
	mul		$tmp276 t $tmp275 	%argrw{"wrr"}
	add		$tmp277 $tmp274 $tmp276 	%argrw{"wrr"}
	compassign	___407_hsv $const18 $tmp277 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:191
#     outcol = hsv_to_rgb(hsv);
	functioncall	$const39 550 	%line{191} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:116
#   h = hsv[0];
	compref		___342_h ___407_hsv $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{116} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:117
#   s = hsv[1];
	compref		___342_s ___407_hsv $const18 	%line{117} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:118
#   v = hsv[2];
	compref		___342_v ___407_hsv $const19 	%line{118} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:120
#   if (s == 0.0) {
	eq		$tmp278 ___342_s $const1 	%line{120} %argrw{"wrr"}
	if		$tmp278 517 549 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:121
#     rgb = color(v, v, v);
	color		___342_rgb ___342_v ___342_v ___342_v 	%line{121} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:124
#     if (h == 1.0)
	eq		$tmp279 ___342_h $const2 	%line{124} %argrw{"wrr"}
	if		$tmp279 520 520 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:125
#       h = 0.0;
	assign		___342_h $const1 	%line{125} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:127
#     h *= 6.0;
	mul		___342_h ___342_h $const38 	%line{127} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:128
#     i = floor(h);
	floor		___342_i ___342_h 	%line{128} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:129
#     f = h - i;
	sub		___342_f ___342_h ___342_i 	%line{129} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:130
#     rgb = color(f, f, f);
	color		___342_rgb ___342_f ___342_f ___342_f 	%line{130} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:131
#     p = v * (1.0 - s);
	sub		$tmp280 $const2 ___342_s 	%line{131} %argrw{"wrr"}
	mul		___342_p ___342_v $tmp280 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:132
#     q = v * (1.0 - (s * f));
	mul		$tmp281 ___342_s ___342_f 	%line{132} %argrw{"wrr"}
	sub		$tmp282 $const2 $tmp281 	%argrw{"wrr"}
	mul		___342_q ___342_v $tmp282 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:133
#     t = v * (1.0 - (s * (1.0 - f)));
	sub		$tmp283 $const2 ___342_f 	%line{133} %argrw{"wrr"}
	mul		$tmp284 ___342_s $tmp283 	%argrw{"wrr"}
	sub		$tmp285 $const2 $tmp284 	%argrw{"wrr"}
	mul		___342_t ___342_v $tmp285 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:135
#     if (i == 0.0)
	eq		$tmp286 ___342_i $const1 	%line{135} %argrw{"wrr"}
	if		$tmp286 536 549 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:136
#       rgb = color(v, t, p);
	color		___342_rgb ___342_v ___342_t ___342_p 	%line{136} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:137
#     else if (i == 1.0)
	eq		$tmp287 ___342_i $const2 	%line{137} %argrw{"wrr"}
	if		$tmp287 539 549 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:138
#       rgb = color(q, v, p);
	color		___342_rgb ___342_q ___342_v ___342_p 	%line{138} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:139
#     else if (i == 2.0)
	eq		$tmp288 ___342_i $const17 	%line{139} %argrw{"wrr"}
	if		$tmp288 542 549 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:140
#       rgb = color(p, v, t);
	color		___342_rgb ___342_p ___342_v ___342_t 	%line{140} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:141
#     else if (i == 3.0)
	eq		$tmp289 ___342_i $const40 	%line{141} %argrw{"wrr"}
	if		$tmp289 545 549 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:142
#       rgb = color(p, q, v);
	color		___342_rgb ___342_p ___342_q ___342_v 	%line{142} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:143
#     else if (i == 4.0)
	eq		$tmp290 ___342_i $const37 	%line{143} %argrw{"wrr"}
	if		$tmp290 548 549 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:144
#       rgb = color(t, p, v);
	color		___342_rgb ___342_t ___342_p ___342_v 	%line{144} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:146
#       rgb = color(v, p, q);
	color		___342_rgb ___342_v ___342_p ___342_q 	%line{146} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:149
#   return rgb;
	assign		___407_outcol ___342_rgb 	%line{149} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:194
#   return outcol;
	assign		Color ___407_outcol 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{194} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:306
#   if (mix_type == "value")
	eq		$tmp291 mix_type $const43 	%line{306} %argrw{"wrr"}
	if		$tmp291 693 693 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:307
#     Color = node_mix_val(t, Color1, Color2);
	functioncall	$const44 693 	%line{307} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:199
#   float tm = 1.0 - t;
	sub		___409_tm $const2 t 	%line{199} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:201
#   color hsv = rgb_to_hsv(col1);
	functioncall	$const36 601 	%line{201} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp292 Color1 $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp294 Color1 $const18 	%argrw{"wrr"}
	compref		$tmp295 Color1 $const19 	%argrw{"wrr"}
	max		$tmp293 $tmp294 $tmp295 	%argrw{"wrr"}
	max		___337_cmax $tmp292 $tmp293 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp296 Color1 $const15 	%line{76} %argrw{"wrr"}
	compref		$tmp298 Color1 $const18 	%argrw{"wrr"}
	compref		$tmp299 Color1 $const19 	%argrw{"wrr"}
	min		$tmp297 $tmp298 $tmp299 	%argrw{"wrr"}
	min		___337_cmin $tmp296 $tmp297 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp300 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp300 571 573 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp301 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp301 576 600 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp302 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp303 $tmp302 Color1 	%argrw{"wrr"}
	div		___337_c $tmp303 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp304 Color1 $const15 	%line{95} %argrw{"wrr"}
	eq		$tmp305 $tmp304 ___337_cmax 	%argrw{"wrr"}
	if		$tmp305 585 596 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp306 ___337_c $const19 	%line{96} %argrw{"wrr"}
	compref		$tmp307 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp306 $tmp307 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp308 Color1 $const18 	%line{97} %argrw{"wrr"}
	eq		$tmp309 $tmp308 ___337_cmax 	%argrw{"wrr"}
	if		$tmp309 592 596 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp310 ___337_c $const15 	%line{98} %argrw{"wrr"}
	add		$tmp311 $const17 $tmp310 	%argrw{"wrr"}
	compref		$tmp312 ___337_c $const19 	%argrw{"wrr"}
	sub		___337_h $tmp311 $tmp312 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp313 ___337_c $const18 	%line{100} %argrw{"wrr"}
	add		$tmp314 $const37 $tmp313 	%argrw{"wrr"}
	compref		$tmp315 ___337_c $const15 	%argrw{"wrr"}
	sub		___337_h $tmp314 $tmp315 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const38 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp316 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp316 600 600 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___409_hsv ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:202
#   color hsv2 = rgb_to_hsv(col2);
	functioncall	$const36 647 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{202} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp317 Color2 $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp319 Color2 $const18 	%argrw{"wrr"}
	compref		$tmp320 Color2 $const19 	%argrw{"wrr"}
	max		$tmp318 $tmp319 $tmp320 	%argrw{"wrr"}
	max		___337_cmax $tmp317 $tmp318 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp321 Color2 $const15 	%line{76} %argrw{"wrr"}
	compref		$tmp323 Color2 $const18 	%argrw{"wrr"}
	compref		$tmp324 Color2 $const19 	%argrw{"wrr"}
	min		$tmp322 $tmp323 $tmp324 	%argrw{"wrr"}
	min		___337_cmin $tmp321 $tmp322 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp325 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp325 617 619 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp326 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp326 622 646 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp327 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp328 $tmp327 Color2 	%argrw{"wrr"}
	div		___337_c $tmp328 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp329 Color2 $const15 	%line{95} %argrw{"wrr"}
	eq		$tmp330 $tmp329 ___337_cmax 	%argrw{"wrr"}
	if		$tmp330 631 642 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp331 ___337_c $const19 	%line{96} %argrw{"wrr"}
	compref		$tmp332 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp331 $tmp332 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp333 Color2 $const18 	%line{97} %argrw{"wrr"}
	eq		$tmp334 $tmp333 ___337_cmax 	%argrw{"wrr"}
	if		$tmp334 638 642 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp335 ___337_c $const15 	%line{98} %argrw{"wrr"}
	add		$tmp336 $const17 $tmp335 	%argrw{"wrr"}
	compref		$tmp337 ___337_c $const19 	%argrw{"wrr"}
	sub		___337_h $tmp336 $tmp337 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp338 ___337_c $const18 	%line{100} %argrw{"wrr"}
	add		$tmp339 $const37 $tmp338 	%argrw{"wrr"}
	compref		$tmp340 ___337_c $const15 	%argrw{"wrr"}
	sub		___337_h $tmp339 $tmp340 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const38 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp341 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp341 646 646 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___409_hsv2 ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:204
#   hsv[2] = tm * hsv[2] + t * hsv2[2];
	compref		$tmp342 ___409_hsv $const19 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{204} %argrw{"wrr"}
	mul		$tmp343 ___409_tm $tmp342 	%argrw{"wrr"}
	compref		$tmp344 ___409_hsv2 $const19 	%argrw{"wrr"}
	mul		$tmp345 t $tmp344 	%argrw{"wrr"}
	add		$tmp346 $tmp343 $tmp345 	%argrw{"wrr"}
	compassign	___409_hsv $const19 $tmp346 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:206
#   return hsv_to_rgb(hsv);
	functioncall	$const39 693 	%line{206} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:116
#   h = hsv[0];
	compref		___342_h ___409_hsv $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{116} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:117
#   s = hsv[1];
	compref		___342_s ___409_hsv $const18 	%line{117} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:118
#   v = hsv[2];
	compref		___342_v ___409_hsv $const19 	%line{118} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:120
#   if (s == 0.0) {
	eq		$tmp347 ___342_s $const1 	%line{120} %argrw{"wrr"}
	if		$tmp347 660 692 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:121
#     rgb = color(v, v, v);
	color		___342_rgb ___342_v ___342_v ___342_v 	%line{121} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:124
#     if (h == 1.0)
	eq		$tmp348 ___342_h $const2 	%line{124} %argrw{"wrr"}
	if		$tmp348 663 663 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:125
#       h = 0.0;
	assign		___342_h $const1 	%line{125} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:127
#     h *= 6.0;
	mul		___342_h ___342_h $const38 	%line{127} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:128
#     i = floor(h);
	floor		___342_i ___342_h 	%line{128} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:129
#     f = h - i;
	sub		___342_f ___342_h ___342_i 	%line{129} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:130
#     rgb = color(f, f, f);
	color		___342_rgb ___342_f ___342_f ___342_f 	%line{130} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:131
#     p = v * (1.0 - s);
	sub		$tmp349 $const2 ___342_s 	%line{131} %argrw{"wrr"}
	mul		___342_p ___342_v $tmp349 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:132
#     q = v * (1.0 - (s * f));
	mul		$tmp350 ___342_s ___342_f 	%line{132} %argrw{"wrr"}
	sub		$tmp351 $const2 $tmp350 	%argrw{"wrr"}
	mul		___342_q ___342_v $tmp351 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:133
#     t = v * (1.0 - (s * (1.0 - f)));
	sub		$tmp352 $const2 ___342_f 	%line{133} %argrw{"wrr"}
	mul		$tmp353 ___342_s $tmp352 	%argrw{"wrr"}
	sub		$tmp354 $const2 $tmp353 	%argrw{"wrr"}
	mul		___342_t ___342_v $tmp354 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:135
#     if (i == 0.0)
	eq		$tmp355 ___342_i $const1 	%line{135} %argrw{"wrr"}
	if		$tmp355 679 692 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:136
#       rgb = color(v, t, p);
	color		___342_rgb ___342_v ___342_t ___342_p 	%line{136} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:137
#     else if (i == 1.0)
	eq		$tmp356 ___342_i $const2 	%line{137} %argrw{"wrr"}
	if		$tmp356 682 692 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:138
#       rgb = color(q, v, p);
	color		___342_rgb ___342_q ___342_v ___342_p 	%line{138} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:139
#     else if (i == 2.0)
	eq		$tmp357 ___342_i $const17 	%line{139} %argrw{"wrr"}
	if		$tmp357 685 692 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:140
#       rgb = color(p, v, t);
	color		___342_rgb ___342_p ___342_v ___342_t 	%line{140} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:141
#     else if (i == 3.0)
	eq		$tmp358 ___342_i $const40 	%line{141} %argrw{"wrr"}
	if		$tmp358 688 692 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:142
#       rgb = color(p, q, v);
	color		___342_rgb ___342_p ___342_q ___342_v 	%line{142} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:143
#     else if (i == 4.0)
	eq		$tmp359 ___342_i $const37 	%line{143} %argrw{"wrr"}
	if		$tmp359 691 692 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:144
#       rgb = color(t, p, v);
	color		___342_rgb ___342_t ___342_p ___342_v 	%line{144} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:146
#       rgb = color(v, p, q);
	color		___342_rgb ___342_v ___342_p ___342_q 	%line{146} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:149
#   return rgb;
	assign		Color ___342_rgb 	%line{149} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:308
#   if (mix_type == "color")
	eq		$tmp360 mix_type $const45 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{308} %argrw{"wrr"}
	if		$tmp360 838 838 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:309
#     Color = node_mix_color(t, Color1, Color2);
	functioncall	$const46 838 	%line{309} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:211
#   color outcol = col1;
	assign		___410_outcol Color1 	%line{211} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:212
#   color hsv2 = rgb_to_hsv(col2);
	functioncall	$const36 743 	%line{212} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp361 Color2 $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp363 Color2 $const18 	%argrw{"wrr"}
	compref		$tmp364 Color2 $const19 	%argrw{"wrr"}
	max		$tmp362 $tmp363 $tmp364 	%argrw{"wrr"}
	max		___337_cmax $tmp361 $tmp362 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp365 Color2 $const15 	%line{76} %argrw{"wrr"}
	compref		$tmp367 Color2 $const18 	%argrw{"wrr"}
	compref		$tmp368 Color2 $const19 	%argrw{"wrr"}
	min		$tmp366 $tmp367 $tmp368 	%argrw{"wrr"}
	min		___337_cmin $tmp365 $tmp366 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp369 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp369 713 715 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp370 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp370 718 742 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp371 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp372 $tmp371 Color2 	%argrw{"wrr"}
	div		___337_c $tmp372 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp373 Color2 $const15 	%line{95} %argrw{"wrr"}
	eq		$tmp374 $tmp373 ___337_cmax 	%argrw{"wrr"}
	if		$tmp374 727 738 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp375 ___337_c $const19 	%line{96} %argrw{"wrr"}
	compref		$tmp376 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp375 $tmp376 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp377 Color2 $const18 	%line{97} %argrw{"wrr"}
	eq		$tmp378 $tmp377 ___337_cmax 	%argrw{"wrr"}
	if		$tmp378 734 738 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp379 ___337_c $const15 	%line{98} %argrw{"wrr"}
	add		$tmp380 $const17 $tmp379 	%argrw{"wrr"}
	compref		$tmp381 ___337_c $const19 	%argrw{"wrr"}
	sub		___337_h $tmp380 $tmp381 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp382 ___337_c $const18 	%line{100} %argrw{"wrr"}
	add		$tmp383 $const37 $tmp382 	%argrw{"wrr"}
	compref		$tmp384 ___337_c $const15 	%argrw{"wrr"}
	sub		___337_h $tmp383 $tmp384 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const38 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp385 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp385 742 742 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___410_hsv2 ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:214
#   if (hsv2[1] != 0.0) {
	compref		$tmp386 ___410_hsv2 $const18 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{214} %argrw{"wrr"}
	neq		$tmp387 $tmp386 $const1 	%argrw{"wrr"}
	if		$tmp387 837 837 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:215
#     color hsv = rgb_to_hsv(outcol);
	functioncall	$const36 792 	%line{215} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:75
#   cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		$tmp388 ___410_outcol $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{75} %argrw{"wrr"}
	compref		$tmp390 ___410_outcol $const18 	%argrw{"wrr"}
	compref		$tmp391 ___410_outcol $const19 	%argrw{"wrr"}
	max		$tmp389 $tmp390 $tmp391 	%argrw{"wrr"}
	max		___337_cmax $tmp388 $tmp389 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:76
#   cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		$tmp392 ___410_outcol $const15 	%line{76} %argrw{"wrr"}
	compref		$tmp394 ___410_outcol $const18 	%argrw{"wrr"}
	compref		$tmp395 ___410_outcol $const19 	%argrw{"wrr"}
	min		$tmp393 $tmp394 $tmp395 	%argrw{"wrr"}
	min		___337_cmin $tmp392 $tmp393 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:77
#   cdelta = cmax - cmin;
	sub		___337_cdelta ___337_cmax ___337_cmin 	%line{77} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:79
#   v = cmax;
	assign		___337_v ___337_cmax 	%line{79} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:81
#   if (cmax != 0.0) {
	neq		$tmp396 ___337_cmax $const1 	%line{81} %argrw{"wrr"}
	if		$tmp396 762 764 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:82
#     s = cdelta / cmax;
	div		___337_s ___337_cdelta ___337_cmax 	%line{82} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:85
#     s = 0.0;
	assign		___337_s $const1 	%line{85} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:86
#     h = 0.0;
	assign		___337_h $const1 	%line{86} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:89
#   if (s == 0.0) {
	eq		$tmp397 ___337_s $const1 	%line{89} %argrw{"wrr"}
	if		$tmp397 767 791 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:90
#     h = 0.0;
	assign		___337_h $const1 	%line{90} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:93
#     c = (color(cmax, cmax, cmax) - rgb) / cdelta;
	color		$tmp398 ___337_cmax ___337_cmax ___337_cmax 	%line{93} %argrw{"wrrr"}
	sub		$tmp399 $tmp398 ___410_outcol 	%argrw{"wrr"}
	div		___337_c $tmp399 ___337_cdelta 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:95
#     if (rgb[0] == cmax)
	compref		$tmp400 ___410_outcol $const15 	%line{95} %argrw{"wrr"}
	eq		$tmp401 $tmp400 ___337_cmax 	%argrw{"wrr"}
	if		$tmp401 776 787 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:96
#       h = c[2] - c[1];
	compref		$tmp402 ___337_c $const19 	%line{96} %argrw{"wrr"}
	compref		$tmp403 ___337_c $const18 	%argrw{"wrr"}
	sub		___337_h $tmp402 $tmp403 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:97
#     else if (rgb[1] == cmax)
	compref		$tmp404 ___410_outcol $const18 	%line{97} %argrw{"wrr"}
	eq		$tmp405 $tmp404 ___337_cmax 	%argrw{"wrr"}
	if		$tmp405 783 787 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:98
#       h = 2.0 + c[0] - c[2];
	compref		$tmp406 ___337_c $const15 	%line{98} %argrw{"wrr"}
	add		$tmp407 $const17 $tmp406 	%argrw{"wrr"}
	compref		$tmp408 ___337_c $const19 	%argrw{"wrr"}
	sub		___337_h $tmp407 $tmp408 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:100
#       h = 4.0 + c[1] - c[0];
	compref		$tmp409 ___337_c $const18 	%line{100} %argrw{"wrr"}
	add		$tmp410 $const37 $tmp409 	%argrw{"wrr"}
	compref		$tmp411 ___337_c $const15 	%argrw{"wrr"}
	sub		___337_h $tmp410 $tmp411 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:102
#     h /= 6.0;
	div		___337_h ___337_h $const38 	%line{102} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:104
#     if (h < 0.0)
	lt		$tmp412 ___337_h $const1 	%line{104} %argrw{"wrr"}
	if		$tmp412 791 791 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:105
#       h += 1.0;
	add		___337_h ___337_h $const2 	%line{105} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:108
#   return color(h, s, v);
	color		___411_hsv ___337_h ___337_s ___337_v 	%line{108} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:216
#     hsv[0] = hsv2[0];
	compref		$tmp413 ___410_hsv2 $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{216} %argrw{"wrr"}
	compassign	___411_hsv $const15 $tmp413 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:217
#     hsv[1] = hsv2[1];
	compref		$tmp414 ___410_hsv2 $const18 	%line{217} %argrw{"wrr"}
	compassign	___411_hsv $const18 $tmp414 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:218
#     color tmp = hsv_to_rgb(hsv);
	functioncall	$const39 836 	%line{218} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:116
#   h = hsv[0];
	compref		___342_h ___411_hsv $const15 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h"} %line{116} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:117
#   s = hsv[1];
	compref		___342_s ___411_hsv $const18 	%line{117} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:118
#   v = hsv[2];
	compref		___342_v ___411_hsv $const19 	%line{118} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:120
#   if (s == 0.0) {
	eq		$tmp415 ___342_s $const1 	%line{120} %argrw{"wrr"}
	if		$tmp415 803 835 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:121
#     rgb = color(v, v, v);
	color		___342_rgb ___342_v ___342_v ___342_v 	%line{121} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:124
#     if (h == 1.0)
	eq		$tmp416 ___342_h $const2 	%line{124} %argrw{"wrr"}
	if		$tmp416 806 806 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:125
#       h = 0.0;
	assign		___342_h $const1 	%line{125} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:127
#     h *= 6.0;
	mul		___342_h ___342_h $const38 	%line{127} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:128
#     i = floor(h);
	floor		___342_i ___342_h 	%line{128} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:129
#     f = h - i;
	sub		___342_f ___342_h ___342_i 	%line{129} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:130
#     rgb = color(f, f, f);
	color		___342_rgb ___342_f ___342_f ___342_f 	%line{130} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:131
#     p = v * (1.0 - s);
	sub		$tmp417 $const2 ___342_s 	%line{131} %argrw{"wrr"}
	mul		___342_p ___342_v $tmp417 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:132
#     q = v * (1.0 - (s * f));
	mul		$tmp418 ___342_s ___342_f 	%line{132} %argrw{"wrr"}
	sub		$tmp419 $const2 $tmp418 	%argrw{"wrr"}
	mul		___342_q ___342_v $tmp419 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:133
#     t = v * (1.0 - (s * (1.0 - f)));
	sub		$tmp420 $const2 ___342_f 	%line{133} %argrw{"wrr"}
	mul		$tmp421 ___342_s $tmp420 	%argrw{"wrr"}
	sub		$tmp422 $const2 $tmp421 	%argrw{"wrr"}
	mul		___342_t ___342_v $tmp422 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:135
#     if (i == 0.0)
	eq		$tmp423 ___342_i $const1 	%line{135} %argrw{"wrr"}
	if		$tmp423 822 835 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:136
#       rgb = color(v, t, p);
	color		___342_rgb ___342_v ___342_t ___342_p 	%line{136} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:137
#     else if (i == 1.0)
	eq		$tmp424 ___342_i $const2 	%line{137} %argrw{"wrr"}
	if		$tmp424 825 835 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:138
#       rgb = color(q, v, p);
	color		___342_rgb ___342_q ___342_v ___342_p 	%line{138} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:139
#     else if (i == 2.0)
	eq		$tmp425 ___342_i $const17 	%line{139} %argrw{"wrr"}
	if		$tmp425 828 835 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:140
#       rgb = color(p, v, t);
	color		___342_rgb ___342_p ___342_v ___342_t 	%line{140} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:141
#     else if (i == 3.0)
	eq		$tmp426 ___342_i $const40 	%line{141} %argrw{"wrr"}
	if		$tmp426 831 835 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:142
#       rgb = color(p, q, v);
	color		___342_rgb ___342_p ___342_q ___342_v 	%line{142} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:143
#     else if (i == 4.0)
	eq		$tmp427 ___342_i $const37 	%line{143} %argrw{"wrr"}
	if		$tmp427 834 835 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:144
#       rgb = color(t, p, v);
	color		___342_rgb ___342_t ___342_p ___342_v 	%line{144} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:146
#       rgb = color(v, p, q);
	color		___342_rgb ___342_v ___342_p ___342_q 	%line{146} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders\\node_color.h:149
#   return rgb;
	assign		___411_tmp ___342_rgb 	%line{149} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:220
#     outcol = mix(outcol, tmp, t);
	mix		___410_outcol ___410_outcol ___411_tmp t 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{220} %argrw{"wrrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:223
#   return outcol;
	assign		Color ___410_outcol 	%line{223} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:310
#   if (mix_type == "soft_light")
	eq		$tmp428 mix_type $const47 	%line{310} %argrw{"wrr"}
	if		$tmp428 855 855 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:311
#     Color = node_mix_soft(t, Color1, Color2);
	functioncall	$const48 855 	%line{311} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:228
#   float tm = 1.0 - t;
	sub		___412_tm $const2 t 	%line{228} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:230
#   color one = color(1.0);
	assign		___412_one $const12 	%line{230} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:231
#   color scr = one - (one - col2) * (one - col1);
	sub		$tmp429 ___412_one Color2 	%line{231} %argrw{"wrr"}
	sub		$tmp430 ___412_one Color1 	%argrw{"wrr"}
	mul		$tmp431 $tmp429 $tmp430 	%argrw{"wrr"}
	sub		___412_scr ___412_one $tmp431 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:233
#   return tm * col1 + t * ((one - col1) * col2 * col1 + col1 * scr);
	mul		$tmp432 ___412_tm Color1 	%line{233} %argrw{"wrr"}
	sub		$tmp433 ___412_one Color1 	%argrw{"wrr"}
	mul		$tmp434 $tmp433 Color2 	%argrw{"wrr"}
	mul		$tmp435 $tmp434 Color1 	%argrw{"wrr"}
	mul		$tmp436 Color1 ___412_scr 	%argrw{"wrr"}
	add		$tmp437 $tmp435 $tmp436 	%argrw{"wrr"}
	mul		$tmp438 t $tmp437 	%argrw{"wrr"}
	add		Color $tmp432 $tmp438 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:312
#   if (mix_type == "linear_light")
	eq		$tmp439 mix_type $const49 	%line{312} %argrw{"wrr"}
	if		$tmp439 911 911 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:313
#     Color = node_mix_linear(t, Color1, Color2);
	functioncall	$const50 911 	%line{313} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:238
#   color outcol = col1;
	assign		___413_outcol Color1 	%line{238} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:240
#   if (col2[0] > 0.5)
	compref		$tmp440 Color2 $const15 	%line{240} %argrw{"wrr"}
	gt		$tmp441 $tmp440 $const16 	%argrw{"wrr"}
	if		$tmp441 869 876 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:241
#     outcol[0] = col1[0] + t * (2.0 * (col2[0] - 0.5));
	compref		$tmp442 Color1 $const15 	%line{241} %argrw{"wrr"}
	compref		$tmp443 Color2 $const15 	%argrw{"wrr"}
	sub		$tmp444 $tmp443 $const16 	%argrw{"wrr"}
	mul		$tmp445 $const17 $tmp444 	%argrw{"wrr"}
	mul		$tmp446 t $tmp445 	%argrw{"wrr"}
	add		$tmp447 $tmp442 $tmp446 	%argrw{"wrr"}
	compassign	___413_outcol $const15 $tmp447 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:243
#     outcol[0] = col1[0] + t * (2.0 * (col2[0]) - 1.0);
	compref		$tmp448 Color1 $const15 	%line{243} %argrw{"wrr"}
	compref		$tmp449 Color2 $const15 	%argrw{"wrr"}
	mul		$tmp450 $const17 $tmp449 	%argrw{"wrr"}
	sub		$tmp451 $tmp450 $const2 	%argrw{"wrr"}
	mul		$tmp452 t $tmp451 	%argrw{"wrr"}
	add		$tmp453 $tmp448 $tmp452 	%argrw{"wrr"}
	compassign	___413_outcol $const15 $tmp453 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:245
#   if (col2[1] > 0.5)
	compref		$tmp454 Color2 $const18 	%line{245} %argrw{"wrr"}
	gt		$tmp455 $tmp454 $const16 	%argrw{"wrr"}
	if		$tmp455 886 893 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:246
#     outcol[1] = col1[1] + t * (2.0 * (col2[1] - 0.5));
	compref		$tmp456 Color1 $const18 	%line{246} %argrw{"wrr"}
	compref		$tmp457 Color2 $const18 	%argrw{"wrr"}
	sub		$tmp458 $tmp457 $const16 	%argrw{"wrr"}
	mul		$tmp459 $const17 $tmp458 	%argrw{"wrr"}
	mul		$tmp460 t $tmp459 	%argrw{"wrr"}
	add		$tmp461 $tmp456 $tmp460 	%argrw{"wrr"}
	compassign	___413_outcol $const18 $tmp461 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:248
#     outcol[1] = col1[1] + t * (2.0 * (col2[1]) - 1.0);
	compref		$tmp462 Color1 $const18 	%line{248} %argrw{"wrr"}
	compref		$tmp463 Color2 $const18 	%argrw{"wrr"}
	mul		$tmp464 $const17 $tmp463 	%argrw{"wrr"}
	sub		$tmp465 $tmp464 $const2 	%argrw{"wrr"}
	mul		$tmp466 t $tmp465 	%argrw{"wrr"}
	add		$tmp467 $tmp462 $tmp466 	%argrw{"wrr"}
	compassign	___413_outcol $const18 $tmp467 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:250
#   if (col2[2] > 0.5)
	compref		$tmp468 Color2 $const19 	%line{250} %argrw{"wrr"}
	gt		$tmp469 $tmp468 $const16 	%argrw{"wrr"}
	if		$tmp469 903 910 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:251
#     outcol[2] = col1[2] + t * (2.0 * (col2[2] - 0.5));
	compref		$tmp470 Color1 $const19 	%line{251} %argrw{"wrr"}
	compref		$tmp471 Color2 $const19 	%argrw{"wrr"}
	sub		$tmp472 $tmp471 $const16 	%argrw{"wrr"}
	mul		$tmp473 $const17 $tmp472 	%argrw{"wrr"}
	mul		$tmp474 t $tmp473 	%argrw{"wrr"}
	add		$tmp475 $tmp470 $tmp474 	%argrw{"wrr"}
	compassign	___413_outcol $const19 $tmp475 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:253
#     outcol[2] = col1[2] + t * (2.0 * (col2[2]) - 1.0);
	compref		$tmp476 Color1 $const19 	%line{253} %argrw{"wrr"}
	compref		$tmp477 Color2 $const19 	%argrw{"wrr"}
	mul		$tmp478 $const17 $tmp477 	%argrw{"wrr"}
	sub		$tmp479 $tmp478 $const2 	%argrw{"wrr"}
	mul		$tmp480 t $tmp479 	%argrw{"wrr"}
	add		$tmp481 $tmp476 $tmp480 	%argrw{"wrr"}
	compassign	___413_outcol $const19 $tmp481 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:255
#   return outcol;
	assign		Color ___413_outcol 	%line{255} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:315
#   if (use_clamp)
	if		use_clamp 930 930 	%line{315} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:316
#     Color = node_mix_clamp(Color);
	functioncall	$const51 930 	%line{316} %argrw{"r"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:260
#   color outcol = col;
	assign		___414_outcol Color 	%line{260} %argrw{"wr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:262
#   outcol[0] = clamp(col[0], 0.0, 1.0);
	compref		$tmp483 Color $const15 	%line{262} %argrw{"wrr"}
	functioncall	$const3 918 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp484 $tmp483 $const2 	%filename{"F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp482 $tmp484 $const1 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:262
#   outcol[0] = clamp(col[0], 0.0, 1.0);
	compassign	___414_outcol $const15 $tmp482 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{262} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:263
#   outcol[1] = clamp(col[1], 0.0, 1.0);
	compref		$tmp486 Color $const18 	%line{263} %argrw{"wrr"}
	functioncall	$const3 923 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp487 $tmp486 $const2 	%filename{"F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp485 $tmp487 $const1 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:263
#   outcol[1] = clamp(col[1], 0.0, 1.0);
	compassign	___414_outcol $const18 $tmp485 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{263} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:264
#   outcol[2] = clamp(col[2], 0.0, 1.0);
	compref		$tmp489 Color $const19 	%line{264} %argrw{"wrr"}
	functioncall	$const3 928 	%argrw{"r"}
# F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp490 $tmp489 $const2 	%filename{"F:/Repositories/blenderRepo/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp488 $tmp490 $const1 	%argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:264
#   outcol[2] = clamp(col[2], 0.0, 1.0);
	compassign	___414_outcol $const19 $tmp488 	%filename{"F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl"} %line{264} %argrw{"wrr"}
# F:/Repositories/blenderRepo/blender/intern/cycles/kernel/osl/shaders/node_mix.osl:266
#   return outcol;
	assign		Color ___414_outcol 	%line{266} %argrw{"wr"}
	end
