OpenShadingLanguage 1.00
# Compiled by oslc 1.13.7.0
# options: -q -O2 -IF:/Repositories/cycles_repo/cycles/src/kernel/osl/shaders -IF:/Repositories/cycles_repo/cycles/lib/legacy/windows_x64/osl/share/OSL/shaders -o F:/Repositories/cycles_repo/cycles/build/src/kernel/osl/shaders/node_mix_vector.oso
shader node_mix_vector
param	int	use_clamp	0		%read{0,0} %write{2147483647,-1}
param	float	Factor	0.5		%read{2,4} %write{2147483647,-1}
param	vector	A	0 0 0		%read{5,5} %write{2147483647,-1}
param	vector	B	0 0 0		%read{5,5} %write{2147483647,-1}
oparam	vector	Result	0 0 0		%read{2147483647,-1} %write{5,5}
local	float	t	%read{5,5} %write{3,4}
const	float	$const1	0		%read{3,3} %write{2147483647,-1}
const	float	$const2	1		%read{2,2} %write{2147483647,-1}
const	string	$const3	"clamp"		%read{1,1} %write{2147483647,-1}
temp	float	$tmp1	%read{3,3} %write{2,2}
code ___main___
# F:/Repositories/cycles_repo/cycles/src/kernel/osl/shaders/node_mix_vector.osl:13
#   float t = (use_clamp) ? clamp(Factor, 0.0, 1.0) : Factor;
	if		use_clamp 4 5 	%filename{"F:/Repositories/cycles_repo/cycles/src/kernel/osl/shaders/node_mix_vector.osl"} %line{13} %argrw{"r"}
	functioncall	$const3 4 	%argrw{"r"}
# F:/Repositories/cycles_repo/cycles/lib/legacy/windows_x64/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1 Factor $const2 	%filename{"F:/Repositories/cycles_repo/cycles/lib/legacy/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		t $tmp1 $const1 	%argrw{"wrr"}
# F:/Repositories/cycles_repo/cycles/src/kernel/osl/shaders/node_mix_vector.osl:13
#   float t = (use_clamp) ? clamp(Factor, 0.0, 1.0) : Factor;
	assign		t Factor 	%filename{"F:/Repositories/cycles_repo/cycles/src/kernel/osl/shaders/node_mix_vector.osl"} %line{13} %argrw{"wr"}
# F:/Repositories/cycles_repo/cycles/src/kernel/osl/shaders/node_mix_vector.osl:14
#   Result = mix(A, B, t);
	mix		Result A B t 	%line{14} %argrw{"wrrr"}
	end
